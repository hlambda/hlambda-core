# Constant reference in code: ENV_NODE_ENV | Default value: development
# Node.js environment variable
NODE_ENV="development"

# Constant reference in code: ENV_DISABLE_COLORS_IN_STDOUT | Default value: false
# Set to true if you want to disable colorful output to stdout, it helps if you use AWS CloudWatch.
DISABLE_COLORS_IN_STDOUT="false"

# Constant reference in code: ENV_JSON_STDOUT | Default value: false
# Set to true if you want to get JSON output to stdout, it helps if you use AWS CloudWatch.
JSON_STDOUT="false"

# Constant reference in code: ENV_LOG_LEVELS | Default value: critical,normal,verbose
# Sets up logging level: critical, normal, verbose
LOG_LEVELS="critical,normal,verbose"

# Constant reference in code: ENV_LOG_HISTORY_BUFFER_SIZE | Default value: 255
# Sets up logging history buffer size. It is a max length of the history buffer, every record is the call of log function, that can contain multi-line text. (Default: 255)
LOG_HISTORY_BUFFER_SIZE="255"

# Constant reference in code: ENV_EXPRESS_REQUEST_LOG_HISTORY_BUFFER_SIZE | Default value: 255
# Sets up logging history buffer size. It is a max length of the history buffer, every record is the record of the request. (Default: 255)
EXPRESS_REQUEST_LOG_HISTORY_BUFFER_SIZE="255"

# Constant reference in code: ENV_ENABLE_REQUEST_HISTORY | Default value: false
# Enables request history, useful if you want to log the last n requests and be able to replay the request. (Default: false)
ENABLE_REQUEST_HISTORY="false"

# Constant reference in code: ENV_SERVER_PORT | Default value: 1331
# Server port on which express app will be hosted
SERVER_PORT="1331"

# Constant reference in code: ENV_SERVER_SOURCE_IP | Default value: 0.0.0.0
# Server source ip on which express app will be listening
SERVER_SOURCE_IP="0.0.0.0"

# Constant reference in code: ENV_MICROSERVICE_NAME | Default value: hlambda
# Used in fetching microservice specific configuration and inside error messages.
MICROSERVICE_NAME="hlambda"

# Constant reference in code: ENV_PRIVATE_KEY_CONFIGURATION | Default value: __INSERT_YOUR_PRIVATE_KEY_CONFIGURATION__
# This is stringified JSON that contains privateKeyPassword, privateKey and optionaly publicKey base64 encoded PEM. (Use /setup route to generate one if needed)
PRIVATE_KEY_CONFIGURATION="__INSERT_YOUR_PRIVATE_KEY_CONFIGURATION__"

# Constant reference in code: ENV_SERVER_BODY_SIZE | Default value: 2mb
# Server max allowed body size from client that express app will support. (Main usecase is Apple Subscription Notifications)
SERVER_BODY_SIZE="2mb"

# Constant reference in code: ENV_SERVER_BODY_SIZE_ADMIN_CONSOLE | Default value: 50mb
# Server max allowed body size from client that express app will support for admin console.
SERVER_BODY_SIZE_ADMIN_CONSOLE="50mb"

# Constant reference in code: ENV_DISABLE_EXPRESS_BODY_PARSER | Default value: false
# The Express body parser will be disabled for all routes except the ones required for Console.
DISABLE_EXPRESS_BODY_PARSER="false"

# Constant reference in code: ENV_EXPRESS_BODY_PARSER_INCLUDE_RAW_BODY | Default value: false
# In all requests you will have req.rawBody buffer available.
EXPRESS_BODY_PARSER_INCLUDE_RAW_BODY="false"

# Constant reference in code: ENV_DISABLE_EXPRESS_COOKIE_PARSER | Default value: false
# The Express cookie parser will be disabled for all routes except the ones required for Console.
DISABLE_EXPRESS_COOKIE_PARSER="false"

# Constant reference in code: ENV_HLAMBDA_CORS_DOMAIN | Default value: *
# By default, all CORS requests to the Hlambda server are allowed. To run with more restrictive CORS settings, use this env variable. Example: `https://*.foo.bar.com:8080, http://*.localhost, http://localhost:3000, http://example.com`
HLAMBDA_CORS_DOMAIN="*"

# Constant reference in code: ENV_SERVER_HEALTH | Default value: Healthy
# Server health that can change based on different events "Healthy", "Degraded", "Unhealthy", "Advisory"
SERVER_HEALTH="Healthy"

# Constant reference in code: ENV_HLAMBDA_ADMIN_SECRET | Default value: you-must-change-me
# Master password for API management.
HLAMBDA_ADMIN_SECRET="you-must-change-me"

# Constant reference in code: ENV_HLAMBDA_DISABLE_ADMIN_SECRET | Default value: false
# Disables or enables master password for API management.
HLAMBDA_DISABLE_ADMIN_SECRET="false"

# Constant reference in code: ENV_HLAMBDA_DISABLE_CONSOLE | Default value: false
# Completely disables Console and Console API thus any metadata update.
HLAMBDA_DISABLE_CONSOLE="false"

# Constant reference in code: ENV_HLAMBDA_DISABLE_INITIAL_ROUTE_REDIRECT | Default value: false
# Disable 301 redirect from the root path to the `/console`.
HLAMBDA_DISABLE_INITIAL_ROUTE_REDIRECT="false"

# Constant reference in code: ENV_HLAMBDA_DISABLE_CONSOLE_FRONTEND | Default value: false
# Disable static serving of the frontend artefacts from hlambda's public folder.
HLAMBDA_DISABLE_CONSOLE_FRONTEND="false"

# Constant reference in code: ENV_HLAMBDA_CONSOLE_ASSETS_DIR | Default value: public
# If set it will serve console assets from that directory instead of CDN. Using CDN enables system to have lates UI and receive Console hotfixes without the need for updating image.
HLAMBDA_CONSOLE_ASSETS_DIR="public"

# Constant reference in code: ENV_HLAMBDA_METADATA_RELOAD_DEBOUNCE_MS | Default value: 1331
# Debounce ms time to wait before closing the server and reloading metadata.
HLAMBDA_METADATA_RELOAD_DEBOUNCE_MS="1331"

# Constant reference in code: ENV_HLAMBDA_GRACEFUL_SHUTDOWN_DELAY_MS | Default value: 0
# Graceful shutdown delay in ms, time to wait before closing the server (Used to give some time to the app to finish all processes after SIGINT).
HLAMBDA_GRACEFUL_SHUTDOWN_DELAY_MS="0"

# Constant reference in code: ENV_HLAMBDA_LOADED_APPS_PREFIX | Default value: 
# Prefix used for all the loaded router apps.
HLAMBDA_LOADED_APPS_PREFIX=""

# Constant reference in code: ENV_HLAMBDA_ENABLE_PUBLIC_SWAGGER | Default value: false
# Flag to enable public swagger on /docs.
HLAMBDA_ENABLE_PUBLIC_SWAGGER="false"

# Constant reference in code: ENV_HLAMBDA_PUBLIC_SWAGGER_ROUTE | Default value: /docs
# Flag to map swagger route, default `/docs`.
HLAMBDA_PUBLIC_SWAGGER_ROUTE="/docs"

# Constant reference in code: ENV_HLAMBDA_SWAGGER_UI_TOKEN_EXPIRES_IN_SECONDS | Default value: 86400
# Expires in value in seconds, time before JWT token expires and cookie is deleted on the client.
HLAMBDA_SWAGGER_UI_TOKEN_EXPIRES_IN_SECONDS="86400"

# Constant reference in code: ENV_HLAMBDA_VSCODE_UI_TOKEN_EXPIRES_IN_SECONDS | Default value: 86400
# Expires in value in seconds, time before JWT token expires and cookie is deleted on the client.
HLAMBDA_VSCODE_UI_TOKEN_EXPIRES_IN_SECONDS="86400"

# Constant reference in code: ENV_ENABLE_HLAMBDA_GIT_SYNC | Default value: false
# Turns on the GIT SYNC option, where the server will be able to sync metadata with remote repository. (Default: false)
ENABLE_HLAMBDA_GIT_SYNC="false"

# Constant reference in code: ENV_HLAMBDA_GIT_SYNC_URL | Default value: 
# Sync repository url.
HLAMBDA_GIT_SYNC_URL=""

# Constant reference in code: ENV_HLAMBDA_GIT_SYNC_USERNAME | Default value: 
# Sync repository username.
HLAMBDA_GIT_SYNC_USERNAME=""

# Constant reference in code: ENV_HLAMBDA_GIT_SYNC_PASSWORD | Default value: 
# Sync repository password.
HLAMBDA_GIT_SYNC_PASSWORD=""

# Constant reference in code: ENV_HLAMBDA_GIT_SYNC_BRANCH | Default value: master
# Sync default branch. (Default: master) If falsey value, the current HEAD branch will be used.
HLAMBDA_GIT_SYNC_BRANCH="master"

# Constant reference in code: ENV_HLAMBDA_GIT_SYNC_INTERVAL_SECONDS | Default value: 240
# When sync is enabled, system will automatically try to sync with the current branch, it will work only if there is no conflicts, to not destroy live work. (Default: 240 (4m). If set to 0, disables pooling)
HLAMBDA_GIT_SYNC_INTERVAL_SECONDS="240"

# Constant reference in code: ENV_HLAMBDA_GIT_SYNC_COMMAND | Default value: git pull
# This command will run when sync is executed. (Default: git pull)
HLAMBDA_GIT_SYNC_COMMAND="git pull"

# Constant reference in code: ENV_HLAMBDA_CONFIGURATION_LOADER_PREFIX | Default value: hlambda-config.yaml
# Sets the value for the name of the configuration file that will be loaded.
HLAMBDA_CONFIGURATION_LOADER_PREFIX="hlambda-config.yaml"

# Constant reference in code: ENV_HLAMBDA_EXPRESS_LOADER_PREFIX | Default value: router.
# Sets the value for the prefix of the router files that will be loaded.
HLAMBDA_EXPRESS_LOADER_PREFIX="router."

# Constant reference in code: ENV_HLAMBDA_ENTRYPOINT_LOADER_PREFIX | Default value: entrypoint.
# Sets the value for the prefix of the entrypoint files that will be loaded.
HLAMBDA_ENTRYPOINT_LOADER_PREFIX="entrypoint."

# Constant reference in code: ENV_HLAMBDA_ENABLE_ENVIRONMENT_BANNER | Default value: false
# Enables environment banner.
HLAMBDA_ENABLE_ENVIRONMENT_BANNER="false"

# Constant reference in code: ENV_HLAMBDA_ENVIRONMENT_BANNER_NAME | Default value: 
# Sets name to the environment banner.
HLAMBDA_ENVIRONMENT_BANNER_NAME=""

# Constant reference in code: ENV_HLAMBDA_ENVIRONMENT_BANNER_MESSAGE | Default value: 
# Sets message to the environment banner.
HLAMBDA_ENVIRONMENT_BANNER_MESSAGE=""

# Constant reference in code: ENV_HLAMBDA_ENABLE_ENVIRONMENT_BANNER_COLOR | Default value: #fea300
# Selects color of the environment banner.
HLAMBDA_ENABLE_ENVIRONMENT_BANNER_COLOR="#fea300"

# Constant reference in code: ENV_HLAMBDA_LIST_OF_PROTECTED_ENV_VARIABLES | Default value: HLAMBDA_LIST_OF_PROTECTED_ENV_VARIABLES,HLAMBDA_DISABLE_CONSOLE,HLAMBDA_ADMIN_SECRET,SERVER_PORT
# List of the env variable names that are protected from hlambda config override.
HLAMBDA_LIST_OF_PROTECTED_ENV_VARIABLES="HLAMBDA_LIST_OF_PROTECTED_ENV_VARIABLES,HLAMBDA_DISABLE_CONSOLE,HLAMBDA_ADMIN_SECRET,SERVER_PORT"

