{"version":3,"sources":["webpack://extension-editing/./node_modules/jsonc-parser/lib/esm/impl/scanner.js","webpack://extension-editing/./node_modules/jsonc-parser/lib/esm/impl/format.js","webpack://extension-editing/./node_modules/jsonc-parser/lib/esm/impl/parser.js","webpack://extension-editing/./node_modules/jsonc-parser/lib/esm/impl/edit.js","webpack://extension-editing/./node_modules/jsonc-parser/lib/esm/main.js","webpack://extension-editing/./node_modules/vscode-nls/lib/browser/main.js","webpack://extension-editing/./node_modules/vscode-nls/lib/common/common.js","webpack://extension-editing/./node_modules/vscode-nls/lib/common/ral.js","webpack://extension-editing/./src/packageDocumentHelper.ts","webpack://extension-editing/external \"vscode\"","webpack://extension-editing/webpack/bootstrap","webpack://extension-editing/webpack/runtime/define property getters","webpack://extension-editing/webpack/runtime/hasOwnProperty shorthand","webpack://extension-editing/webpack/runtime/make namespace object","webpack://extension-editing/./src/extensionEditingBrowserMain.ts"],"names":["createScanner","text","ignoreTrivia","len","length","pos","value","tokenOffset","token","lineNumber","lineStartOffset","tokenLineStartOffset","prevTokenLineStartOffset","scanError","scanHexDigits","count","exact","digits","ch","charCodeAt","scanNext","code","isWhiteSpace","String","fromCharCode","isLineBreak","result","start","substring","ch3","scanString","safeLength","commentClosed","isDigit","end","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenStartLine","getTokenStartCharacter","getTokenError","format","documentText","range","options","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","offset","isEOL","endOffset","content","i","nChars","tabSize","charAt","Math","floor","computeIndentLevel","indentValue","eol","getEOL","lineBreak","indentLevel","insertSpaces","repeat","scanner","hasError","newLineAndIndent","editOperations","addEdit","startOffset","push","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","s","indexOf","ParseOptions","parseTree","errors","DEFAULT","currentParent","type","children","parent","undefined","ensurePropertyComplete","onValue","valueNode","visit","onObjectBegin","onObjectProperty","name","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","getNodeType","onSeparator","sep","colonOffset","onError","error","findNodeAtLocation","root","path","node","_i","path_1","segment","Array","isArray","found","_a","_b","propertyNode","index","visitor","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","arg","onComment","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","allowEmptyContent","parseValue","needsComma","parseArray","parseObject","JSON","parse","e","parseLiteral","withFormatting","edit","formattingOptions","newText","applyEdit","begin","edits","edit_1","min","max","position","segments","earlyReturnException","Object","previousNode","previousNodeInst","isAtPropertyKey","setPreviousNode","pop","last","matches","pattern","k","currentProperty","previousParents","object","array","findNodeAtOffset","includeRightBound","contains","item","getNodePath","key","getNodeValue","map","obj","create","prop","replaceCh","kind","parts","replace","join","printParseErrorCode","modify","originalPath","getInsertionIndex","slice","lastSegment","existing","Error","propertyIndex","removeBegin","removeEnd","previous","stringify","newProperty","p","removalIndex","toRemove","applyEdits","__spreadArrays","this","il","arguments","r","a","j","jl","defineProperty","exports","config","loadMessageBundle","ral_1","common_1","common_2","_file","message","args","localize","apply","setPseudo","locale","toLowerCase","enumerable","get","MessageFormat","BundleFormat","default","install","freeze","isPseudo","isDefined","LocalizeInfo","match","rest","replacement","is","candidate","comment","pseudo","_key","file","opts","_ral","RAL","ral","constructor","document","provideCompletionItems","_token","location","getLocation","getText","offsetAt","provideLanguageOverridesCompletionItems","getReplaceRange","snippet","startsWith","vscode","Range","Position","line","character","Promise","resolve","newSnippetCompletionItem","label","documentation","languages","getLanguages","then","l","newSimpleCompletionItem","nodeStart","positionAt","nodeEnd","isBeforeOrEqual","isAfterOrEqual","description","insertText","CompletionItem","CompletionItemKind","Value","detail","o","SnippetString","module","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","d","definition","prototype","hasOwnProperty","Symbol","toStringTag","context","subscriptions","registerCompletionItemProvider","language","PackageDocument"],"mappings":"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","file":"extensionEditingBrowserMain.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var len = text.length;\n    var pos = 0, value = '', tokenOffset = 0, token = 16 /* Unknown */, lineNumber = 0, lineStartOffset = 0, tokenLineStartOffset = 0, prevTokenLineStartOffset = 0, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                var ch2 = text.charCodeAt(pos++);\n                switch (ch2) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch3 = scanHexDigits(4, true);\n                        if (ch3 >= 0) {\n                            result += String.fromCharCode(ch3);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        lineStartOffset = lineNumber;\n        prevTokenLineStartOffset = tokenLineStartOffset;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            lineNumber++;\n            tokenLineStartOffset = pos;\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var safeLength = len - 1; // For lookahead.\n                    var commentClosed = false;\n                    while (pos < safeLength) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                        if (isLineBreak(ch)) {\n                            if (ch === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                                pos++;\n                            }\n                            lineNumber++;\n                            tokenLineStartOffset = pos;\n                        }\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n            case 47 /* slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenStartLine: function () { return lineStartOffset; },\n        getTokenStartCharacter: function () { return tokenOffset - prevTokenLineStartOffset; },\n        getTokenError: function () { return scanError; },\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner';\nexport function format(documentText, range, options) {\n    var initialIndentLevel;\n    var formatText;\n    var formatTextStart;\n    var rangeStart;\n    var rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        var endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    var eol = getEOL(options, documentText);\n    var lineBreak = false;\n    var indentLevel = 0;\n    var indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    var scanner = createScanner(formatText, false);\n    var hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        var token = scanner.scan();\n        lineBreak = false;\n        while (token === 15 /* Trivia */ || token === 14 /* LineBreakTrivia */) {\n            lineBreak = lineBreak || (token === 14 /* LineBreakTrivia */);\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* Unknown */ || scanner.getTokenError() !== 0 /* None */;\n        return token;\n    }\n    var editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    var firstToken = scanNext();\n    if (firstToken !== 17 /* EOF */) {\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        var initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* EOF */) {\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        var secondToken = scanNext();\n        var replaceContent = '';\n        while (!lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n            // comments on the same line: keep them on the same line, but ignore them otherwise\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === 12 /* LineCommentTrivia */ ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* CloseBraceToken */) {\n            if (firstToken !== 1 /* OpenBraceToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === 4 /* CloseBracketToken */) {\n            if (firstToken !== 3 /* OpenBracketToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* OpenBracketToken */:\n                case 1 /* OpenBraceToken */:\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 5 /* CommaToken */:\n                case 12 /* LineCommentTrivia */:\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        // symbol following comment on the same line: keep on same line, separate with ' '\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* ColonToken */:\n                    replaceContent = ' ';\n                    break;\n                case 10 /* StringLiteral */:\n                    if (secondToken === 6 /* ColonToken */) {\n                        replaceContent = '';\n                        break;\n                    }\n                // fall through\n                case 7 /* NullKeyword */:\n                case 8 /* TrueKeyword */:\n                case 9 /* FalseKeyword */:\n                case 11 /* NumericLiteral */:\n                case 2 /* CloseBraceToken */:\n                case 4 /* CloseBracketToken */:\n                    if (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== 5 /* CommaToken */ && secondToken !== 17 /* EOF */) {\n                        hasError = true;\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, options) {\n    var i = 0;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner';\nvar ParseOptions;\n(function (ParseOptions) {\n    ParseOptions.DEFAULT = {\n        allowTrailingComma: false\n    };\n})(ParseOptions || (ParseOptions = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = undefined;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object',\n        parent: undefined\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.colonOffset = undefined;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.colonOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = undefined;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = undefined;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty !== null) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            ensurePropertyComplete(offset + length); // in case of a missing value for a property: make sure property is complete\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.colonOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return undefined;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return undefined;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return undefined;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return undefined;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node) {\n    if (!node.parent || !node.parent.children) {\n        return [];\n    }\n    var path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        var key = node.parent.children[0].value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        var index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.children.map(getNodeValue);\n        case 'object':\n            var obj = Object.create(null);\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var prop = _a[_i];\n                var valueNode = prop.children[1];\n                if (valueNode) {\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\n                }\n            }\n            return obj;\n        case 'null':\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n        default:\n            return undefined;\n    }\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    if (contains(node, offset, includeRightBound)) {\n        var children = node.children;\n        if (Array.isArray(children)) {\n            for (var i = 0; i < children.length && children[i].offset <= offset; i++) {\n                var item = findNodeAtOffset(children[i], offset, includeRightBound);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n        return node;\n    }\n    return undefined;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        if (options.allowEmptyContent) {\n            return true;\n        }\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== undefined) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nexport function getNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        case 'object': {\n            if (!value) {\n                return 'null';\n            }\n            else if (Array.isArray(value)) {\n                return 'array';\n            }\n            return 'object';\n        }\n        default: return 'null';\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { format, isEOL } from './format';\nimport { parseTree, findNodeAtLocation } from './parser';\nexport function removeProperty(text, path, formattingOptions) {\n    return setProperty(text, path, void 0, formattingOptions);\n}\nexport function setProperty(text, originalPath, value, formattingOptions, getInsertionIndex) {\n    var _a;\n    var path = originalPath.slice();\n    var errors = [];\n    var root = parseTree(text, errors);\n    var parent = void 0;\n    var lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = findNodeAtLocation(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = (_a = {}, _a[lastSegment] = value, _a);\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) { // delete\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        var existing = findNodeAtLocation(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) { // delete\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                var propertyIndex = parent.children.indexOf(existing.parent);\n                var removeBegin = void 0;\n                var removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    var previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        var next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n            }\n        }\n        else {\n            if (value === void 0) { // delete\n                return []; // property does not exist, nothing to do\n            }\n            var newProperty = JSON.stringify(lastSegment) + \": \" + JSON.stringify(value);\n            var index = getInsertionIndex ? getInsertionIndex(parent.children.map(function (p) { return p.children[0].value; })) : parent.children.length;\n            var edit = void 0;\n            if (index > 0) {\n                var previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        var insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            var newProperty = \"\" + JSON.stringify(value);\n            var edit = void 0;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                var previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n        else {\n            if (value === void 0 && parent.children.length >= 0) {\n                //Removal\n                var removalIndex = lastSegment;\n                var toRemove = parent.children[removalIndex];\n                var edit = void 0;\n                if (parent.children.length === 1) {\n                    // only item\n                    edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n                }\n                else if (parent.children.length - 1 === removalIndex) {\n                    // last item\n                    var previous = parent.children[removalIndex - 1];\n                    var offset = previous.offset + previous.length;\n                    var parentEndOffset = parent.offset + parent.length;\n                    edit = { offset: offset, length: parentEndOffset - 2 - offset, content: '' };\n                }\n                else {\n                    edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n                }\n                return withFormatting(text, edit, formattingOptions);\n            }\n            else {\n                throw new Error('Array modification not supported yet');\n            }\n        }\n    }\n    else {\n        throw new Error(\"Can not add \" + (typeof lastSegment !== 'number' ? 'index' : 'property') + \" to parent of type \" + parent.type);\n    }\n}\nfunction withFormatting(text, edit, formattingOptions) {\n    // apply the edit\n    var newText = applyEdit(text, edit);\n    // format the new text\n    var begin = edit.offset;\n    var end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) { // insert or remove\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !isEOL(newText, end)) {\n            end++;\n        }\n    }\n    var edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (var i = edits.length - 1; i >= 0; i--) {\n        var edit_1 = edits[i];\n        newText = applyEdit(newText, edit_1);\n        begin = Math.min(begin, edit_1.offset);\n        end = Math.max(end, edit_1.offset + edit_1.length);\n        end += edit_1.content.length - edit_1.length;\n    }\n    // create a single edit with all changes\n    var editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nexport function applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nexport function isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format';\nimport * as edit from './impl/edit';\nimport * as scanner from './impl/scanner';\nimport * as parser from './impl/parser';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore, always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the innermost node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport var findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport var getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\nexport function printParseErrorCode(code) {\n    switch (code) {\n        case 1 /* InvalidSymbol */: return 'InvalidSymbol';\n        case 2 /* InvalidNumberFormat */: return 'InvalidNumberFormat';\n        case 3 /* PropertyNameExpected */: return 'PropertyNameExpected';\n        case 4 /* ValueExpected */: return 'ValueExpected';\n        case 5 /* ColonExpected */: return 'ColonExpected';\n        case 6 /* CommaExpected */: return 'CommaExpected';\n        case 7 /* CloseBraceExpected */: return 'CloseBraceExpected';\n        case 8 /* CloseBracketExpected */: return 'CloseBracketExpected';\n        case 9 /* EndOfFileExpected */: return 'EndOfFileExpected';\n        case 10 /* InvalidCommentToken */: return 'InvalidCommentToken';\n        case 11 /* UnexpectedEndOfComment */: return 'UnexpectedEndOfComment';\n        case 12 /* UnexpectedEndOfString */: return 'UnexpectedEndOfString';\n        case 13 /* UnexpectedEndOfNumber */: return 'UnexpectedEndOfNumber';\n        case 14 /* InvalidUnicode */: return 'InvalidUnicode';\n        case 15 /* InvalidEscapeCharacter */: return 'InvalidEscapeCharacter';\n        case 16 /* InvalidCharacter */: return 'InvalidCharacter';\n    }\n    return '<unknown ParseErrorCode>';\n}\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`.\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`.\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.config = exports.loadMessageBundle = void 0;\nvar ral_1 = require(\"../common/ral\");\nvar common_1 = require(\"../common/common\");\nvar common_2 = require(\"../common/common\");\nObject.defineProperty(exports, \"MessageFormat\", { enumerable: true, get: function () { return common_2.MessageFormat; } });\nObject.defineProperty(exports, \"BundleFormat\", { enumerable: true, get: function () { return common_2.BundleFormat; } });\nfunction loadMessageBundle(_file) {\n    return function (key, message) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        if (typeof key === 'number') {\n            throw new Error(\"Browser implementation does currently not support externalized strings.\");\n        }\n        else {\n            return common_1.localize.apply(void 0, __spreadArrays([key, message], args));\n        }\n    };\n}\nexports.loadMessageBundle = loadMessageBundle;\nfunction config(options) {\n    common_1.setPseudo((options === null || options === void 0 ? void 0 : options.locale.toLowerCase()) === 'pseudo');\n    return loadMessageBundle;\n}\nexports.config = config;\nral_1.default.install(Object.freeze({\n    loadMessageBundle: loadMessageBundle,\n    config: config\n}));\n//# sourceMappingURL=main.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.config = exports.loadMessageBundle = exports.localize = exports.format = exports.setPseudo = exports.isPseudo = exports.isDefined = exports.BundleFormat = exports.MessageFormat = void 0;\nvar ral_1 = require(\"./ral\");\nvar MessageFormat;\n(function (MessageFormat) {\n    MessageFormat[\"file\"] = \"file\";\n    MessageFormat[\"bundle\"] = \"bundle\";\n    MessageFormat[\"both\"] = \"both\";\n})(MessageFormat = exports.MessageFormat || (exports.MessageFormat = {}));\nvar BundleFormat;\n(function (BundleFormat) {\n    // the nls.bundle format\n    BundleFormat[\"standalone\"] = \"standalone\";\n    BundleFormat[\"languagePack\"] = \"languagePack\";\n})(BundleFormat = exports.BundleFormat || (exports.BundleFormat = {}));\nvar LocalizeInfo;\n(function (LocalizeInfo) {\n    function is(value) {\n        var candidate = value;\n        return candidate && isDefined(candidate.key) && isDefined(candidate.comment);\n    }\n    LocalizeInfo.is = is;\n})(LocalizeInfo || (LocalizeInfo = {}));\nfunction isDefined(value) {\n    return typeof value !== 'undefined';\n}\nexports.isDefined = isDefined;\nexports.isPseudo = false;\nfunction setPseudo(pseudo) {\n    exports.isPseudo = pseudo;\n}\nexports.setPseudo = setPseudo;\nfunction format(message, args) {\n    var result;\n    if (exports.isPseudo) {\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n        message = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n    }\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\n            var index = rest[0];\n            var arg = args[index];\n            var replacement = match;\n            if (typeof arg === 'string') {\n                replacement = arg;\n            }\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                replacement = String(arg);\n            }\n            return replacement;\n        });\n    }\n    return result;\n}\nexports.format = format;\nfunction localize(_key, message) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    return format(message, args);\n}\nexports.localize = localize;\nfunction loadMessageBundle(file) {\n    return ral_1.default().loadMessageBundle(file);\n}\nexports.loadMessageBundle = loadMessageBundle;\nfunction config(opts) {\n    return ral_1.default().config(opts);\n}\nexports.config = config;\n//# sourceMappingURL=common.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(\"No runtime abstraction layer installed\");\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(\"No runtime abstraction layer provided\");\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n//# sourceMappingURL=ral.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { getLocation, Location } from 'jsonc-parser';\nimport * as nls from 'vscode-nls';\n\nconst localize = nls.loadMessageBundle();\n\nexport class PackageDocument {\n\n\tconstructor(private document: vscode.TextDocument) { }\n\n\tpublic provideCompletionItems(position: vscode.Position, _token: vscode.CancellationToken): vscode.ProviderResult<vscode.CompletionItem[]> {\n\t\tconst location = getLocation(this.document.getText(), this.document.offsetAt(position));\n\n\t\tif (location.path.length >= 2 && location.path[1] === 'configurationDefaults') {\n\t\t\treturn this.provideLanguageOverridesCompletionItems(location, position);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate provideLanguageOverridesCompletionItems(location: Location, position: vscode.Position): vscode.ProviderResult<vscode.CompletionItem[]> {\n\t\tlet range = this.getReplaceRange(location, position);\n\t\tconst text = this.document.getText(range);\n\n\t\tif (location.path.length === 2) {\n\n\t\t\tlet snippet = '\"[${1:language}]\": {\\n\\t\"$0\"\\n}';\n\n\t\t\t// Suggestion model word matching includes quotes,\n\t\t\t// hence exclude the starting quote from the snippet and the range\n\t\t\t// ending quote gets replaced\n\t\t\tif (text && text.startsWith('\"')) {\n\t\t\t\trange = new vscode.Range(new vscode.Position(range.start.line, range.start.character + 1), range.end);\n\t\t\t\tsnippet = snippet.substring(1);\n\t\t\t}\n\n\t\t\treturn Promise.resolve([this.newSnippetCompletionItem({\n\t\t\t\tlabel: localize('languageSpecificEditorSettings', \"Language specific editor settings\"),\n\t\t\t\tdocumentation: localize('languageSpecificEditorSettingsDescription', \"Override editor settings for language\"),\n\t\t\t\tsnippet,\n\t\t\t\trange\n\t\t\t})]);\n\t\t}\n\n\t\tif (location.path.length === 3 && location.previousNode && typeof location.previousNode.value === 'string' && location.previousNode.value.startsWith('[')) {\n\n\t\t\t// Suggestion model word matching includes starting quote and open sqaure bracket\n\t\t\t// Hence exclude them from the proposal range\n\t\t\trange = new vscode.Range(new vscode.Position(range.start.line, range.start.character + 2), range.end);\n\n\t\t\treturn vscode.languages.getLanguages().then(languages => {\n\t\t\t\treturn languages.map(l => {\n\n\t\t\t\t\t// Suggestion model word matching includes closed sqaure bracket and ending quote\n\t\t\t\t\t// Hence include them in the proposal to replace\n\t\t\t\t\treturn this.newSimpleCompletionItem(l, range, '', l + ']\"');\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tprivate getReplaceRange(location: Location, position: vscode.Position) {\n\t\tconst node = location.previousNode;\n\t\tif (node) {\n\t\t\tconst nodeStart = this.document.positionAt(node.offset), nodeEnd = this.document.positionAt(node.offset + node.length);\n\t\t\tif (nodeStart.isBeforeOrEqual(position) && nodeEnd.isAfterOrEqual(position)) {\n\t\t\t\treturn new vscode.Range(nodeStart, nodeEnd);\n\t\t\t}\n\t\t}\n\t\treturn new vscode.Range(position, position);\n\t}\n\n\tprivate newSimpleCompletionItem(text: string, range: vscode.Range, description?: string, insertText?: string): vscode.CompletionItem {\n\t\tconst item = new vscode.CompletionItem(text);\n\t\titem.kind = vscode.CompletionItemKind.Value;\n\t\titem.detail = description;\n\t\titem.insertText = insertText ? insertText : text;\n\t\titem.range = range;\n\t\treturn item;\n\t}\n\n\tprivate newSnippetCompletionItem(o: { label: string; documentation?: string; snippet: string; range: vscode.Range }): vscode.CompletionItem {\n\t\tconst item = new vscode.CompletionItem(o.label);\n\t\titem.kind = vscode.CompletionItemKind.Value;\n\t\titem.documentation = o.documentation;\n\t\titem.insertText = new vscode.SnippetString(o.snippet);\n\t\titem.range = o.range;\n\t\treturn item;\n\t}\n}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { PackageDocument } from './packageDocumentHelper';\n\nexport function activate(context: vscode.ExtensionContext) {\n\t//package.json suggestions\n\tcontext.subscriptions.push(registerPackageDocumentCompletions());\n\n}\n\nfunction registerPackageDocumentCompletions(): vscode.Disposable {\n\treturn vscode.languages.registerCompletionItemProvider({ language: 'json', pattern: '**/package.json' }, {\n\t\tprovideCompletionItems(document, position, token) {\n\t\t\treturn new PackageDocument(document).provideCompletionItems(position, token);\n\t\t}\n\t});\n\n}\n"],"sourceRoot":""}