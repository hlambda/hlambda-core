{"version":3,"sources":["webpack://references-view/./node_modules/vscode-nls/lib/browser/main.js","webpack://references-view/./node_modules/vscode-nls/lib/common/common.js","webpack://references-view/./node_modules/vscode-nls/lib/common/ral.js","webpack://references-view/./src/calls/index.ts","webpack://references-view/./src/calls/model.ts","webpack://references-view/./src/highlights.ts","webpack://references-view/./src/navigation.ts","webpack://references-view/./src/references/index.ts","webpack://references-view/./src/references/model.ts","webpack://references-view/./src/tree.ts","webpack://references-view/./src/types/index.ts","webpack://references-view/./src/types/model.ts","webpack://references-view/./src/utils.ts","webpack://references-view/external \"vscode\"","webpack://references-view/webpack/bootstrap","webpack://references-view/./src/extension.ts"],"names":["__spreadArray","this","to","from","pack","arguments","length","ar","i","l","Array","prototype","slice","call","concat","Object","defineProperty","exports","value","config","loadMessageBundle","BundleFormat","MessageFormat","ral_1","common_1","common_2","_file","key","message","args","_i","Error","localize","apply","options","_a","setPseudo","locale","toLowerCase","enumerable","get","default","install","freeze","format","isPseudo","isDefined","LocalizeInfo","replace","match","rest","index","arg","replacement","String","is","candidate","comment","pseudo","_key","file","opts","_ral","RAL","undefined","ral","removeCallItem","item","CallItem","remove","tree","context","direction","RichCallsDirection","workspaceState","setCallsDirection","anchor","newInput","oldInput","getInput","CallsTreeInput","vscode","Location","uri","selectionRange","start","location","setInput","subscriptions","push","commands","registerCommand","window","activeTextEditor","input","document","selection","active","constructor","_mem","_value","_ctxMode","ContextKey","raw","set","update","contextValue","title","items","Promise","resolve","executeCommand","range","model","CallsModel","provider","CallItemDataProvider","roots","navigation","highlights","dnd","dispose","with","parent","locations","_onDidChange","EventEmitter","onDidChange","event","map","calls","fromRanges","children","_resolveCalls","nearest","_position","find","toString","next","_move","previous","fwd","tail","array","includes","idx","indexOf","getDragUri","asResourceUrl","getEditorHighlights","filter","loc","siblings","del","fire","_model","_emitter","onDidChangeTreeData","_modelListener","e","getTreeItem","element","TreeItem","name","description","detail","tooltip","label","iconPath","getThemeIcon","kind","command","end","collapsibleState","TreeItemCollapsibleState","Collapsed","getChildren","getCallChildren","getParent","_view","_delegate","_decorationType","createTextEditorDecorationType","backgroundColor","ThemeColor","rangeBehavior","DecorationRangeBehavior","ClosedClosed","overviewRulerLane","OverviewRulerLane","Center","overviewRulerColor","disposables","_ignore","Set","workspace","onDidChangeTextDocument","add","onDidChangeActiveTextEditor","visible","onDidChangeVisibility","_show","_hide","onDidChangeSelection","Disposable","editor","visibleTextEditors","setDecorations","viewColumn","has","ranges","_disposables","_ctxCanNavigate","delegate","Boolean","_anchor","sel","_open","preserveFocus","Selection","newItem","newLocation","reveal","select","focus","findLocations","ReferencesTreeInput","showReferencesDisposable","removeReferenceItem","copyCommand","copyAllCommand","copyPathCommand","updateShowReferences","affectsConfiguration","getConfiguration","async","position","onDidChangeConfiguration","ReferenceItem","FileItem","val","ReferencesModel","asCopyText","env","clipboard","writeText","scheme","fsPath","_command","_result","resut","ReferencesTreeDataProvider","last","sort","_compareLocations","targetUri","targetRange","_compareUriIgnoreFragment","fragment","references","a","b","aStr","bStr","aUri","bUri","aRange","bRange","isBefore","isAfter","total","reduce","prev","cur","files","ref","contains","lastBefore","best","bestValue","_prefixLen","pos","charCodeAt","delta","_item","result","_listener","ThemeIcon","File","doc","getDocument","before","inside","after","getPreviewChunks","None","asRelativePath","warmUpNext","_document","openTextDocument","chunks","line","character","viewId","_ctxIsActive","_ctxHasResult","_ctxInputSource","_history","TreeInputHistory","_provider","TreeDataProviderDelegate","_dnd","TreeDndDelegate","_tree","createTreeView","treeDataProvider","showCollapseAll","dragAndDropController","_navigation","Navigation","_sessionDisposable","_input","isValidRequestPosition","clearInput","newInputKind","getPrototypeOf","modelPromise","then","expand","EditorHighlights","reset","size","_sessionDispoables","catch","err","console","error","_assertProvider","dropMimeTypes","dragMimeTypes","handleDrag","source","data","urls","DataTransferItem","join","handleDrop","HistoryItem","word","toLocaleLowerCase","_onDidChangeTreeData","_ctxHasHistory","_inputs","Map","clear","_reRunHistoryItem","values","pop","guessedTrackedPosition","Range","picks","pick","showQuickPick","placeHolder","delete","newPosition","isEqual","WordAnchor","getWordRangeAtPosition","getText","JSON","stringify","all","reverse","removeTypeItem","TypeItem","RichTypesDirection","setTypeHierarchyDirection","TypesTreeInput","TypesModel","TypeItemDataProvider","currentType","types","_resolveTypes","getTypeChildren","splice","beforeLen","trim","previewStart","Math","max","wordRange","previewEnd","translate","_doc","_version","version","_word","_getAnchorWord","wordNow","startLine","checked","lineCount","ch","lineAt","text","Position","_themeIconIds","id","module","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","SymbolsTree","register"],"mappings":"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","file":"extension.js","sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.config = exports.loadMessageBundle = exports.BundleFormat = exports.MessageFormat = void 0;\nvar ral_1 = require(\"../common/ral\");\nvar common_1 = require(\"../common/common\");\nvar common_2 = require(\"../common/common\");\nObject.defineProperty(exports, \"MessageFormat\", { enumerable: true, get: function () { return common_2.MessageFormat; } });\nObject.defineProperty(exports, \"BundleFormat\", { enumerable: true, get: function () { return common_2.BundleFormat; } });\nfunction loadMessageBundle(_file) {\n    return function (key, message) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        if (typeof key === 'number') {\n            throw new Error(\"Browser implementation does currently not support externalized strings.\");\n        }\n        else {\n            return common_1.localize.apply(void 0, __spreadArray([key, message], args, false));\n        }\n    };\n}\nexports.loadMessageBundle = loadMessageBundle;\nfunction config(options) {\n    var _a;\n    (0, common_1.setPseudo)(((_a = options === null || options === void 0 ? void 0 : options.locale) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === 'pseudo');\n    return loadMessageBundle;\n}\nexports.config = config;\nral_1.default.install(Object.freeze({\n    loadMessageBundle: loadMessageBundle,\n    config: config\n}));\n//# sourceMappingURL=main.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.config = exports.loadMessageBundle = exports.localize = exports.format = exports.setPseudo = exports.isPseudo = exports.isDefined = exports.BundleFormat = exports.MessageFormat = void 0;\nvar ral_1 = require(\"./ral\");\nvar MessageFormat;\n(function (MessageFormat) {\n    MessageFormat[\"file\"] = \"file\";\n    MessageFormat[\"bundle\"] = \"bundle\";\n    MessageFormat[\"both\"] = \"both\";\n})(MessageFormat = exports.MessageFormat || (exports.MessageFormat = {}));\nvar BundleFormat;\n(function (BundleFormat) {\n    // the nls.bundle format\n    BundleFormat[\"standalone\"] = \"standalone\";\n    BundleFormat[\"languagePack\"] = \"languagePack\";\n})(BundleFormat = exports.BundleFormat || (exports.BundleFormat = {}));\nvar LocalizeInfo;\n(function (LocalizeInfo) {\n    function is(value) {\n        var candidate = value;\n        return candidate && isDefined(candidate.key) && isDefined(candidate.comment);\n    }\n    LocalizeInfo.is = is;\n})(LocalizeInfo || (LocalizeInfo = {}));\nfunction isDefined(value) {\n    return typeof value !== 'undefined';\n}\nexports.isDefined = isDefined;\nexports.isPseudo = false;\nfunction setPseudo(pseudo) {\n    exports.isPseudo = pseudo;\n}\nexports.setPseudo = setPseudo;\nfunction format(message, args) {\n    var result;\n    if (exports.isPseudo) {\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n        message = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n    }\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\n            var index = rest[0];\n            var arg = args[index];\n            var replacement = match;\n            if (typeof arg === 'string') {\n                replacement = arg;\n            }\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                replacement = String(arg);\n            }\n            return replacement;\n        });\n    }\n    return result;\n}\nexports.format = format;\nfunction localize(_key, message) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    return format(message, args);\n}\nexports.localize = localize;\nfunction loadMessageBundle(file) {\n    return (0, ral_1.default)().loadMessageBundle(file);\n}\nexports.loadMessageBundle = loadMessageBundle;\nfunction config(opts) {\n    return (0, ral_1.default)().config(opts);\n}\nexports.config = config;\n//# sourceMappingURL=common.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(\"No runtime abstraction layer installed\");\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(\"No runtime abstraction layer provided\");\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n//# sourceMappingURL=ral.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolsTree } from '../tree';\nimport { ContextKey } from '../utils';\nimport { CallItem, CallsDirection, CallsTreeInput } from './model';\n\nexport function register(tree: SymbolsTree, context: vscode.ExtensionContext): void {\n\n\tconst direction = new RichCallsDirection(context.workspaceState, CallsDirection.Incoming);\n\n\tfunction showCallHierarchy() {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new CallsTreeInput(new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), direction.value);\n\t\t\ttree.setInput(input);\n\t\t}\n\t}\n\n\tfunction setCallsDirection(value: CallsDirection, anchor: CallItem | unknown) {\n\t\tdirection.value = value;\n\n\t\tlet newInput: CallsTreeInput | undefined;\n\t\tconst oldInput = tree.getInput();\n\t\tif (anchor instanceof CallItem) {\n\t\t\tnewInput = new CallsTreeInput(new vscode.Location(anchor.item.uri, anchor.item.selectionRange.start), direction.value);\n\t\t} else if (oldInput instanceof CallsTreeInput) {\n\t\t\tnewInput = new CallsTreeInput(oldInput.location, direction.value);\n\t\t}\n\t\tif (newInput) {\n\t\t\ttree.setInput(newInput);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.showCallHierarchy', showCallHierarchy),\n\t\tvscode.commands.registerCommand('references-view.showOutgoingCalls', (item: CallItem | unknown) => setCallsDirection(CallsDirection.Outgoing, item)),\n\t\tvscode.commands.registerCommand('references-view.showIncomingCalls', (item: CallItem | unknown) => setCallsDirection(CallsDirection.Incoming, item)),\n\t\tvscode.commands.registerCommand('references-view.removeCallItem', removeCallItem)\n\t);\n}\n\nfunction removeCallItem(item: CallItem | unknown): void {\n\tif (item instanceof CallItem) {\n\t\titem.remove();\n\t}\n}\n\nclass RichCallsDirection {\n\n\tprivate static _key = 'references-view.callHierarchyMode';\n\n\tprivate _ctxMode = new ContextKey<'showIncoming' | 'showOutgoing'>('references-view.callHierarchyMode');\n\n\tconstructor(\n\t\tprivate _mem: vscode.Memento,\n\t\tprivate _value: CallsDirection = CallsDirection.Outgoing,\n\t) {\n\t\tconst raw = _mem.get<number>(RichCallsDirection._key);\n\t\tif (typeof raw === 'number' && raw >= 0 && raw <= 1) {\n\t\t\tthis.value = raw;\n\t\t} else {\n\t\t\tthis.value = _value;\n\t\t}\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: CallsDirection) {\n\t\tthis._value = value;\n\t\tthis._ctxMode.set(this._value === CallsDirection.Incoming ? 'showIncoming' : 'showOutgoing');\n\t\tthis._mem.update(RichCallsDirection._key, value);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemDragAndDrop, SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput } from '../references-view';\nimport { asResourceUrl, del, getThemeIcon, tail } from '../utils';\nimport * as nls from 'vscode-nls';\nconst localize = nls.loadMessageBundle();\n\nexport class CallsTreeInput implements SymbolTreeInput<CallItem> {\n\n\treadonly title: string;\n\treadonly contextValue: string = 'callHierarchy';\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly direction: CallsDirection,\n\t) {\n\t\tthis.title = direction === CallsDirection.Incoming\n\t\t\t? localize('title.callers', 'Callers Of')\n\t\t\t: localize('title.calls', 'Calls From');\n\t}\n\n\tasync resolve() {\n\n\t\tconst items = await Promise.resolve(vscode.commands.executeCommand<vscode.CallHierarchyItem[]>('vscode.prepareCallHierarchy', this.location.uri, this.location.range.start));\n\t\tconst model = new CallsModel(this.direction, items ?? []);\n\t\tconst provider = new CallItemDataProvider(model);\n\n\t\tif (model.roots.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\tprovider,\n\t\t\tget message() { return model.roots.length === 0 ? localize('noresult', 'No results.') : undefined; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdnd: model,\n\t\t\tdispose() {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(location: vscode.Location): CallsTreeInput {\n\t\treturn new CallsTreeInput(location, this.direction);\n\t}\n}\n\n\nexport const enum CallsDirection {\n\tIncoming,\n\tOutgoing\n}\n\n\n\nexport class CallItem {\n\n\tchildren?: CallItem[];\n\n\tconstructor(\n\t\treadonly model: CallsModel,\n\t\treadonly item: vscode.CallHierarchyItem,\n\t\treadonly parent: CallItem | undefined,\n\t\treadonly locations: vscode.Location[] | undefined\n\t) { }\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n}\n\nclass CallsModel implements SymbolItemNavigation<CallItem>, SymbolItemEditorHighlights<CallItem>, SymbolItemDragAndDrop<CallItem> {\n\n\treadonly roots: CallItem[] = [];\n\n\tprivate readonly _onDidChange = new vscode.EventEmitter<CallsModel>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tconstructor(readonly direction: CallsDirection, items: vscode.CallHierarchyItem[]) {\n\t\tthis.roots = items.map(item => new CallItem(this, item, undefined, undefined));\n\t}\n\n\tprivate async _resolveCalls(call: CallItem): Promise<CallItem[]> {\n\t\tif (this.direction === CallsDirection.Incoming) {\n\t\t\tconst calls = await vscode.commands.executeCommand<vscode.CallHierarchyIncomingCall[]>('vscode.provideIncomingCalls', call.item);\n\t\t\treturn calls ? calls.map(item => new CallItem(this, item.from, call, item.fromRanges.map(range => new vscode.Location(item.from.uri, range)))) : [];\n\t\t} else {\n\t\t\tconst calls = await vscode.commands.executeCommand<vscode.CallHierarchyOutgoingCall[]>('vscode.provideOutgoingCalls', call.item);\n\t\t\treturn calls ? calls.map(item => new CallItem(this, item.to, call, item.fromRanges.map(range => new vscode.Location(call.item.uri, range)))) : [];\n\t\t}\n\t}\n\n\tasync getCallChildren(call: CallItem): Promise<CallItem[]> {\n\t\tif (!call.children) {\n\t\t\tcall.children = await this._resolveCalls(call);\n\t\t}\n\t\treturn call.children;\n\t}\n\n\t// -- navigation\n\n\tlocation(item: CallItem) {\n\t\treturn new vscode.Location(item.item.uri, item.item.range);\n\t}\n\n\tnearest(uri: vscode.Uri, _position: vscode.Position): CallItem | undefined {\n\t\treturn this.roots.find(item => item.item.uri.toString() === uri.toString()) ?? this.roots[0];\n\t}\n\n\tnext(from: CallItem): CallItem {\n\t\treturn this._move(from, true) ?? from;\n\t}\n\n\tprevious(from: CallItem): CallItem {\n\t\treturn this._move(from, false) ?? from;\n\t}\n\n\tprivate _move(item: CallItem, fwd: boolean): CallItem | void {\n\t\tif (item.children?.length) {\n\t\t\treturn fwd ? item.children[0] : tail(item.children);\n\t\t}\n\t\tconst array = this.roots.includes(item) ? this.roots : item.parent?.children;\n\t\tif (array?.length) {\n\t\t\tconst idx = array.indexOf(item);\n\t\t\tconst delta = fwd ? 1 : -1;\n\t\t\treturn array[idx + delta + array.length % array.length];\n\t\t}\n\t}\n\n\t// --- dnd\n\n\tgetDragUri(item: CallItem): vscode.Uri | undefined {\n\t\treturn asResourceUrl(item.item.uri, item.item.range);\n\t}\n\n\t// --- highlights\n\n\tgetEditorHighlights(item: CallItem, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\tif (!item.locations) {\n\t\t\treturn item.item.uri.toString() === uri.toString() ? [item.item.selectionRange] : undefined;\n\t\t}\n\t\treturn item.locations\n\t\t\t.filter(loc => loc.uri.toString() === uri.toString())\n\t\t\t.map(loc => loc.range);\n\t}\n\n\tremove(item: CallItem) {\n\t\tconst isInRoot = this.roots.includes(item);\n\t\tconst siblings = isInRoot ? this.roots : item.parent?.children;\n\t\tif (siblings) {\n\t\t\tdel(siblings, item);\n\t\t\tthis._onDidChange.fire(this);\n\t\t}\n\t}\n}\n\nclass CallItemDataProvider implements vscode.TreeDataProvider<CallItem> {\n\n\tprivate readonly _emitter = new vscode.EventEmitter<CallItem | undefined>();\n\treadonly onDidChangeTreeData = this._emitter.event;\n\n\tprivate readonly _modelListener: vscode.Disposable;\n\n\tconstructor(private _model: CallsModel) {\n\t\tthis._modelListener = _model.onDidChange(e => this._emitter.fire(e instanceof CallItem ? e : undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis._emitter.dispose();\n\t\tthis._modelListener.dispose();\n\t}\n\n\tgetTreeItem(element: CallItem): vscode.TreeItem {\n\n\t\tconst item = new vscode.TreeItem(element.item.name);\n\t\titem.description = element.item.detail;\n\t\titem.tooltip = item.label ? `${item.label} - ${element.item.detail}` : element.item.detail;\n\t\titem.contextValue = 'call-item';\n\t\titem.iconPath = getThemeIcon(element.item.kind);\n\t\titem.command = {\n\t\t\tcommand: 'vscode.open',\n\t\t\ttitle: localize('open', 'Open Call'),\n\t\t\targuments: [\n\t\t\t\telement.item.uri,\n\t\t\t\t<vscode.TextDocumentShowOptions>{ selection: element.item.selectionRange.with({ end: element.item.selectionRange.start }) }\n\t\t\t]\n\t\t};\n\t\titem.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\treturn item;\n\t}\n\n\tgetChildren(element?: CallItem | undefined) {\n\t\treturn element\n\t\t\t? this._model.getCallChildren(element)\n\t\t\t: this._model.roots;\n\t}\n\n\tgetParent(element: CallItem) {\n\t\treturn element.parent;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemEditorHighlights } from './references-view';\n\nexport class EditorHighlights<T> {\n\n\tprivate readonly _decorationType = vscode.window.createTextEditorDecorationType({\n\t\tbackgroundColor: new vscode.ThemeColor('editor.findMatchHighlightBackground'),\n\t\trangeBehavior: vscode.DecorationRangeBehavior.ClosedClosed,\n\t\toverviewRulerLane: vscode.OverviewRulerLane.Center,\n\t\toverviewRulerColor: new vscode.ThemeColor('editor.findMatchHighlightBackground'),\n\t});\n\n\tprivate readonly disposables: vscode.Disposable[] = [];\n\tprivate readonly _ignore = new Set<string>();\n\n\tconstructor(private readonly _view: vscode.TreeView<T>, private readonly _delegate: SymbolItemEditorHighlights<T>) {\n\t\tthis.disposables.push(\n\t\t\tvscode.workspace.onDidChangeTextDocument(e => this._ignore.add(e.document.uri.toString())),\n\t\t\tvscode.window.onDidChangeActiveTextEditor(() => _view.visible && this.update()),\n\t\t\t_view.onDidChangeVisibility(e => e.visible ? this._show() : this._hide()),\n\t\t\t_view.onDidChangeSelection(() => _view.visible && this.update())\n\t\t);\n\t\tthis._show();\n\t}\n\n\tdispose() {\n\t\tvscode.Disposable.from(...this.disposables).dispose();\n\t\tfor (const editor of vscode.window.visibleTextEditors) {\n\t\t\teditor.setDecorations(this._decorationType, []);\n\t\t}\n\t}\n\n\tprivate _show(): void {\n\t\tconst { activeTextEditor: editor } = vscode.window;\n\t\tif (!editor || !editor.viewColumn) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._ignore.has(editor.document.uri.toString())) {\n\t\t\treturn;\n\t\t}\n\t\tconst [anchor] = this._view.selection;\n\t\tif (!anchor) {\n\t\t\treturn;\n\t\t}\n\t\tconst ranges = this._delegate.getEditorHighlights(anchor, editor.document.uri);\n\t\tif (ranges) {\n\t\t\teditor.setDecorations(this._decorationType, ranges);\n\t\t}\n\t}\n\n\tprivate _hide(): void {\n\t\tfor (const editor of vscode.window.visibleTextEditors) {\n\t\t\teditor.setDecorations(this._decorationType, []);\n\t\t}\n\t}\n\n\tupdate(): void {\n\t\tthis._hide();\n\t\tthis._show();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemNavigation } from './references-view';\nimport { ContextKey } from './utils';\n\nexport class Navigation {\n\n\tprivate readonly _disposables: vscode.Disposable[] = [];\n\tprivate readonly _ctxCanNavigate = new ContextKey<boolean>('references-view.canNavigate');\n\n\tprivate _delegate?: SymbolItemNavigation<unknown>;\n\n\tconstructor(private readonly _view: vscode.TreeView<unknown>) {\n\t\tthis._disposables.push(\n\t\t\tvscode.commands.registerCommand('references-view.next', () => this.next(false)),\n\t\t\tvscode.commands.registerCommand('references-view.prev', () => this.previous(false)),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tvscode.Disposable.from(...this._disposables).dispose();\n\t}\n\n\tupdate(delegate: SymbolItemNavigation<unknown> | undefined) {\n\t\tthis._delegate = delegate;\n\t\tthis._ctxCanNavigate.set(Boolean(this._delegate));\n\t}\n\n\tprivate _anchor(): undefined | unknown {\n\t\tif (!this._delegate) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst [sel] = this._view.selection;\n\t\tif (sel) {\n\t\t\treturn sel;\n\t\t}\n\t\tif (!vscode.window.activeTextEditor) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._delegate.nearest(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active);\n\t}\n\n\tprivate _open(loc: vscode.Location, preserveFocus: boolean) {\n\t\tvscode.commands.executeCommand('vscode.open', loc.uri, {\n\t\t\tselection: new vscode.Selection(loc.range.start, loc.range.start),\n\t\t\tpreserveFocus\n\t\t});\n\t}\n\n\tprevious(preserveFocus: boolean): void {\n\t\tif (!this._delegate) {\n\t\t\treturn;\n\t\t}\n\t\tconst item = this._anchor();\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\t\tconst newItem = this._delegate.previous(item);\n\t\tconst newLocation = this._delegate.location(newItem);\n\t\tif (newLocation) {\n\t\t\tthis._view.reveal(newItem, { select: true, focus: true });\n\t\t\tthis._open(newLocation, preserveFocus);\n\t\t}\n\t}\n\n\tnext(preserveFocus: boolean): void {\n\t\tif (!this._delegate) {\n\t\t\treturn;\n\t\t}\n\t\tconst item = this._anchor();\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\t\tconst newItem = this._delegate.next(item);\n\t\tconst newLocation = this._delegate.location(newItem);\n\t\tif (newLocation) {\n\t\t\tthis._view.reveal(newItem, { select: true, focus: true });\n\t\t\tthis._open(newLocation, preserveFocus);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolsTree } from '../tree';\nimport { FileItem, ReferenceItem, ReferencesModel, ReferencesTreeInput } from './model';\nimport * as nls from 'vscode-nls';\nconst localize = nls.loadMessageBundle();\n\nexport function register(tree: SymbolsTree, context: vscode.ExtensionContext): void {\n\n\tfunction findLocations(title: string, command: string) {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new ReferencesTreeInput(title, new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), command);\n\t\t\ttree.setInput(input);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.findReferences', () => findLocations('References', 'vscode.executeReferenceProvider')),\n\t\tvscode.commands.registerCommand('references-view.findImplementations', () => findLocations('Implementations', 'vscode.executeImplementationProvider')),\n\t\t// --- legacy name\n\t\tvscode.commands.registerCommand('references-view.find', (...args: any[]) => vscode.commands.executeCommand('references-view.findReferences', ...args)),\n\t\tvscode.commands.registerCommand('references-view.removeReferenceItem', removeReferenceItem),\n\t\tvscode.commands.registerCommand('references-view.copy', copyCommand),\n\t\tvscode.commands.registerCommand('references-view.copyAll', copyAllCommand),\n\t\tvscode.commands.registerCommand('references-view.copyPath', copyPathCommand),\n\t);\n\n\n\t// --- references.preferredLocation setting\n\n\tlet showReferencesDisposable: vscode.Disposable | undefined;\n\tconst config = 'references.preferredLocation';\n\tfunction updateShowReferences(event?: vscode.ConfigurationChangeEvent) {\n\t\tif (event && !event.affectsConfiguration(config)) {\n\t\t\treturn;\n\t\t}\n\t\tconst value = vscode.workspace.getConfiguration().get<string>(config);\n\n\t\tshowReferencesDisposable?.dispose();\n\t\tshowReferencesDisposable = undefined;\n\n\t\tif (value === 'view') {\n\t\t\tshowReferencesDisposable = vscode.commands.registerCommand('editor.action.showReferences', async (uri: vscode.Uri, position: vscode.Position, locations: vscode.Location[]) => {\n\t\t\t\tconst input = new ReferencesTreeInput(localize('title', 'References'), new vscode.Location(uri, position), 'vscode.executeReferenceProvider', locations);\n\t\t\t\ttree.setInput(input);\n\t\t\t});\n\t\t}\n\t}\n\tcontext.subscriptions.push(vscode.workspace.onDidChangeConfiguration(updateShowReferences));\n\tcontext.subscriptions.push({ dispose: () => showReferencesDisposable?.dispose() });\n\tupdateShowReferences();\n}\n\nconst copyAllCommand = async (item: ReferenceItem | FileItem | unknown) => {\n\tif (item instanceof ReferenceItem) {\n\t\tcopyCommand(item.file.model);\n\t} else if (item instanceof FileItem) {\n\t\tcopyCommand(item.model);\n\t}\n};\n\nfunction removeReferenceItem(item: FileItem | ReferenceItem | unknown) {\n\tif (item instanceof FileItem) {\n\t\titem.remove();\n\t} else if (item instanceof ReferenceItem) {\n\t\titem.remove();\n\t}\n}\n\n\nasync function copyCommand(item: ReferencesModel | ReferenceItem | FileItem | unknown) {\n\tlet val: string | undefined;\n\tif (item instanceof ReferencesModel) {\n\t\tval = await item.asCopyText();\n\t} else if (item instanceof ReferenceItem) {\n\t\tval = await item.asCopyText();\n\t} else if (item instanceof FileItem) {\n\t\tval = await item.asCopyText();\n\t}\n\tif (val) {\n\t\tawait vscode.env.clipboard.writeText(val);\n\t}\n}\n\nasync function copyPathCommand(item: FileItem | unknown) {\n\tif (item instanceof FileItem) {\n\t\tif (item.uri.scheme === 'file') {\n\t\t\tvscode.env.clipboard.writeText(item.uri.fsPath);\n\t\t} else {\n\t\t\tvscode.env.clipboard.writeText(item.uri.toString(true));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemDragAndDrop, SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput, SymbolTreeModel } from '../references-view';\nimport { asResourceUrl, del, getPreviewChunks, tail } from '../utils';\nimport * as nls from 'vscode-nls';\nconst localize = nls.loadMessageBundle();\n\nexport class ReferencesTreeInput implements SymbolTreeInput<FileItem | ReferenceItem> {\n\n\treadonly contextValue: string;\n\n\tconstructor(\n\t\treadonly title: string,\n\t\treadonly location: vscode.Location,\n\t\tprivate readonly _command: string,\n\t\tprivate readonly _result?: vscode.Location[] | vscode.LocationLink[]\n\t) {\n\t\tthis.contextValue = _command;\n\t}\n\n\tasync resolve() {\n\n\t\tlet model: ReferencesModel;\n\t\tif (this._result) {\n\t\t\tmodel = new ReferencesModel(this._result);\n\t\t} else {\n\t\t\tconst resut = await Promise.resolve(vscode.commands.executeCommand<vscode.Location[] | vscode.LocationLink[]>(this._command, this.location.uri, this.location.range.start));\n\t\t\tmodel = new ReferencesModel(resut ?? []);\n\t\t}\n\n\t\tif (model.items.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = new ReferencesTreeDataProvider(model);\n\n\t\treturn <SymbolTreeModel<FileItem | ReferenceItem>>{\n\t\t\tprovider,\n\t\t\tget message() { return model.message; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdnd: model,\n\t\t\tdispose(): void {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(location: vscode.Location): ReferencesTreeInput {\n\t\treturn new ReferencesTreeInput(this.title, location, this._command);\n\t}\n}\n\nexport class ReferencesModel implements SymbolItemNavigation<FileItem | ReferenceItem>, SymbolItemEditorHighlights<FileItem | ReferenceItem>, SymbolItemDragAndDrop<FileItem | ReferenceItem> {\n\n\tprivate _onDidChange = new vscode.EventEmitter<FileItem | ReferenceItem | undefined>();\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\treadonly items: FileItem[] = [];\n\n\tconstructor(locations: vscode.Location[] | vscode.LocationLink[]) {\n\t\tlet last: FileItem | undefined;\n\t\tfor (const item of locations.sort(ReferencesModel._compareLocations)) {\n\t\t\tconst loc = item instanceof vscode.Location\n\t\t\t\t? item\n\t\t\t\t: new vscode.Location(item.targetUri, item.targetRange);\n\n\t\t\tif (!last || ReferencesModel._compareUriIgnoreFragment(last.uri, loc.uri) !== 0) {\n\t\t\t\tlast = new FileItem(loc.uri.with({ fragment: '' }), [], this);\n\t\t\t\tthis.items.push(last);\n\t\t\t}\n\t\t\tlast.references.push(new ReferenceItem(loc, last));\n\t\t}\n\t}\n\n\tprivate static _compareUriIgnoreFragment(a: vscode.Uri, b: vscode.Uri): number {\n\t\tconst aStr = a.with({ fragment: '' }).toString();\n\t\tconst bStr = b.with({ fragment: '' }).toString();\n\t\tif (aStr < bStr) {\n\t\t\treturn -1;\n\t\t} else if (aStr > bStr) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tprivate static _compareLocations(a: vscode.Location | vscode.LocationLink, b: vscode.Location | vscode.LocationLink): number {\n\t\tconst aUri = a instanceof vscode.Location ? a.uri : a.targetUri;\n\t\tconst bUri = b instanceof vscode.Location ? b.uri : b.targetUri;\n\t\tif (aUri.toString() < bUri.toString()) {\n\t\t\treturn -1;\n\t\t} else if (aUri.toString() > bUri.toString()) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tconst aRange = a instanceof vscode.Location ? a.range : a.targetRange;\n\t\tconst bRange = b instanceof vscode.Location ? b.range : b.targetRange;\n\t\tif (aRange.start.isBefore(bRange.start)) {\n\t\t\treturn -1;\n\t\t} else if (aRange.start.isAfter(bRange.start)) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// --- adapter\n\n\tget message() {\n\t\tif (this.items.length === 0) {\n\t\t\treturn localize('noresult', 'No results.');\n\t\t}\n\t\tconst total = this.items.reduce((prev, cur) => prev + cur.references.length, 0);\n\t\tconst files = this.items.length;\n\t\tif (total === 1 && files === 1) {\n\t\t\treturn localize('result.1', '{0} result in {1} file', total, files);\n\t\t} else if (total === 1) {\n\t\t\treturn localize('result.1n', '{0} result in {1} files', total, files);\n\t\t} else if (files === 1) {\n\t\t\treturn localize('result.n1', '{0} results in {1} file', total, files);\n\t\t} else {\n\t\t\treturn localize('result.nm', '{0} results in {1} files', total, files);\n\t\t}\n\t}\n\n\tlocation(item: FileItem | ReferenceItem) {\n\t\treturn item instanceof ReferenceItem ? item.location : undefined;\n\t}\n\n\tnearest(uri: vscode.Uri, position: vscode.Position): FileItem | ReferenceItem | undefined {\n\n\t\tif (this.items.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\t// NOTE: this.items is sorted by location (uri/range)\n\t\tfor (const item of this.items) {\n\t\t\tif (item.uri.toString() === uri.toString()) {\n\t\t\t\t// (1) pick the item at the request position\n\t\t\t\tfor (const ref of item.references) {\n\t\t\t\t\tif (ref.location.range.contains(position)) {\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// (2) pick the first item after or last before the request position\n\t\t\t\tlet lastBefore: ReferenceItem | undefined;\n\t\t\t\tfor (const ref of item.references) {\n\t\t\t\t\tif (ref.location.range.end.isAfter(position)) {\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t\tlastBefore = ref;\n\t\t\t\t}\n\t\t\t\tif (lastBefore) {\n\t\t\t\t\treturn lastBefore;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// (3) pick the file with the longest common prefix\n\t\tlet best = 0;\n\t\tconst bestValue = ReferencesModel._prefixLen(this.items[best].toString(), uri.toString());\n\n\t\tfor (let i = 1; i < this.items.length; i++) {\n\t\t\tconst value = ReferencesModel._prefixLen(this.items[i].uri.toString(), uri.toString());\n\t\t\tif (value > bestValue) {\n\t\t\t\tbest = i;\n\t\t\t}\n\t\t}\n\n\t\treturn this.items[best].references[0];\n\t}\n\n\tprivate static _prefixLen(a: string, b: string): number {\n\t\tlet pos = 0;\n\t\twhile (pos < a.length && pos < b.length && a.charCodeAt(pos) === b.charCodeAt(pos)) {\n\t\t\tpos += 1;\n\t\t}\n\t\treturn pos;\n\t}\n\n\tnext(item: FileItem | ReferenceItem): FileItem | ReferenceItem {\n\t\treturn this._move(item, true) ?? item;\n\t}\n\n\tprevious(item: FileItem | ReferenceItem): FileItem | ReferenceItem {\n\t\treturn this._move(item, false) ?? item;\n\t}\n\n\tprivate _move(item: FileItem | ReferenceItem, fwd: boolean): ReferenceItem | void {\n\n\t\tconst delta = fwd ? +1 : -1;\n\n\t\tconst _move = (item: FileItem): FileItem => {\n\t\t\tconst idx = (this.items.indexOf(item) + delta + this.items.length) % this.items.length;\n\t\t\treturn this.items[idx];\n\t\t};\n\n\t\tif (item instanceof FileItem) {\n\t\t\tif (fwd) {\n\t\t\t\treturn _move(item).references[0];\n\t\t\t} else {\n\t\t\t\treturn tail(_move(item).references);\n\t\t\t}\n\t\t}\n\n\t\tif (item instanceof ReferenceItem) {\n\t\t\tconst idx = item.file.references.indexOf(item) + delta;\n\t\t\tif (idx < 0) {\n\t\t\t\treturn tail(_move(item.file).references);\n\t\t\t} else if (idx >= item.file.references.length) {\n\t\t\t\treturn _move(item.file).references[0];\n\t\t\t} else {\n\t\t\t\treturn item.file.references[idx];\n\t\t\t}\n\t\t}\n\t}\n\n\tgetEditorHighlights(_item: FileItem | ReferenceItem, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\tconst file = this.items.find(file => file.uri.toString() === uri.toString());\n\t\treturn file?.references.map(ref => ref.location.range);\n\t}\n\n\tremove(item: FileItem | ReferenceItem) {\n\t\tif (item instanceof FileItem) {\n\t\t\tdel(this.items, item);\n\t\t\tthis._onDidChange.fire(undefined);\n\t\t} else {\n\t\t\tdel(item.file.references, item);\n\t\t\tif (item.file.references.length === 0) {\n\t\t\t\tdel(this.items, item.file);\n\t\t\t\tthis._onDidChange.fire(undefined);\n\t\t\t} else {\n\t\t\t\tthis._onDidChange.fire(item.file);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync asCopyText() {\n\t\tlet result = '';\n\t\tfor (const item of this.items) {\n\t\t\tresult += `${await item.asCopyText()}\\n`;\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetDragUri(item: FileItem | ReferenceItem): vscode.Uri | undefined {\n\t\tif (item instanceof FileItem) {\n\t\t\treturn item.uri;\n\t\t} else {\n\t\t\treturn asResourceUrl(item.file.uri, item.location.range);\n\t\t}\n\t}\n}\n\nclass ReferencesTreeDataProvider implements vscode.TreeDataProvider<FileItem | ReferenceItem>{\n\n\tprivate readonly _listener: vscode.Disposable;\n\tprivate readonly _onDidChange = new vscode.EventEmitter<FileItem | ReferenceItem | undefined>();\n\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\tconstructor(private readonly _model: ReferencesModel) {\n\t\tthis._listener = _model.onDidChangeTreeData(() => this._onDidChange.fire(undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t\tthis._listener.dispose();\n\t}\n\n\tasync getTreeItem(element: FileItem | ReferenceItem) {\n\t\tif (element instanceof FileItem) {\n\t\t\t// files\n\t\t\tconst result = new vscode.TreeItem(element.uri);\n\t\t\tresult.contextValue = 'file-item';\n\t\t\tresult.description = true;\n\t\t\tresult.iconPath = vscode.ThemeIcon.File;\n\t\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\t\treturn result;\n\n\t\t} else {\n\t\t\t// references\n\t\t\tconst { range } = element.location;\n\t\t\tconst doc = await element.getDocument(true);\n\t\t\tconst { before, inside, after } = getPreviewChunks(doc, range);\n\n\t\t\tconst label: vscode.TreeItemLabel = {\n\t\t\t\tlabel: before + inside + after,\n\t\t\t\thighlights: [[before.length, before.length + inside.length]]\n\t\t\t};\n\n\t\t\tconst result = new vscode.TreeItem(label);\n\t\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.None;\n\t\t\tresult.contextValue = 'reference-item';\n\t\t\tresult.command = {\n\t\t\t\tcommand: 'vscode.open',\n\t\t\t\ttitle: localize('open', 'Open Reference'),\n\t\t\t\targuments: [\n\t\t\t\t\telement.location.uri,\n\t\t\t\t\t<vscode.TextDocumentShowOptions>{ selection: range.with({ end: range.start }) }\n\t\t\t\t]\n\t\t\t};\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tasync getChildren(element?: FileItem | ReferenceItem) {\n\t\tif (!element) {\n\t\t\treturn this._model.items;\n\t\t}\n\t\tif (element instanceof FileItem) {\n\t\t\treturn element.references;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetParent(element: FileItem | ReferenceItem) {\n\t\treturn element instanceof ReferenceItem ? element.file : undefined;\n\t}\n}\n\nexport class FileItem {\n\n\tconstructor(\n\t\treadonly uri: vscode.Uri,\n\t\treadonly references: Array<ReferenceItem>,\n\t\treadonly model: ReferencesModel\n\t) { }\n\n\t// --- adapter\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n\n\tasync asCopyText() {\n\t\tlet result = `${vscode.workspace.asRelativePath(this.uri)}\\n`;\n\t\tfor (const ref of this.references) {\n\t\t\tresult += `  ${await ref.asCopyText()}\\n`;\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport class ReferenceItem {\n\n\tprivate _document: Thenable<vscode.TextDocument> | undefined;\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly file: FileItem,\n\t) { }\n\n\tasync getDocument(warmUpNext?: boolean) {\n\t\tif (!this._document) {\n\t\t\tthis._document = vscode.workspace.openTextDocument(this.location.uri);\n\t\t}\n\t\tif (warmUpNext) {\n\t\t\t// load next document once this document has been loaded\n\t\t\tconst next = this.file.model.next(this.file);\n\t\t\tif (next instanceof FileItem && next !== this.file) {\n\t\t\t\tvscode.workspace.openTextDocument(next.uri);\n\t\t\t} else if (next instanceof ReferenceItem) {\n\t\t\t\tvscode.workspace.openTextDocument(next.location.uri);\n\t\t\t}\n\t\t}\n\t\treturn this._document;\n\t}\n\n\t// --- adapter\n\n\tremove(): void {\n\t\tthis.file.model.remove(this);\n\t}\n\n\tasync asCopyText() {\n\t\tconst doc = await this.getDocument();\n\t\tconst chunks = getPreviewChunks(doc, this.location.range, 21, false);\n\t\treturn `${this.location.range.start.line + 1}, ${this.location.range.start.character + 1}: ${chunks.before + chunks.inside + chunks.after}`;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { EditorHighlights } from './highlights';\nimport { Navigation } from './navigation';\nimport { SymbolItemDragAndDrop, SymbolTreeInput } from './references-view';\nimport { ContextKey, isValidRequestPosition, WordAnchor } from './utils';\nimport * as nls from 'vscode-nls';\nconst localize = nls.loadMessageBundle();\n\n\nexport class SymbolsTree {\n\n\treadonly viewId = 'references-view.tree';\n\n\tprivate readonly _ctxIsActive = new ContextKey<boolean>('reference-list.isActive');\n\tprivate readonly _ctxHasResult = new ContextKey<boolean>('reference-list.hasResult');\n\tprivate readonly _ctxInputSource = new ContextKey<string>('reference-list.source');\n\n\tprivate readonly _history = new TreeInputHistory(this);\n\tprivate readonly _provider = new TreeDataProviderDelegate();\n\tprivate readonly _dnd = new TreeDndDelegate();\n\tprivate readonly _tree: vscode.TreeView<unknown>;\n\tprivate readonly _navigation: Navigation;\n\n\tprivate _input?: SymbolTreeInput<unknown>;\n\tprivate _sessionDisposable?: vscode.Disposable;\n\n\tconstructor() {\n\t\tthis._tree = vscode.window.createTreeView<unknown>(this.viewId, {\n\t\t\ttreeDataProvider: this._provider,\n\t\t\tshowCollapseAll: true,\n\t\t\tdragAndDropController: this._dnd\n\t\t});\n\t\tthis._navigation = new Navigation(this._tree);\n\t}\n\n\tdispose(): void {\n\t\tthis._history.dispose();\n\t\tthis._tree.dispose();\n\t\tthis._sessionDisposable?.dispose();\n\t}\n\n\tgetInput(): SymbolTreeInput<unknown> | undefined {\n\t\treturn this._input;\n\t}\n\n\tasync setInput(input: SymbolTreeInput<unknown>) {\n\n\t\tif (!await isValidRequestPosition(input.location.uri, input.location.range.start)) {\n\t\t\tthis.clearInput();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._ctxInputSource.set(input.contextValue);\n\t\tthis._ctxIsActive.set(true);\n\t\tthis._ctxHasResult.set(true);\n\t\tvscode.commands.executeCommand(`${this.viewId}.focus`);\n\n\t\tconst newInputKind = !this._input || Object.getPrototypeOf(this._input) !== Object.getPrototypeOf(input);\n\t\tthis._input = input;\n\t\tthis._sessionDisposable?.dispose();\n\n\t\tthis._tree.title = input.title;\n\t\tthis._tree.message = newInputKind ? undefined : this._tree.message;\n\n\t\tconst modelPromise = Promise.resolve(input.resolve());\n\n\t\t// set promise to tree data provider to trigger tree loading UI\n\t\tthis._provider.update(modelPromise.then(model => model?.provider ?? this._history));\n\t\tthis._dnd.update(modelPromise.then(model => model?.dnd));\n\n\t\tconst model = await modelPromise;\n\t\tif (this._input !== input) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!model) {\n\t\t\tthis.clearInput();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._history.add(input);\n\t\tthis._tree.message = model.message;\n\n\t\t// navigation\n\t\tthis._navigation.update(model.navigation);\n\n\t\t// reveal & select\n\t\tconst selection = model.navigation?.nearest(input.location.uri, input.location.range.start);\n\t\tif (selection && this._tree.visible) {\n\t\t\tawait this._tree.reveal(selection, { select: true, focus: true, expand: true });\n\t\t}\n\n\t\tconst disposables: vscode.Disposable[] = [];\n\n\t\t// editor highlights\n\t\tlet highlights: EditorHighlights<unknown> | undefined;\n\t\tif (model.highlights) {\n\t\t\thighlights = new EditorHighlights(this._tree, model.highlights);\n\t\t\tdisposables.push(highlights);\n\t\t}\n\n\t\t// listener\n\t\tif (model.provider.onDidChangeTreeData) {\n\t\t\tdisposables.push(model.provider.onDidChangeTreeData(() => {\n\t\t\t\tthis._tree.title = input.title;\n\t\t\t\tthis._tree.message = model.message;\n\t\t\t\thighlights?.update();\n\t\t\t}));\n\t\t}\n\t\tif (typeof model.dispose === 'function') {\n\t\t\tdisposables.push(new vscode.Disposable(() => model.dispose!()));\n\t\t}\n\t\tthis._sessionDisposable = vscode.Disposable.from(...disposables);\n\t}\n\n\tclearInput(): void {\n\t\tthis._sessionDisposable?.dispose();\n\t\tthis._input = undefined;\n\t\tthis._ctxHasResult.set(false);\n\t\tthis._ctxInputSource.reset();\n\t\tthis._tree.title = localize('title', 'References');\n\t\tthis._tree.message = this._history.size === 0\n\t\t\t? localize('noresult', 'No results.')\n\t\t\t: localize('noresult2', 'No results. Try running a previous search again:');\n\t\tthis._provider.update(Promise.resolve(this._history));\n\t}\n}\n\n// --- tree data\n\ninterface ActiveTreeDataProviderWrapper {\n\tprovider: Promise<vscode.TreeDataProvider<any>>;\n}\n\nclass TreeDataProviderDelegate implements vscode.TreeDataProvider<undefined> {\n\n\tprovider?: Promise<vscode.TreeDataProvider<any>>;\n\n\tprivate _sessionDispoables?: vscode.Disposable;\n\tprivate _onDidChange = new vscode.EventEmitter<any>();\n\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\tupdate(provider: Promise<vscode.TreeDataProvider<any>>) {\n\n\t\tthis._sessionDispoables?.dispose();\n\t\tthis._sessionDispoables = undefined;\n\n\t\tthis._onDidChange.fire(undefined);\n\n\t\tthis.provider = provider;\n\n\t\tprovider.then(value => {\n\t\t\tif (this.provider === provider && value.onDidChangeTreeData) {\n\t\t\t\tthis._sessionDispoables = value.onDidChangeTreeData(this._onDidChange.fire, this._onDidChange);\n\t\t\t}\n\t\t}).catch(err => {\n\t\t\tthis.provider = undefined;\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tasync getTreeItem(element: unknown) {\n\t\tthis._assertProvider();\n\t\treturn (await this.provider).getTreeItem(element);\n\t}\n\n\tasync getChildren(parent?: unknown | undefined) {\n\t\tthis._assertProvider();\n\t\treturn (await this.provider).getChildren(parent);\n\t}\n\n\tasync getParent(element: unknown) {\n\t\tthis._assertProvider();\n\t\tconst provider = await this.provider;\n\t\treturn provider.getParent ? provider.getParent(element) : undefined;\n\t}\n\n\tprivate _assertProvider(): asserts this is ActiveTreeDataProviderWrapper {\n\t\tif (!this.provider) {\n\t\t\tthrow new Error('MISSING provider');\n\t\t}\n\t}\n}\n\n// --- tree dnd\n\nclass TreeDndDelegate implements vscode.TreeDragAndDropController<undefined> {\n\n\tprivate _delegate: SymbolItemDragAndDrop<undefined> | undefined;\n\n\treadonly dropMimeTypes: string[] = [];\n\n\treadonly dragMimeTypes: string[] = ['text/uri-list'];\n\n\tupdate(delegate: Promise<SymbolItemDragAndDrop<unknown> | undefined>) {\n\t\tthis._delegate = undefined;\n\t\tdelegate.then(value => this._delegate = value);\n\t}\n\n\thandleDrag(source: undefined[], data: vscode.DataTransfer) {\n\t\tif (this._delegate) {\n\t\t\tconst urls: string[] = [];\n\t\t\tfor (const item of source) {\n\t\t\t\tconst uri = this._delegate.getDragUri(item);\n\t\t\t\tif (uri) {\n\t\t\t\t\turls.push(uri.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (urls.length > 0) {\n\t\t\t\tdata.set('text/uri-list', new vscode.DataTransferItem(urls.join('\\r\\n')));\n\t\t\t}\n\t\t}\n\t}\n\n\thandleDrop(): void | Thenable<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\n// --- history\n\nclass HistoryItem {\n\n\treadonly description: string;\n\n\tconstructor(\n\t\treadonly key: string,\n\t\treadonly word: string,\n\t\treadonly anchor: WordAnchor,\n\t\treadonly input: SymbolTreeInput<unknown>,\n\t) {\n\t\tthis.description = `${vscode.workspace.asRelativePath(input.location.uri)} • ${input.title.toLocaleLowerCase()}`;\n\t}\n}\n\nclass TreeInputHistory implements vscode.TreeDataProvider<HistoryItem>{\n\n\tprivate readonly _onDidChangeTreeData = new vscode.EventEmitter<HistoryItem | undefined>();\n\treadonly onDidChangeTreeData = this._onDidChangeTreeData.event;\n\n\tprivate readonly _disposables: vscode.Disposable[] = [];\n\tprivate readonly _ctxHasHistory = new ContextKey<boolean>('reference-list.hasHistory');\n\tprivate readonly _inputs = new Map<string, HistoryItem>();\n\n\tconstructor(private readonly _tree: SymbolsTree) {\n\n\t\tthis._disposables.push(\n\t\t\tvscode.commands.registerCommand('references-view.clear', () => _tree.clearInput()),\n\t\t\tvscode.commands.registerCommand('references-view.clearHistory', () => {\n\t\t\t\tthis.clear();\n\t\t\t\t_tree.clearInput();\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.refind', (item) => {\n\t\t\t\tif (item instanceof HistoryItem) {\n\t\t\t\t\tthis._reRunHistoryItem(item);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.refresh', () => {\n\t\t\t\tconst item = Array.from(this._inputs.values()).pop();\n\t\t\t\tif (item) {\n\t\t\t\t\tthis._reRunHistoryItem(item);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('_references-view.showHistoryItem', async (item) => {\n\t\t\t\tif (item instanceof HistoryItem) {\n\t\t\t\t\tconst position = item.anchor.guessedTrackedPosition() ?? item.input.location.range.start;\n\t\t\t\t\treturn vscode.commands.executeCommand('vscode.open', item.input.location.uri, { selection: new vscode.Range(position, position) });\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.pickFromHistory', async () => {\n\t\t\t\tinterface HistoryPick extends vscode.QuickPickItem {\n\t\t\t\t\titem: HistoryItem;\n\t\t\t\t}\n\t\t\t\tconst entries = await this.getChildren();\n\t\t\t\tconst picks = entries.map(item => <HistoryPick>{\n\t\t\t\t\tlabel: item.word,\n\t\t\t\t\tdescription: item.description,\n\t\t\t\t\titem\n\t\t\t\t});\n\t\t\t\tconst pick = await vscode.window.showQuickPick(picks, { placeHolder: localize('placeholder', 'Select previous reference search') });\n\t\t\t\tif (pick) {\n\t\t\t\t\tthis._reRunHistoryItem(pick.item);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tvscode.Disposable.from(...this._disposables).dispose();\n\t\tthis._onDidChangeTreeData.dispose();\n\t}\n\n\tprivate _reRunHistoryItem(item: HistoryItem): void {\n\t\tthis._inputs.delete(item.key);\n\t\tconst newPosition = item.anchor.guessedTrackedPosition();\n\t\tlet newInput = item.input;\n\t\t// create a new input when having a tracked position which is\n\t\t// different than the original position.\n\t\tif (newPosition && !item.input.location.range.start.isEqual(newPosition)) {\n\t\t\tnewInput = item.input.with(new vscode.Location(item.input.location.uri, newPosition));\n\t\t}\n\t\tthis._tree.setInput(newInput);\n\t}\n\n\tasync add(input: SymbolTreeInput<unknown>) {\n\n\t\tconst doc = await vscode.workspace.openTextDocument(input.location.uri);\n\n\t\tconst anchor = new WordAnchor(doc, input.location.range.start);\n\t\tconst range = doc.getWordRangeAtPosition(input.location.range.start) ?? doc.getWordRangeAtPosition(input.location.range.start, /[^\\s]+/);\n\t\tconst word = range ? doc.getText(range) : '???';\n\n\t\tconst item = new HistoryItem(JSON.stringify([range?.start ?? input.location.range.start, input.location.uri, input.title]), word, anchor, input);\n\t\t// use filo-ordering of native maps\n\t\tthis._inputs.delete(item.key);\n\t\tthis._inputs.set(item.key, item);\n\t\tthis._ctxHasHistory.set(true);\n\t}\n\n\tclear(): void {\n\t\tthis._inputs.clear();\n\t\tthis._ctxHasHistory.set(false);\n\t\tthis._onDidChangeTreeData.fire(undefined);\n\t}\n\n\tget size() {\n\t\treturn this._inputs.size;\n\t}\n\n\t// --- tree data provider\n\n\tgetTreeItem(item: HistoryItem): vscode.TreeItem {\n\t\tconst result = new vscode.TreeItem(item.word);\n\t\tresult.description = item.description;\n\t\tresult.command = { command: '_references-view.showHistoryItem', arguments: [item], title: localize('title.rerun', 'Rerun') };\n\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.None;\n\t\tresult.contextValue = 'history-item';\n\t\treturn result;\n\t}\n\n\tgetChildren() {\n\t\treturn Promise.all([...this._inputs.values()].reverse());\n\t}\n\n\tgetParent() {\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolsTree } from '../tree';\nimport { ContextKey } from '../utils';\nimport { TypeHierarchyDirection, TypeItem, TypesTreeInput } from './model';\n\nexport function register(tree: SymbolsTree, context: vscode.ExtensionContext): void {\n\n\tconst direction = new RichTypesDirection(context.workspaceState, TypeHierarchyDirection.Subtypes);\n\n\tfunction showTypeHierarchy() {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new TypesTreeInput(new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), direction.value);\n\t\t\ttree.setInput(input);\n\t\t}\n\t}\n\n\tfunction setTypeHierarchyDirection(value: TypeHierarchyDirection, anchor: TypeItem | unknown) {\n\t\tdirection.value = value;\n\n\t\tlet newInput: TypesTreeInput | undefined;\n\t\tconst oldInput = tree.getInput();\n\t\tif (anchor instanceof TypeItem) {\n\t\t\tnewInput = new TypesTreeInput(new vscode.Location(anchor.item.uri, anchor.item.selectionRange.start), direction.value);\n\t\t} else if (oldInput instanceof TypesTreeInput) {\n\t\t\tnewInput = new TypesTreeInput(oldInput.location, direction.value);\n\t\t}\n\t\tif (newInput) {\n\t\t\ttree.setInput(newInput);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.showTypeHierarchy', showTypeHierarchy),\n\t\tvscode.commands.registerCommand('references-view.showSupertypes', (item: TypeItem | unknown) => setTypeHierarchyDirection(TypeHierarchyDirection.Supertypes, item)),\n\t\tvscode.commands.registerCommand('references-view.showSubtypes', (item: TypeItem | unknown) => setTypeHierarchyDirection(TypeHierarchyDirection.Subtypes, item)),\n\t\tvscode.commands.registerCommand('references-view.removeTypeItem', removeTypeItem)\n\t);\n}\n\nfunction removeTypeItem(item: TypeItem | unknown): void {\n\tif (item instanceof TypeItem) {\n\t\titem.remove();\n\t}\n}\n\nclass RichTypesDirection {\n\n\tprivate static _key = 'references-view.typeHierarchyMode';\n\n\tprivate _ctxMode = new ContextKey<TypeHierarchyDirection>('references-view.typeHierarchyMode');\n\n\tconstructor(\n\t\tprivate _mem: vscode.Memento,\n\t\tprivate _value: TypeHierarchyDirection = TypeHierarchyDirection.Subtypes,\n\t) {\n\t\tconst raw = _mem.get<TypeHierarchyDirection>(RichTypesDirection._key);\n\t\tif (typeof raw === 'string') {\n\t\t\tthis.value = raw;\n\t\t} else {\n\t\t\tthis.value = _value;\n\t\t}\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: TypeHierarchyDirection) {\n\t\tthis._value = value;\n\t\tthis._ctxMode.set(value);\n\t\tthis._mem.update(RichTypesDirection._key, value);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemDragAndDrop, SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput } from '../references-view';\nimport { asResourceUrl, del, getThemeIcon, tail } from '../utils';\nimport * as nls from 'vscode-nls';\nconst localize = nls.loadMessageBundle();\n\nexport class TypesTreeInput implements SymbolTreeInput<TypeItem> {\n\n\treadonly title: string;\n\treadonly contextValue: string = 'typeHierarchy';\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly direction: TypeHierarchyDirection,\n\t) {\n\t\tthis.title = direction === TypeHierarchyDirection.Supertypes\n\t\t\t? localize('title.sup', 'Supertypes Of')\n\t\t\t: localize('title.sub', 'Subtypes Of');\n\t}\n\n\tasync resolve() {\n\n\t\tconst items = await Promise.resolve(vscode.commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.prepareTypeHierarchy', this.location.uri, this.location.range.start));\n\t\tconst model = new TypesModel(this.direction, items ?? []);\n\t\tconst provider = new TypeItemDataProvider(model);\n\n\t\tif (model.roots.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\tprovider,\n\t\t\tget message() { return model.roots.length === 0 ? localize('noresult', 'No results.') : undefined; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdnd: model,\n\t\t\tdispose() {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(location: vscode.Location): TypesTreeInput {\n\t\treturn new TypesTreeInput(location, this.direction);\n\t}\n}\n\n\nexport const enum TypeHierarchyDirection {\n\tSubtypes = 'subtypes',\n\tSupertypes = 'supertypes'\n}\n\n\nexport class TypeItem {\n\n\tchildren?: TypeItem[];\n\n\tconstructor(\n\t\treadonly model: TypesModel,\n\t\treadonly item: vscode.TypeHierarchyItem,\n\t\treadonly parent: TypeItem | undefined,\n\t) { }\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n}\n\nclass TypesModel implements SymbolItemNavigation<TypeItem>, SymbolItemEditorHighlights<TypeItem>, SymbolItemDragAndDrop<TypeItem> {\n\n\treadonly roots: TypeItem[] = [];\n\n\tprivate readonly _onDidChange = new vscode.EventEmitter<TypesModel>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tconstructor(readonly direction: TypeHierarchyDirection, items: vscode.TypeHierarchyItem[]) {\n\t\tthis.roots = items.map(item => new TypeItem(this, item, undefined));\n\t}\n\n\tprivate async _resolveTypes(currentType: TypeItem): Promise<TypeItem[]> {\n\t\tif (this.direction === TypeHierarchyDirection.Supertypes) {\n\t\t\tconst types = await vscode.commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.provideSupertypes', currentType.item);\n\t\t\treturn types ? types.map(item => new TypeItem(this, item, currentType)) : [];\n\t\t} else {\n\t\t\tconst types = await vscode.commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.provideSubtypes', currentType.item);\n\t\t\treturn types ? types.map(item => new TypeItem(this, item, currentType)) : [];\n\t\t}\n\t}\n\n\tasync getTypeChildren(item: TypeItem): Promise<TypeItem[]> {\n\t\tif (!item.children) {\n\t\t\titem.children = await this._resolveTypes(item);\n\t\t}\n\t\treturn item.children;\n\t}\n\n\t// -- dnd\n\n\tgetDragUri(item: TypeItem): vscode.Uri | undefined {\n\t\treturn asResourceUrl(item.item.uri, item.item.range);\n\t}\n\n\t// -- navigation\n\n\tlocation(currentType: TypeItem) {\n\t\treturn new vscode.Location(currentType.item.uri, currentType.item.range);\n\t}\n\n\tnearest(uri: vscode.Uri, _position: vscode.Position): TypeItem | undefined {\n\t\treturn this.roots.find(item => item.item.uri.toString() === uri.toString()) ?? this.roots[0];\n\t}\n\n\tnext(from: TypeItem): TypeItem {\n\t\treturn this._move(from, true) ?? from;\n\t}\n\n\tprevious(from: TypeItem): TypeItem {\n\t\treturn this._move(from, false) ?? from;\n\t}\n\n\tprivate _move(item: TypeItem, fwd: boolean): TypeItem | void {\n\t\tif (item.children?.length) {\n\t\t\treturn fwd ? item.children[0] : tail(item.children);\n\t\t}\n\t\tconst array = this.roots.includes(item) ? this.roots : item.parent?.children;\n\t\tif (array?.length) {\n\t\t\tconst idx = array.indexOf(item);\n\t\t\tconst delta = fwd ? 1 : -1;\n\t\t\treturn array[idx + delta + array.length % array.length];\n\t\t}\n\t}\n\n\t// --- highlights\n\n\tgetEditorHighlights(currentType: TypeItem, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\treturn currentType.item.uri.toString() === uri.toString() ? [currentType.item.selectionRange] : undefined;\n\t}\n\n\tremove(item: TypeItem) {\n\t\tconst isInRoot = this.roots.includes(item);\n\t\tconst siblings = isInRoot ? this.roots : item.parent?.children;\n\t\tif (siblings) {\n\t\t\tdel(siblings, item);\n\t\t\tthis._onDidChange.fire(this);\n\t\t}\n\t}\n}\n\nclass TypeItemDataProvider implements vscode.TreeDataProvider<TypeItem> {\n\n\tprivate readonly _emitter = new vscode.EventEmitter<TypeItem | undefined>();\n\treadonly onDidChangeTreeData = this._emitter.event;\n\n\tprivate readonly _modelListener: vscode.Disposable;\n\n\tconstructor(private _model: TypesModel) {\n\t\tthis._modelListener = _model.onDidChange(e => this._emitter.fire(e instanceof TypeItem ? e : undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis._emitter.dispose();\n\t\tthis._modelListener.dispose();\n\t}\n\n\tgetTreeItem(element: TypeItem): vscode.TreeItem {\n\n\t\tconst item = new vscode.TreeItem(element.item.name);\n\t\titem.description = element.item.detail;\n\t\titem.contextValue = 'type-item';\n\t\titem.iconPath = getThemeIcon(element.item.kind);\n\t\titem.command = {\n\t\t\tcommand: 'vscode.open',\n\t\t\ttitle: localize('title.openType', 'Open Type'),\n\t\t\targuments: [\n\t\t\t\telement.item.uri,\n\t\t\t\t<vscode.TextDocumentShowOptions>{ selection: element.item.selectionRange.with({ end: element.item.selectionRange.start }) }\n\t\t\t]\n\t\t};\n\t\titem.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\treturn item;\n\t}\n\n\tgetChildren(element?: TypeItem | undefined) {\n\t\treturn element\n\t\t\t? this._model.getTypeChildren(element)\n\t\t\t: this._model.roots;\n\t}\n\n\tgetParent(element: TypeItem) {\n\t\treturn element.parent;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\n\nexport function del<T>(array: T[], e: T): void {\n\tconst idx = array.indexOf(e);\n\tif (idx >= 0) {\n\t\tarray.splice(idx, 1);\n\t}\n}\n\nexport function tail<T>(array: T[]): T | undefined {\n\treturn array[array.length - 1];\n}\n\nexport function asResourceUrl(uri: vscode.Uri, range: vscode.Range): vscode.Uri {\n\treturn uri.with({ fragment: `L${1 + range.start.line},${1 + range.start.character}-${1 + range.end.line},${1 + range.end.character}` });\n}\n\nexport async function isValidRequestPosition(uri: vscode.Uri, position: vscode.Position) {\n\tconst doc = await vscode.workspace.openTextDocument(uri);\n\tlet range = doc.getWordRangeAtPosition(position);\n\tif (!range) {\n\t\trange = doc.getWordRangeAtPosition(position, /[^\\s]+/);\n\t}\n\treturn Boolean(range);\n}\n\nexport function getPreviewChunks(doc: vscode.TextDocument, range: vscode.Range, beforeLen: number = 8, trim: boolean = true) {\n\tconst previewStart = range.start.with({ character: Math.max(0, range.start.character - beforeLen) });\n\tconst wordRange = doc.getWordRangeAtPosition(previewStart);\n\tlet before = doc.getText(new vscode.Range(wordRange ? wordRange.start : previewStart, range.start));\n\tconst inside = doc.getText(range);\n\tconst previewEnd = range.end.translate(0, 331);\n\tlet after = doc.getText(new vscode.Range(range.end, previewEnd));\n\tif (trim) {\n\t\tbefore = before.replace(/^\\s*/g, '');\n\t\tafter = after.replace(/\\s*$/g, '');\n\t}\n\treturn { before, inside, after };\n}\n\nexport class ContextKey<V> {\n\n\tconstructor(readonly name: string) { }\n\n\tasync set(value: V) {\n\t\tawait vscode.commands.executeCommand('setContext', this.name, value);\n\t}\n\n\tasync reset() {\n\t\tawait vscode.commands.executeCommand('setContext', this.name, undefined);\n\t}\n}\n\nexport class WordAnchor {\n\n\tprivate readonly _version: number;\n\tprivate readonly _word: string | undefined;\n\n\tconstructor(private readonly _doc: vscode.TextDocument, private readonly _position: vscode.Position) {\n\t\tthis._version = _doc.version;\n\t\tthis._word = this._getAnchorWord(_doc, _position);\n\t}\n\n\tprivate _getAnchorWord(doc: vscode.TextDocument, pos: vscode.Position): string | undefined {\n\t\tconst range = doc.getWordRangeAtPosition(pos) || doc.getWordRangeAtPosition(pos, /[^\\s]+/);\n\t\treturn range && doc.getText(range);\n\t}\n\n\tguessedTrackedPosition(): vscode.Position | undefined {\n\t\t// funky entry\n\t\tif (!this._word) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// no changes\n\t\tif (this._version === this._doc.version) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// no changes here...\n\t\tconst wordNow = this._getAnchorWord(this._doc, this._position);\n\t\tif (this._word === wordNow) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// changes: search _word downwards and upwards\n\t\tconst startLine = this._position.line;\n\t\tlet i = 0;\n\t\tlet line: number;\n\t\tlet checked: boolean;\n\t\tdo {\n\t\t\tchecked = false;\n\t\t\t// nth line down\n\t\t\tline = startLine + i;\n\t\t\tif (line < this._doc.lineCount) {\n\t\t\t\tchecked = true;\n\t\t\t\tconst ch = this._doc.lineAt(line).text.indexOf(this._word);\n\t\t\t\tif (ch >= 0) {\n\t\t\t\t\treturn new vscode.Position(line, ch);\n\t\t\t\t}\n\t\t\t}\n\t\t\ti += 1;\n\t\t\t// nth line up\n\t\t\tline = startLine - i;\n\t\t\tif (line >= 0) {\n\t\t\t\tchecked = true;\n\t\t\t\tconst ch = this._doc.lineAt(line).text.indexOf(this._word);\n\t\t\t\tif (ch >= 0) {\n\t\t\t\t\treturn new vscode.Position(line, ch);\n\t\t\t\t}\n\t\t\t}\n\t\t} while (i < 100 && checked);\n\n\t\t// fallback\n\t\treturn this._position;\n\t}\n}\n\n// vscode.SymbolKind.File === 0, Module === 1, etc...\nconst _themeIconIds = [\n\t'symbol-file', 'symbol-module', 'symbol-namespace', 'symbol-package', 'symbol-class', 'symbol-method',\n\t'symbol-property', 'symbol-field', 'symbol-constructor', 'symbol-enum', 'symbol-interface',\n\t'symbol-function', 'symbol-variable', 'symbol-constant', 'symbol-string', 'symbol-number', 'symbol-boolean',\n\t'symbol-array', 'symbol-object', 'symbol-key', 'symbol-null', 'symbol-enum-member', 'symbol-struct',\n\t'symbol-event', 'symbol-operator', 'symbol-type-parameter'\n];\n\nexport function getThemeIcon(kind: vscode.SymbolKind): vscode.ThemeIcon | undefined {\n\tconst id = _themeIconIds[kind];\n\treturn id ? new vscode.ThemeIcon(id) : undefined;\n}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport * as calls from './calls';\nimport * as references from './references';\nimport { SymbolTree, SymbolTreeInput } from './references-view';\nimport { SymbolsTree } from './tree';\nimport * as types from './types';\n\nexport function activate(context: vscode.ExtensionContext): SymbolTree {\n\n\tconst tree = new SymbolsTree();\n\n\treferences.register(tree, context);\n\tcalls.register(tree, context);\n\ttypes.register(tree, context);\n\n\tfunction setInput(input: SymbolTreeInput<unknown>) {\n\t\ttree.setInput(input);\n\t}\n\n\treturn { setInput };\n}\n"],"sourceRoot":""}