{"version":3,"file":"xterm-addon-webgl.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAoB,WAAID,IAExBD,EAAiB,WAAIC,GACtB,CATD,CASGK,MAAM,WACT,M,qlBCLA,aAGA,SACA,SAIA,SAuDMC,EAAmB,GACnBC,EAAiBD,EAAmBE,aAAaC,kBAGvD,cAqBE,WACUC,EACAC,EACAC,EACAC,GAJV,MAME,cAAO,KALC,EAAAH,UAAAA,EACA,EAAAC,QAAAA,EACA,EAAAC,IAAAA,EACA,EAAAC,YAAAA,EAfF,EAAAC,cAAwB,EAExB,EAAAC,UAAuB,CAC7BC,MAAO,EACPC,WAAY,IAAIT,aAAa,GAC7BU,kBAAmB,CACjB,IAAIV,aAAa,GACjB,IAAIA,aAAa,KAYnB,IAAMW,EAAK,EAAKP,IAChB,EAAKQ,UAAW,IAAAC,eAAa,IAAAC,eAAcH,EAlEpB,qjBAmBE,0LAgDzB,EAAKI,UAAS,IAAAC,eAAa,WAAM,OAAAL,EAAGM,cAAc,EAAKL,SAAtB,KAGjC,EAAKM,qBAAsB,IAAAL,cAAaF,EAAGQ,mBAAmB,EAAKP,SAAU,iBAC7E,EAAKQ,qBAAsB,IAAAP,cAAaF,EAAGQ,mBAAmB,EAAKP,SAAU,iBAC7E,EAAKS,kBAAmB,IAAAR,cAAaF,EAAGQ,mBAAmB,EAAKP,SAAU,cAG1E,EAAKU,mBAAqBX,EAAGY,oBAC7BZ,EAAGa,gBAAgB,EAAKF,oBAGxB,IAAMG,EAAmB,IAAIzB,aAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1D0B,EAAyBf,EAAGgB,eAClC,EAAKZ,UAAS,IAAAC,eAAa,WAAM,OAAAL,EAAGiB,aAAaF,EAAhB,KACjCf,EAAGkB,WAAWlB,EAAGmB,aAAcJ,GAC/Bf,EAAGoB,WAAWpB,EAAGmB,aAAcL,EAAkBd,EAAGqB,aACpDrB,EAAGsB,wBAAwB,GAC3BtB,EAAGuB,oBAAoB,EAAiC,EAAG,EAAK9B,IAAI+B,OAAO,EAAO,EAAG,GAIrF,IAAMC,EAAyB,IAAIC,WAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IACxDC,EAAuB3B,EAAGgB,e,OAChC,EAAKZ,UAAS,IAAAC,eAAa,WAAM,OAAAL,EAAGiB,aAAaU,EAAhB,KACjC3B,EAAGkB,WAAWlB,EAAG4B,qBAAsBD,GACvC3B,EAAGoB,WAAWpB,EAAG4B,qBAAsBH,EAAwBzB,EAAGqB,aAGlE,EAAKQ,mBAAoB,IAAA3B,cAAaF,EAAGgB,gBACzC,EAAKZ,UAAS,IAAAC,eAAa,WAAM,OAAAL,EAAGiB,aAAa,EAAKY,kBAArB,KACjC7B,EAAGkB,WAAWlB,EAAGmB,aAAc,EAAKU,mBACpC7B,EAAGsB,wBAAwB,GAC3BtB,EAAGuB,oBAAoB,EAA8B,EAAGvB,EAAGwB,OAAO,EAAOpC,EAAgB,GACzFY,EAAG8B,oBAAoB,EAA8B,GACrD9B,EAAGsB,wBAAwB,GAC3BtB,EAAGuB,oBAAoB,EAA4B,EAAGvB,EAAGwB,OAAO,EAAOpC,EAAgB,EAAIC,aAAaC,mBACxGU,EAAG8B,oBAAoB,EAA4B,GACnD9B,EAAGsB,wBAAwB,GAC3BtB,EAAGuB,oBAAoB,EAAgC,EAAGvB,EAAGwB,OAAO,EAAOpC,EAAgB,EAAIC,aAAaC,mBAC5GU,EAAG8B,oBAAoB,EAAgC,GACvD9B,EAAGsB,wBAAwB,GAC3BtB,EAAGuB,oBAAoB,EAA+B,EAAGvB,EAAGwB,OAAO,EAAOpC,EAAgB,EAAIC,aAAaC,mBAC3GU,EAAG8B,oBAAoB,EAA+B,GACtD9B,EAAGsB,wBAAwB,GAC3BtB,EAAGuB,oBAAoB,EAAqC,EAAGvB,EAAGwB,OAAO,EAAOpC,EAAgB,EAAIC,aAAaC,mBACjHU,EAAG8B,oBAAoB,EAAqC,GAG5D,EAAKC,eAAgB,IAAA7B,cAAaF,EAAGgC,iBACrC,EAAK5B,UAAS,IAAAC,eAAa,WAAM,OAAAL,EAAGiC,cAAc,EAAKF,cAAtB,KACjC/B,EAAGkC,YAAYlC,EAAGmC,WAAY,EAAKJ,eACnC/B,EAAGoC,WAAWpC,EAAGmC,WAAY,EAAGnC,EAAGqC,KAAM,EAAG,EAAG,EAAGrC,EAAGqC,KAAMrC,EAAGsC,cAAe,IAAIZ,WAAW,CAAC,EAAG,EAAG,IAAK,OACxG1B,EAAGuC,cAAcvC,EAAGmC,WAAYnC,EAAGwC,eAAgBxC,EAAGyC,eACtDzC,EAAGuC,cAAcvC,EAAGmC,WAAYnC,EAAG0C,eAAgB1C,EAAGyC,eAGtDzC,EAAG2C,OAAO3C,EAAG4C,OACb5C,EAAG6C,UAAU7C,EAAG8C,UAAW9C,EAAG+C,qBAG9B,EAAKC,W,CACP,CAwKF,OArQoC,OA+F3B,YAAAC,WAAP,WACE,OAAOC,KAAKC,QAASD,KAAKC,OAAOF,YACnC,EAEO,YAAAG,WAAP,SAAkBC,EAAWC,EAAWC,EAAcC,EAAYC,EAAYC,EAAeC,GAC3FT,KAAKU,YAAYV,KAAKtD,UAAUE,WAAYuD,EAAGC,EAAGC,EAAMC,EAAIC,EAAIC,EAAOC,EACzE,EAEQ,YAAAC,YAAR,SAAoBC,EAAqBR,EAAWC,EAAWC,EAA0BC,EAAYC,EAAYC,EAAeC,GAC9H,IAWIG,EATEC,GAAKT,EAFMJ,KAAK3D,UAEEyE,KAAOX,GAAKlE,EAIpC,GAAIoE,IAAS,EAAAU,qBAA2BC,IAATX,GAM/B,GAAKL,KAAKC,OAYV,GANEW,EADEJ,GAASA,EAAMS,OAAS,EACRjB,KAAKC,OAAOiB,+BAA+BV,EAAOF,EAAIC,GAEtDP,KAAKC,OAAOkB,mBAAmBd,EAAMC,EAAIC,GAS7D,GAAID,IAAOG,GAAUG,EAAgBQ,OAAOjB,EAAI,EAAG,CACjD,IAAMkB,EAAgBT,EAAgBQ,OAAOjB,EAE7CQ,EAAME,GAASb,KAAKxD,YAAY8E,eAChCX,EAAME,EAAI,IAAMD,EAAgBQ,OAAOhB,EAAIJ,KAAKxD,YAAY+E,cAE5DZ,EAAME,EAAI,IAAMD,EAAgBY,KAAKrB,EAAIkB,GAAiBrB,KAAKxD,YAAYiF,kBAC3Ed,EAAME,EAAI,GAAKD,EAAgBY,KAAKpB,EAAIJ,KAAKxD,YAAYkF,mBAEzDf,EAAME,EAAI,GAAKD,EAAgBe,yBAAyBxB,EAAIkB,EAAgBrB,KAAKC,OAAO2B,YAAYC,MACpGlB,EAAME,EAAI,GAAKD,EAAgBe,yBAAyBvB,EAExDO,EAAME,EAAI,GAAKD,EAAgBkB,cAAc3B,EAAIkB,EAAgBrB,KAAKC,OAAO2B,YAAYC,MACzFlB,EAAME,EAAI,GAAKD,EAAgBkB,cAAc1B,C,MAG7CO,EAAME,IAAUD,EAAgBQ,OAAOjB,EAAIH,KAAKxD,YAAY8E,eAC5DX,EAAME,EAAI,IAAMD,EAAgBQ,OAAOhB,EAAIJ,KAAKxD,YAAY+E,cAE5DZ,EAAME,EAAI,GAAKD,EAAgBY,KAAKrB,EAAIH,KAAKxD,YAAYiF,kBACzDd,EAAME,EAAI,GAAKD,EAAgBY,KAAKpB,EAAIJ,KAAKxD,YAAYkF,mBAEzDf,EAAME,EAAI,GAAKD,EAAgBe,yBAAyBxB,EACxDQ,EAAME,EAAI,GAAKD,EAAgBe,yBAAyBvB,EAExDO,EAAME,EAAI,GAAKD,EAAgBkB,cAAc3B,EAC7CQ,EAAME,EAAI,GAAKD,EAAgBkB,cAAc1B,OA9B7C,IAAA2B,MAAKpB,EAAO,EAAGE,EAAGA,EAAI5E,EAAmB,EAnIjB,QAiHxB,IAAA8F,MAAKpB,EAAO,EAAGE,EAAGA,EAAI5E,EAAmB,EAjHjB,EAoK5B,EAEO,YAAA+F,MAAP,SAAaC,GACX,IAAMC,EAAWlC,KAAK3D,UAChB8F,EAAWD,EAASpB,KAAOoB,EAASE,KAAOnG,EAGjD,GAAKgG,GAASjC,KAAKtD,UAAUC,QAAUwF,EAAvC,CAKAnC,KAAKtD,UAAUC,MAAQwF,EACvBnC,KAAKtD,UAAUE,WAAa,IAAIT,aAAagG,GAC7C,IAAK,IAAI,EAAI,EAAG,EAAInC,KAAKtD,UAAUG,kBAAkBoE,OAAQ,IAC3DjB,KAAKtD,UAAUG,kBAAkB,GAAK,IAAIV,aAAagG,GAGzD,IADA,IAAItB,EAAI,EACCT,EAAI,EAAGA,EAAI8B,EAASE,KAAMhC,IACjC,IAAK,IAAID,EAAI,EAAGA,EAAI+B,EAASpB,KAAMX,IACjCH,KAAKtD,UAAUE,WAAWiE,EAAI,GAAKV,EAAI+B,EAASpB,KAChDd,KAAKtD,UAAUE,WAAWiE,EAAI,GAAKT,EAAI8B,EAASE,KAChDvB,GAAK5E,C,CAGX,EAEO,YAAA6D,SAAP,WACE,IAAMhD,EAAKkD,KAAKzD,IAChBO,EAAGuF,SAAS,EAAG,EAAGvF,EAAGwF,OAAOT,MAAO/E,EAAGwF,OAAOC,QAC7CvC,KAAKgC,OACP,EAEO,YAAAQ,UAAP,WACA,EAEO,YAAAC,OAAP,SAAcC,GACZ,GAAK1C,KAAKC,OAAV,CAIA,IAAMnD,EAAKkD,KAAKzD,IAEhBO,EAAG6F,WAAW3C,KAAKjD,UACnBD,EAAGa,gBAAgBqC,KAAKvC,oBAGxBuC,KAAKvD,eAAiBuD,KAAKvD,cAAgB,GAAK,EAWhD,IAVA,IAAMmG,EAAe5C,KAAKtD,UAAUG,kBAAkBmD,KAAKvD,eASvDoG,EAAe,EACVzC,EAAI,EAAGA,EAAIsC,EAAYI,YAAY7B,OAAQb,IAAK,CACvD,IAAM2C,EAAK3C,EAAIJ,KAAK3D,UAAUyE,KAAO7E,EAC/B+G,EAAMhD,KAAKtD,UAAUE,WAAWqG,SAASF,EAAIA,EAAKL,EAAYI,YAAY1C,GAAKnE,GACrF2G,EAAaM,IAAIF,EAAKH,GACtBA,GAAgBG,EAAI/B,M,CAItBnE,EAAGkB,WAAWlB,EAAGmB,aAAc+B,KAAKrB,mBACpC7B,EAAGoB,WAAWpB,EAAGmB,aAAc2E,EAAaK,SAAS,EAAGJ,GAAe/F,EAAGqG,aAGtEnD,KAAKC,OAAOmD,mBACdpD,KAAKC,OAAOmD,kBAAmB,EAC/BtG,EAAGuG,UAAUrD,KAAKxC,iBAAkB,GACpCV,EAAGwG,cAAcxG,EAAGyG,SAAW,GAC/BzG,EAAGkC,YAAYlC,EAAGmC,WAAYe,KAAKnB,eACnC/B,EAAGoC,WAAWpC,EAAGmC,WAAY,EAAGnC,EAAGqC,KAAMrC,EAAGqC,KAAMrC,EAAGsC,cAAeY,KAAKC,OAAO2B,aAChF9E,EAAG0G,eAAe1G,EAAGmC,aAIvBnC,EAAG2G,iBAAiBzD,KAAK3C,qBAAqB,EAAO,EAAAqG,mBACrD5G,EAAG6G,UAAU3D,KAAKzC,oBAAqBT,EAAGwF,OAAOT,MAAO/E,EAAGwF,OAAOC,QAGlEzF,EAAG8G,sBAAsB9G,EAAG+G,UAAW,EAAG/G,EAAGsC,cAAe,EAAGyD,EAAe5G,E,CAChF,EAEO,YAAA6H,SAAP,SAAgBC,GACd,IAAMjH,EAAKkD,KAAKzD,IAChByD,KAAKC,OAAS8D,EAEdjH,EAAGkC,YAAYlC,EAAGmC,WAAYe,KAAKnB,eACnC/B,EAAGoC,WAAWpC,EAAGmC,WAAY,EAAGnC,EAAGqC,KAAMrC,EAAGqC,KAAMrC,EAAGsC,cAAe2E,EAAMnC,aAC1E9E,EAAG0G,eAAe1G,EAAGmC,WACvB,EAEO,YAAA+E,cAAP,SAAqBC,GACnBjE,KAAKxD,YAAcyH,CACrB,EACF,EArQA,CAAoC,EAAAC,YAAvB,EAAAC,cAAAA,C,ikBCnEb,aAOA,SACA,SA2CMC,EADwB,EACsBjI,aAAaC,kBAIjE,cAcE,WACUC,EACAC,EACAC,EACAC,GAJV,MAME,cAAO,KALC,EAAAH,UAAAA,EACA,EAAAC,QAAAA,EACA,EAAAC,IAAAA,EACA,EAAAC,YAAAA,EATF,EAAAE,UAAuB,CAC7BC,MAAO,EACPC,WAAY,IAAIT,aAbsB,MAwBtC,IAAMW,EAAK,EAAKP,IAEhB,EAAKQ,UAAW,IAAAC,eAAa,IAAAC,eAAcH,EA9DpB,obAiBE,gIA8CzB,EAAKI,UAAS,IAAAC,eAAa,WAAM,OAAAL,EAAGM,cAAc,EAAKL,SAAtB,KAGjC,EAAKQ,qBAAsB,IAAAP,cAAaF,EAAGQ,mBAAmB,EAAKP,SAAU,iBAC7E,EAAKM,qBAAsB,IAAAL,cAAaF,EAAGQ,mBAAmB,EAAKP,SAAU,iBAG7E,EAAKU,mBAAqBX,EAAGY,oBAC7BZ,EAAGa,gBAAgB,EAAKF,oBAGxB,IAAMG,EAAmB,IAAIzB,aAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1D0B,EAAyBf,EAAGgB,eAClC,EAAKZ,UAAS,IAAAC,eAAa,WAAM,OAAAL,EAAGiB,aAAaF,EAAhB,KACjCf,EAAGkB,WAAWlB,EAAGmB,aAAcJ,GAC/Bf,EAAGoB,WAAWpB,EAAGmB,aAAcL,EAAkBd,EAAGqB,aACpDrB,EAAGsB,wBAAwB,GAC3BtB,EAAGuB,oBAAoB,EAAiC,EAAG,EAAK9B,IAAI+B,OAAO,EAAO,EAAG,GAIrF,IAAMC,EAAyB,IAAIC,WAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IACxDC,EAAuB3B,EAAGgB,e,OAChC,EAAKZ,UAAS,IAAAC,eAAa,WAAM,OAAAL,EAAGiB,aAAaU,EAAhB,KACjC3B,EAAGkB,WAAWlB,EAAG4B,qBAAsBD,GACvC3B,EAAGoB,WAAWpB,EAAG4B,qBAAsBH,EAAwBzB,EAAGqB,aAGlE,EAAKQ,mBAAoB,IAAA3B,cAAaF,EAAGgB,gBACzC,EAAKZ,UAAS,IAAAC,eAAa,WAAM,OAAAL,EAAGiB,aAAa,EAAKY,kBAArB,KACjC7B,EAAGkB,WAAWlB,EAAGmB,aAAc,EAAKU,mBACpC7B,EAAGsB,wBAAwB,GAC3BtB,EAAGuB,oBAAoB,EAAgC,EAAGvB,EAAGwB,OAAO,EAAO8F,EAAqB,GAChGtH,EAAG8B,oBAAoB,EAAgC,GACvD9B,EAAGsB,wBAAwB,GAC3BtB,EAAGuB,oBAAoB,EAA4B,EAAGvB,EAAGwB,OAAO,EAAO8F,EAAqB,EAAIjI,aAAaC,mBAC7GU,EAAG8B,oBAAoB,EAA4B,GACnD9B,EAAGsB,wBAAwB,GAC3BtB,EAAGuB,oBAAoB,EAA6B,EAAGvB,EAAGwB,OAAO,EAAO8F,EAAqB,EAAIjI,aAAaC,mBAC9GU,EAAG8B,oBAAoB,EAA6B,GAEpD,EAAKyF,sB,CACP,CAyJF,OA5NuC,OAqE9B,YAAA5B,OAAP,WACE,IAAM3F,EAAKkD,KAAKzD,IAEhBO,EAAG6F,WAAW3C,KAAKjD,UAEnBD,EAAGa,gBAAgBqC,KAAKvC,oBAExBX,EAAG2G,iBAAiBzD,KAAK3C,qBAAqB,EAAO,EAAAqG,mBACrD5G,EAAG6G,UAAU3D,KAAKzC,oBAAqBT,EAAGwF,OAAOT,MAAO/E,EAAGwF,OAAOC,QAGlEzF,EAAGkB,WAAWlB,EAAGmB,aAAc+B,KAAKrB,mBACpC7B,EAAGoB,WAAWpB,EAAGmB,aAAc+B,KAAKtD,UAAUE,WAAYE,EAAGwH,cAC7DxH,EAAG8G,sBAAsB5D,KAAKzD,IAAIsH,UAAW,EAAG/G,EAAGsC,cAAe,EAAGY,KAAKtD,UAAUC,MACtF,EAEO,YAAAmD,SAAP,WACEE,KAAKuE,0BACP,EAEO,YAAA/B,UAAP,WACExC,KAAKqE,sBACLrE,KAAKuE,0BACP,EAEQ,YAAAF,oBAAR,WACErE,KAAKwE,SAAWxE,KAAKyE,qBAAqBzE,KAAK1D,QAAQoI,WACzD,EAEQ,YAAAH,yBAAR,WAEEvE,KAAK2E,mBACH3E,KAAKtD,UAAUE,WACf,EACA,EACA,EACAoD,KAAK3D,UAAUyE,KAAOd,KAAKxD,YAAYoI,gBACvC5E,KAAK3D,UAAU+F,KAAOpC,KAAKxD,YAAYqI,iBACvC7E,KAAKwE,SAET,EAEO,YAAAM,kBAAP,SAAyBC,GAMvB,IALA,IAAM7C,EAAWlC,KAAK3D,UAChB2I,EAAWhF,KAAKtD,UAElBuI,EAAiB,EAEZ7E,EAAI,EAAGA,EAAI8B,EAASE,KAAMhC,IAAK,CAKtC,IAJA,IAAI8E,GAAiB,EACjBC,EAAY,EACZC,EAAY,EACZC,GAAiB,EACZlF,EAAI,EAAGA,EAAI+B,EAASpB,KAAMX,IAAK,CACtC,IAAMmF,GAAelF,EAAI8B,EAASpB,KAAQX,GAAK,EAAAoF,+BACzCjF,EAAKyE,EAAMS,MAAMF,EAAa,EAAAG,wBAC9BlF,EAAKwE,EAAMS,MAAMF,EAAa,EAAAI,wBAC9BC,KAAkB,SAALpF,GACnB,GAAID,IAAO6E,GAAc5E,IAAO6E,IAAcC,GAAkBM,GAAW,CAEzE,GAAkB,IAAdR,GAAoBE,GAAgC,IAAdD,EAAkB,CAC1D,IAAMhE,EAvIY,EAuIH6D,IACfjF,KAAK4F,iBAAiBZ,EAAU5D,EAAQgE,EAAWD,EAAWD,EAAe/E,EAAGC,E,CAElF8E,EAAgB/E,EAChBgF,EAAY7E,EACZ8E,EAAY7E,EACZ8E,EAAiBM,C,GAIH,IAAdR,GAAoBE,GAAgC,IAAdD,KAClChE,EAlJgB,EAkJP6D,IACfjF,KAAK4F,iBAAiBZ,EAAU5D,EAAQgE,EAAWD,EAAWD,EAAehD,EAASpB,KAAMV,G,CAGhG4E,EAASrI,MAAQsI,CACnB,EAEQ,YAAAW,iBAAR,SAAyBZ,EAAqB5D,EAAgBb,EAAYD,EAAYuF,EAAgBC,EAAc1F,GAClH,IAAI2F,EACJ,GAAS,SAALxF,EACF,OAAa,SAALA,GACN,KAAK,SACL,KAAK,SACHwF,EAAO/F,KAAK1D,QAAQ0J,KAAU,IAALzF,GAA6BwF,KACtD,MACF,KAAK,SACHA,GAAa,SAALxF,IAA6B,EACrC,MAEF,QACEwF,EAAO/F,KAAK1D,QAAQ2J,WAAWF,UAGnC,OAAa,SAALzF,GACN,KAAK,SACL,KAAK,SACHyF,EAAO/F,KAAK1D,QAAQ0J,KAAU,IAAL1F,GAA6ByF,KACtD,MACF,KAAK,SACHA,GAAa,SAALzF,IAA6B,EACrC,MAEF,QACEyF,EAAO/F,KAAK1D,QAAQoI,WAAWqB,KAIjCf,EAASpI,WAAWqE,OAASG,EAAS,IACxC4D,EAASpI,YAAa,IAAAsJ,oBAAmBlB,EAASpI,WAAYoD,KAAK3D,UAAU+F,KAAOpC,KAAK3D,UAAUyE,KAxL3E,IA0L1B,IAAMqF,EAAKN,EAAS7F,KAAKxD,YAAYoI,gBAC/BwB,EAAKhG,EAAIJ,KAAKxD,YAAYqI,iBAC1BwB,GAAMN,GAAQ,GAAM,KAAQ,IAC5BO,GAAMP,GAAQ,GAAM,KAAQ,IAC5BQ,GAAMR,GAAQ,EAAM,KAAQ,IAElC/F,KAAKwG,cAAcxB,EAASpI,WAAYwE,EAAQ+E,EAAIC,GAAKN,EAAOD,GAAU7F,KAAKxD,YAAYoI,gBAAiB5E,KAAKxD,YAAYqI,iBAAkBwB,EAAGC,EAAGC,EAAG,EAC1J,EAEQ,YAAAC,cAAR,SAAsB7F,EAAqBS,EAAgB+E,EAAYC,EAAYvE,EAAeU,EAAgB8D,EAAWC,EAAWC,EAAWE,GACjJ9F,EAAMS,GAAc+E,EACpBxF,EAAMS,EAAS,GAAKgF,EACpBzF,EAAMS,EAAS,GAAKS,EACpBlB,EAAMS,EAAS,GAAKmB,EACpB5B,EAAMS,EAAS,GAAKiF,EACpB1F,EAAMS,EAAS,GAAKkF,EACpB3F,EAAMS,EAAS,GAAKmF,EACpB5F,EAAMS,EAAS,GAAKqF,CACtB,EAEQ,YAAA9B,mBAAR,SAA2BhE,EAAqBS,EAAgB+E,EAAYC,EAAYvE,EAAeU,EAAgBmE,GACrH/F,EAAMS,GAAc+E,EACpBxF,EAAMS,EAAS,GAAKgF,EACpBzF,EAAMS,EAAS,GAAKS,EACpBlB,EAAMS,EAAS,GAAKmB,EACpB5B,EAAMS,EAAS,GAAKsF,EAAM,GAC1B/F,EAAMS,EAAS,GAAKsF,EAAM,GAC1B/F,EAAMS,EAAS,GAAKsF,EAAM,GAC1B/F,EAAMS,EAAS,GAAKsF,EAAM,EAC5B,EAEQ,YAAAjC,qBAAR,SAA6BiC,GAC3B,OAAO,IAAIvK,aAAa,EACpBuK,EAAMX,MAAQ,GAAM,KAAQ,KAC5BW,EAAMX,MAAQ,GAAM,KAAQ,KAC5BW,EAAMX,MAAQ,EAAM,KAAQ,KACR,IAApBW,EAAU,MAAkB,KAElC,EACF,EA5NA,CAAuC,EAAAxC,YAA1B,EAAAyC,kBAAAA,C,kMCtDb,aAEa,EAAApB,+BAAiC,EACjC,EAAAE,uBAAyB,EACzB,EAAAC,uBAAyB,EAEzB,EAAAkB,uBAAyB,WAEtC,iBAKE,aACE5G,KAAKwF,MAAQ,IAAIqB,YAAY,GAC7B7G,KAAK8C,YAAc,IAAI+D,YAAY,GACnC7G,KAAK8G,UAAY,CACfC,cAAc,EACdC,kBAAkB,EAClBC,iBAAkB,EAClBC,eAAgB,EAChBC,uBAAwB,EACxBC,qBAAsB,EACtBC,SAAU,EACVC,OAAQ,EAEZ,CAwBF,OAtBS,YAAAC,OAAP,SAAczG,EAAcsB,GAC1B,IAAMoF,EAAa1G,EAAOsB,EAAO,EAAAmD,+BAC7BiC,IAAexH,KAAKwF,MAAMvE,SAC5BjB,KAAKwF,MAAQ,IAAIqB,YAAYW,GAC7BxH,KAAK8C,YAAc,IAAI+D,YAAYzE,GAEvC,EAEO,YAAAJ,MAAP,YACE,IAAAD,MAAK/B,KAAKwF,MAAO,EAAG,IACpB,IAAAzD,MAAK/B,KAAK8C,YAAa,EAAG,EAC5B,EAEO,YAAA2E,eAAP,WACEzH,KAAK8G,UAAUC,cAAe,EAC9B/G,KAAK8G,UAAUG,iBAAmB,EAClCjH,KAAK8G,UAAUI,eAAiB,EAChClH,KAAK8G,UAAUK,uBAAyB,EACxCnH,KAAK8G,UAAUM,qBAAuB,EACtCpH,KAAK8G,UAAUO,SAAW,EAC1BrH,KAAK8G,UAAUQ,OAAS,CAC1B,EACF,EA1CA,GAAa,EAAAI,YAAAA,C,+4BCTb,aACA,SACA,SACA,SAEA,SAEA,SACA,SACA,SAKA,SACA,SACA,SAGA,SAGA,cAyBE,WACUrL,EACAC,EACSqL,EACAC,EACjBC,GALF,MAOE,cAAO,KANC,EAAAxL,UAAAA,EACA,EAAAC,QAAAA,EACS,EAAAqL,wBAAAA,EACA,EAAAC,mBAAAA,EAxBX,EAAAE,OAAsB,IAAI,EAAAJ,YAC1B,EAAAK,UAAsB,IAAI,EAAAC,SAC1B,EAAAC,YAA0C,CAAE1H,GAAI,EAAGD,GAAI,GAYvD,EAAA4H,iBAAmB,IAAI,EAAAC,aAGvB,EAAAC,eAAiB,IAAI,EAAAD,aAY3B,EAAKE,MAAS,EAAKhM,UAAkBgM,MAErC,EAAKC,cAAgB,CACnB,IAAI,EAAAC,gBAAgB,EAAKF,MAAMG,cAAgB,EAAG,EAAKlM,QAAS,EAAK+L,OACrE,IAAI,EAAAI,kBAAkBpM,EAAW,EAAKgM,MAAMG,cAAgB,EAAG,EAAKlM,QAAS,EAAK+L,MAAO,EAAKH,mBAEhG,EAAKjE,WAAa,CAChByE,gBAAiB,EACjBC,iBAAkB,EAClB/D,gBAAiB,EACjBC,iBAAkB,EAClBvD,eAAgB,EAChBC,cAAe,EACfE,kBAAmB,EACnBC,mBAAoB,EACpBkH,YAAa,EACbC,aAAc,EACdC,gBAAiB,EACjBC,iBAAkB,GAEpB,EAAKC,kBAAoBC,OAAOC,iBAChC,EAAKC,oBAEL,EAAKC,QAAUC,SAASC,cAAc,UAEtC,IAAMC,EAAoB,CACxBC,WAAW,EACXC,OAAO,EACP5B,sBAAqB,GAGvB,GADA,EAAKtL,IAAM,EAAK6M,QAAQM,WAAW,SAAUH,IACxC,EAAKhN,IACR,MAAM,IAAIoN,MAAM,wBAA0B,EAAKpN,K,OAGjD,EAAKW,UAAS,IAAA0M,0BAAyB,EAAKR,QAAS,oBAAoB,SAACS,GAAQ,EAAKzB,eAAe0B,KAAKD,EAAI,KAE/G,EAAKxB,MAAMG,cAAeuB,YAAY,EAAKX,SAE3C,EAAKY,mBAAqB,EAAK9M,SAAS,IAAI,EAAAyJ,kBAAkB,EAAKtK,UAAW,EAAKC,QAAS,EAAKC,IAAK,EAAK0H,aAC3G,EAAKgG,eAAiB,EAAK/M,SAAS,IAAI,EAAAiH,cAAc,EAAK9H,UAAW,EAAKC,QAAS,EAAKC,IAAK,EAAK0H,aAGnG,EAAKiG,oBAEL,EAAKC,YAAcd,SAASe,KAAKC,SAAS,EAAKhC,MAAMG,e,CACvD,CA4dF,OA5iBmC,OAoBjC,sBAAW,8BAAe,C,IAA1B,WAA4D,OAAOxI,KAAKkI,iBAAiBoC,KAAO,E,gCAGhG,sBAAW,4BAAa,C,IAAxB,WAA2C,OAAOtK,KAAKoI,eAAekC,KAAO,E,gCA2DtE,YAAAC,QAAP,W,cACE,IAAgB,QAAAvK,KAAKsI,eAAa,8BAAtB,QACRiC,S,kGAEsB,QAA1B,EAAAvK,KAAKoJ,QAAQoB,qBAAa,SAAEC,YAAYzK,KAAKoJ,UAC7C,IAAAsB,yBAAwB1K,KAAK3D,WAC7B,YAAMkO,QAAO,UACf,EAEA,sBAAW,2BAAY,C,IAAvB,W,MACE,OAAsB,QAAf,EAAAvK,KAAK2K,kBAAU,eAAE/I,WAC1B,E,gCAEO,YAAAY,UAAP,SAAiBoI,G,QACf5K,KAAK1D,QAAUsO,E,IAEf,IAAgB,QAAA5K,KAAKsI,eAAa,8BAAE,CAA/B,IAAMuC,EAAC,QACVA,EAAErI,UAAUxC,KAAK3D,UAAW2D,KAAK1D,SACjCuO,EAAEC,MAAM9K,KAAK3D,U,mGAGf2D,KAAKgK,mBAAmBxH,YACxBxC,KAAKiK,eAAezH,YAEpBxC,KAAK+K,oBAGL/K,KAAK8H,OAAO9F,OACd,EAEO,YAAAgJ,yBAAP,WAGMhL,KAAKgJ,oBAAsBC,OAAOC,mBACpClJ,KAAKgJ,kBAAoBC,OAAOC,iBAChClJ,KAAKF,SAASE,KAAK3D,UAAUyE,KAAMd,KAAK3D,UAAU+F,MAEtD,EAEO,YAAAtC,SAAP,SAAgBgB,EAAcsB,G,QAE5BpC,KAAKmJ,oBAELnJ,KAAK8H,OAAOP,OAAOvH,KAAK3D,UAAUyE,KAAMd,KAAK3D,UAAU+F,M,IAGvD,IAAgB,QAAApC,KAAKsI,eAAa,8BAAtB,QACRf,OAAOvH,KAAK3D,UAAW2D,KAAKiE,W,kGAIhCjE,KAAKoJ,QAAQvH,MAAQ7B,KAAKiE,WAAWxC,kBACrCzB,KAAKoJ,QAAQ7G,OAASvC,KAAKiE,WAAWvC,mBACtC1B,KAAKoJ,QAAQ6B,MAAMpJ,MAAW7B,KAAKiE,WAAW2E,YAAW,KACzD5I,KAAKoJ,QAAQ6B,MAAM1I,OAAYvC,KAAKiE,WAAW4E,aAAY,KAG3D7I,KAAKqI,MAAMG,cAAeyC,MAAMpJ,MAAW7B,KAAKiE,WAAW2E,YAAW,KACtE5I,KAAKqI,MAAMG,cAAeyC,MAAM1I,OAAYvC,KAAKiE,WAAW4E,aAAY,KAExE7I,KAAKgK,mBAAmBlK,WACxBE,KAAKiK,eAAejG,cAAchE,KAAKiE,YACvCjE,KAAKiK,eAAenK,WAEpBE,KAAK+K,oBAGL/K,KAAK8H,OAAO9F,OACd,EAEO,YAAAkI,kBAAP,WACElK,KAAKF,SAASE,KAAK3D,UAAUyE,KAAMd,KAAK3D,UAAU+F,KACpD,EAEO,YAAA8I,OAAP,W,YACE,IAAgB,QAAAlL,KAAKsI,eAAa,8BAAtB,QACR4C,OAAOlL,KAAK3D,U,kGAElB,EAEO,YAAA8O,QAAP,W,YACE,IAAgB,QAAAnL,KAAKsI,eAAa,8BAAtB,QACR6C,QAAQnL,KAAK3D,U,kGAEnB,EAEO,YAAA+O,mBAAP,SAA0BC,EAAqCC,EAAmCtE,G,YAChG,IAAgB,QAAAhH,KAAKsI,eAAa,8BAAtB,QACR8C,mBAAmBpL,KAAK3D,UAAWgP,EAAOC,EAAKtE,E,kGAEnDhH,KAAKuL,sBAAsBF,EAAOC,EAAKtE,GACvChH,KAAKwL,wBACP,EAEO,YAAAC,aAAP,W,YACE,IAAgB,QAAAzL,KAAKsI,eAAa,8BAAtB,QACRmD,aAAazL,KAAK3D,U,kGAExB,EAEO,YAAAqP,iBAAP,W,YACE,IAAgB,QAAA1L,KAAKsI,eAAa,8BAAtB,QACRoD,iBAAiB1L,KAAK3D,U,kGAE1B2D,KAAKmJ,oBACLnJ,KAAK+K,mBACP,EAOQ,YAAAA,kBAAR,WACE,GAAI/K,KAAKiE,WAAWyE,iBAAmB,GAAK1I,KAAKiE,WAAW0E,kBAAoB,EAE9E3I,KAAKmK,aAAc,MAFrB,CAMA,IAAMpG,GAAQ,IAAA4H,kBAAiB3L,KAAK3D,UAAW2D,KAAK1D,QAAS0D,KAAKiE,WAAWW,gBAAiB5E,KAAKiE,WAAWY,iBAAkB7E,KAAKiE,WAAWyE,gBAAiB1I,KAAKiE,WAAW0E,kBACjL,KAAM,uBAAwB5E,GAC5B,MAAM,IAAI4F,MAAM,2DAElB3J,KAAK2K,WAAa5G,EAClB/D,KAAK2K,WAAWiB,SAChB5L,KAAKiK,eAAenG,SAAS9D,KAAK2K,W,CACpC,EAEO,YAAAkB,eAAP,W,MACiB,QAAf,EAAA7L,KAAK2K,kBAAU,SAAEmB,eACjB9L,KAAK8H,OAAO9F,QACZhC,KAAK+L,aAAa,EAAG/L,KAAK3D,UAAU+F,KAAO,GAC3CpC,KAAKwL,wBACP,EAEO,YAAAxJ,MAAP,W,QACEhC,KAAK8H,OAAO9F,QACZhC,KAAKiK,eAAejI,OAAM,G,IAC1B,IAAgB,QAAAhC,KAAKsI,eAAa,8BAAtB,QACRwC,MAAM9K,KAAK3D,U,kGAEjB,EAEO,YAAA2P,wBAAP,SAA+BC,GAC7B,OAAQ,CACV,EAEO,YAAAC,0BAAP,SAAiCC,GAC/B,OAAO,CACT,EAEO,YAAAC,WAAP,SAAkBf,EAAeC,G,QAC/B,IAAKtL,KAAKmK,YAAa,CACrB,KAAId,SAASe,KAAKC,SAASrK,KAAKqI,MAAMG,gBAAoBxI,KAAKqI,MAAcgE,iBAAiBxK,OAAU7B,KAAKqI,MAAcgE,iBAAiB9J,QAK1I,OAJAvC,KAAKmJ,oBACLnJ,KAAK+K,oBACL/K,KAAKmK,aAAc,C,KAOvB,IAAgB,QAAAnK,KAAKsI,eAAa,8BAAtB,QACRgE,cAActM,KAAK3D,UAAWgP,EAAOC,E,kGAIrCtL,KAAKiK,eAAelK,eACtBC,KAAK8H,OAAO9F,QACZhC,KAAKuL,2BAAsBvK,OAAWA,IAIxChB,KAAK+L,aAAaV,EAAOC,GAGzBtL,KAAKgK,mBAAmBvH,SACxBzC,KAAKiK,eAAexH,OAAOzC,KAAK8H,OAClC,EAEQ,YAAAiE,aAAR,SAAqBV,EAAeC,GAKlC,IAJA,IAAMpJ,EAAWlC,KAAKqI,MAClBkE,EAAkBvM,KAAK+H,UACvBtH,EAAiB,EAEZL,EAAIiL,EAAOjL,GAAKkL,EAAKlL,IAAK,CACjC,IAAMoM,EAAMpM,EAAI8B,EAASuK,OAAOC,MAC1BC,EAAOzK,EAASuK,OAAOG,MAAMC,IAAIL,GACvCxM,KAAK8H,OAAOhF,YAAY1C,GAAK,EAE7B,IADA,IAAM0M,EAAe9M,KAAK2H,wBAAwBoF,oBAAoBP,GAC7DrM,EAAI,EAAGA,EAAI+B,EAASpB,KAAMX,IAAK,CACtCM,EAAST,KAAKiI,YAAY3H,GAC1BqM,EAAKK,SAAS7M,EAAGoM,GAEP,IAANpM,IACFM,EAAST,KAAKiI,YAAY3H,IAI5B,IAAI2M,GAAW,EACXC,EAAY/M,EAKhB,GAAI2M,EAAa7L,OAAS,GAAKd,IAAM2M,EAAa,GAAG,GAAI,CACvDG,GAAW,EACX,IAAME,EAAQL,EAAaM,QAI3Bb,EAAO,IAAIc,EACTd,EACAI,EAAMW,mBAAkB,EAAMH,EAAM,GAAIA,EAAM,IAC9CA,EAAM,GAAKA,EAAM,IAInBD,EAAYC,EAAM,GAAK,C,CAGzB,IAAM3M,EAAQ+L,EAAKgB,WACflN,EAAOkM,EAAKiB,UACV3M,GAAMT,EAAI8B,EAASpB,KAAQX,GAAK,EAAAoF,+BAUtC,GAPAvF,KAAKyN,mBAAmBtN,EAAGqM,GAEvBnM,IAAS,EAAAU,iBACXf,KAAK8H,OAAOhF,YAAY1C,GAAKD,EAAI,IAI/BH,KAAK8H,OAAOtC,MAAM3E,KAAOR,GACzBL,KAAK8H,OAAOtC,MAAM3E,EAAI,EAAA4E,0BAA4BzF,KAAKiI,YAAY3H,IACnEN,KAAK8H,OAAOtC,MAAM3E,EAAI,EAAA6E,0BAA4B1F,KAAKiI,YAAY1H,MAKnEC,EAAMS,OAAS,IACjBZ,GAAQ,EAAAuG,wBAIV5G,KAAK8H,OAAOtC,MAAM3E,GAAKR,EACvBL,KAAK8H,OAAOtC,MAAM3E,EAAI,EAAA4E,wBAA0BzF,KAAKiI,YAAY3H,GACjEN,KAAK8H,OAAOtC,MAAM3E,EAAI,EAAA6E,wBAA0B1F,KAAKiI,YAAY1H,GAEjEP,KAAKiK,eAAe/J,WAAWC,EAAGC,EAAGC,EAAML,KAAKiI,YAAY3H,GAAIN,KAAKiI,YAAY1H,GAAIC,EAAOC,GAExFwM,GAKF,IAHAV,EAAOvM,KAAK+H,UAGP5H,IAAKA,EAAI+M,EAAW/M,IAAK,CAC5B,IAAMuN,GAAMtN,EAAI8B,EAASpB,KAAQX,GAAK,EAAAoF,+BACtCvF,KAAKiK,eAAe/J,WAAWC,EAAGC,EAAG,EAAAW,eAAgB,EAAG,EAAG,EAAA4M,eAAgB,GAC3E3N,KAAK8H,OAAOtC,MAAMkI,GAAK,EAAA3M,eACvBf,KAAK8H,OAAOtC,MAAMkI,EAAI,EAAAjI,wBAA0BzF,KAAKiI,YAAY3H,GACjEN,KAAK8H,OAAOtC,MAAMkI,EAAI,EAAAhI,wBAA0B1F,KAAKiI,YAAY1H,E,GAKzEP,KAAKgK,mBAAmBlF,kBAAkB9E,KAAK8H,OACjD,EAMQ,YAAA2F,mBAAR,SAA2BtN,EAAWC,G,YAMhCwN,EACAC,EANJ7N,KAAKiI,YAAY3H,GAAKN,KAAK+H,UAAUzH,GACrCN,KAAKiI,YAAY1H,GAAKP,KAAK+H,UAAUxH,G,IAQrC,IAAgB,QAAAP,KAAK4H,mBAAmBkG,qBAAqB3N,EAAGC,EAAG,WAAS,+BAAjE2N,EAAC,SACJC,qBACJJ,EAAaG,EAAEC,mBAAmBjI,MAAQ,EAAI,UAE5CgI,EAAEE,qBACJJ,EAAaE,EAAEE,mBAAmBlI,MAAQ,EAAI,S,kGAK9C/F,KAAKkO,gBAAgB/N,EAAGC,KAC1BwN,EAAa5N,KAAK1D,QAAQ6R,gBAAgBpI,MAAQ,EAAI,SAClD/F,KAAK1D,QAAQ8R,sBACfP,EAAa7N,KAAK1D,QAAQ8R,oBAAoBrI,MAAQ,EAAI,W,IAK9D,IAAgB,QAAA/F,KAAK4H,mBAAmBkG,qBAAqB3N,EAAGC,EAAG,QAAM,8BAAE,CAAtE,IAAM2N,KAAC,SACJC,qBACJJ,EAAaG,EAAEC,mBAAmBjI,MAAQ,EAAI,UAE5CgI,EAAEE,qBACJJ,EAAaE,EAAEE,mBAAmBlI,MAAQ,EAAI,S,wGAM/B/E,IAAf4M,IAEFA,GAAkC,SAApB5N,KAAK+H,UAAUzH,GAA6BsN,EAAa,eAEtD5M,IAAf6M,IAEFA,GAAkC,SAApB7N,KAAK+H,UAAUxH,IAA4B,SAAoBsN,EAAa,UAKlE,SAAtB7N,KAAKiI,YAAY1H,UACAS,IAAf4M,QAA2C5M,IAAf6M,IAG5BA,EADiD,IAAxB,SAAtB7N,KAAKiI,YAAY3H,KACgB,UAAtBN,KAAKiI,YAAY1H,GAA4G,SAApCP,KAAK1D,QAAQoI,WAAWqB,MAAQ,EAAuC,UAE1I,UAAtB/F,KAAKiI,YAAY1H,GAA4F,SAAtBP,KAAKiI,YAAY3H,SAGvGU,IAAf4M,QAA2C5M,IAAf6M,IAG5BD,EADiD,IAAxB,SAAtB5N,KAAKiI,YAAY1H,KACgB,SAAtBP,KAAKiI,YAAY3H,GAA0F,SAApCN,KAAK1D,QAAQ2J,WAAWF,MAAQ,EAAuC,UAExH,SAAtB/F,KAAKiI,YAAY3H,GAA0E,SAAtBN,KAAKiI,YAAY1H,KAM1GP,KAAKiI,YAAY3H,GAAKsN,QAAAA,EAAc5N,KAAKiI,YAAY3H,GACrDN,KAAKiI,YAAY1H,GAAKsN,QAAAA,EAAc7N,KAAKiI,YAAY1H,EACvD,EAEQ,YAAA2N,gBAAR,SAAwB/N,EAAWC,GACjC,QAAKJ,KAAK8H,OAAOhB,UAAUC,eAG3B3G,GAAKJ,KAAK3D,UAAUoQ,OAAO4B,OAAOC,UAC9BtO,KAAK8H,OAAOhB,UAAUE,iBACpBhH,KAAK8H,OAAOhB,UAAUO,UAAYrH,KAAK8H,OAAOhB,UAAUQ,OACnDnH,GAAKH,KAAK8H,OAAOhB,UAAUO,UAAYjH,GAAKJ,KAAK8H,OAAOhB,UAAUK,wBACvEhH,EAAIH,KAAK8H,OAAOhB,UAAUQ,QAAUlH,GAAKJ,KAAK8H,OAAOhB,UAAUM,qBAE5DjH,EAAIH,KAAK8H,OAAOhB,UAAUO,UAAYjH,GAAKJ,KAAK8H,OAAOhB,UAAUK,wBACtEhH,GAAKH,KAAK8H,OAAOhB,UAAUQ,QAAUlH,GAAKJ,KAAK8H,OAAOhB,UAAUM,qBAE5DhH,EAAIJ,KAAK8H,OAAOhB,UAAUG,kBAAoB7G,EAAIJ,KAAK8H,OAAOhB,UAAUI,gBAC7ElH,KAAK8H,OAAOhB,UAAUG,mBAAqBjH,KAAK8H,OAAOhB,UAAUI,gBAAkB9G,IAAMJ,KAAK8H,OAAOhB,UAAUG,kBAAoB9G,GAAKH,KAAK8H,OAAOhB,UAAUO,UAAYlH,EAAIH,KAAK8H,OAAOhB,UAAUQ,QACpMtH,KAAK8H,OAAOhB,UAAUG,iBAAmBjH,KAAK8H,OAAOhB,UAAUI,gBAAkB9G,IAAMJ,KAAK8H,OAAOhB,UAAUI,gBAAkB/G,EAAIH,KAAK8H,OAAOhB,UAAUQ,QACzJtH,KAAK8H,OAAOhB,UAAUG,iBAAmBjH,KAAK8H,OAAOhB,UAAUI,gBAAkB9G,IAAMJ,KAAK8H,OAAOhB,UAAUG,kBAAoB9G,GAAKH,KAAK8H,OAAOhB,UAAUO,SACjK,EAEQ,YAAAkE,sBAAR,SAA8BF,EAAqCC,EAAmCtE,QAAA,IAAAA,IAAAA,GAAA,GACpG,IAAM9E,EAAWlC,KAAK3D,UAGtB,GAAKgP,GAAUC,IAAQD,EAAM,KAAOC,EAAI,IAAMD,EAAM,KAAOC,EAAI,IAA/D,CAMA,IAAMrE,EAAmBoE,EAAM,GAAKnJ,EAASuK,OAAO4B,OAAOC,UACrDpH,EAAiBoE,EAAI,GAAKpJ,EAASuK,OAAO4B,OAAOC,UACjDnH,EAAyBoH,KAAKC,IAAIvH,EAAkB,GACpDG,EAAuBmH,KAAKE,IAAIvH,EAAgBhF,EAASE,KAAO,GAGlE+E,GAA0BjF,EAASE,MAAQgF,EAAuB,EACpEpH,KAAK8H,OAAOL,kBAIdzH,KAAK8H,OAAOhB,UAAUC,cAAe,EACrC/G,KAAK8H,OAAOhB,UAAUE,iBAAmBA,EACzChH,KAAK8H,OAAOhB,UAAUG,iBAAmBA,EACzCjH,KAAK8H,OAAOhB,UAAUI,eAAiBA,EACvClH,KAAK8H,OAAOhB,UAAUK,uBAAyBA,EAC/CnH,KAAK8H,OAAOhB,UAAUM,qBAAuBA,EAC7CpH,KAAK8H,OAAOhB,UAAUO,SAAWgE,EAAM,GACvCrL,KAAK8H,OAAOhB,UAAUQ,OAASgE,EAAI,G,MAvBjCtL,KAAK8H,OAAOL,gBAwBhB,EAKQ,YAAA0B,kBAAR,WAIQnJ,KAAKqI,MAAcgE,iBAAiBxK,OAAW7B,KAAKqI,MAAcgE,iBAAiB9J,SAWzFvC,KAAKiE,WAAWyE,gBAAkB6F,KAAKG,MAAO1O,KAAKqI,MAAcgE,iBAAiBxK,MAAQ7B,KAAKgJ,mBAK/FhJ,KAAKiE,WAAW0E,iBAAmB4F,KAAKI,KAAM3O,KAAKqI,MAAcgE,iBAAiB9J,OAASvC,KAAKgJ,mBAMhGhJ,KAAKiE,WAAWY,iBAAmB0J,KAAKG,MAAM1O,KAAKiE,WAAW0E,iBAAmB3I,KAAK3D,UAAUuS,QAAQC,YAIxG7O,KAAKiE,WAAW1C,cAAsD,IAAtCvB,KAAK3D,UAAUuS,QAAQC,WAAmB,EAAIN,KAAKO,OAAO9O,KAAKiE,WAAWY,iBAAmB7E,KAAKiE,WAAW0E,kBAAoB,GAGjK3I,KAAKiE,WAAWW,gBAAkB5E,KAAKiE,WAAWyE,gBAAkB6F,KAAKO,MAAM9O,KAAK3D,UAAUuS,QAAQG,eAItG/O,KAAKiE,WAAW3C,eAAiBiN,KAAKG,MAAM1O,KAAK3D,UAAUuS,QAAQG,cAAiB,GAIpF/O,KAAKiE,WAAWvC,mBAAqB1B,KAAK3D,UAAU+F,KAAOpC,KAAKiE,WAAWY,iBAC3E7E,KAAKiE,WAAWxC,kBAAoBzB,KAAK3D,UAAUyE,KAAOd,KAAKiE,WAAWW,gBAO1E5E,KAAKiE,WAAW4E,aAAe0F,KAAKO,MAAM9O,KAAKiE,WAAWvC,mBAAqB1B,KAAKgJ,mBACpFhJ,KAAKiE,WAAW2E,YAAc2F,KAAKO,MAAM9O,KAAKiE,WAAWxC,kBAAoBzB,KAAKgJ,mBAelFhJ,KAAKiE,WAAW8E,iBAAmB/I,KAAKiE,WAAWY,iBAAmB7E,KAAKgJ,kBAC3EhJ,KAAKiE,WAAW6E,gBAAkB9I,KAAKiE,WAAWW,gBAAkB5E,KAAKgJ,kBAC3E,EAEQ,YAAAwC,uBAAR,WACExL,KAAKkI,iBAAiB4B,KAAK,CAAEuB,MAAO,EAAGC,IAAKtL,KAAK3D,UAAU+F,KAAO,GACpE,EACF,EA5iBA,CAAmC,EAAA8B,YAAtB,EAAA8K,cAAAA,EA+iBb,kBASE,WAAYC,EAAsBzO,EAAeqB,GAAjD,MACE,cAAO,K,OANF,EAAAqN,QAAkB,EAGlB,EAAAC,aAAuB,GAI5B,EAAK5O,GAAK0O,EAAU1O,GACpB,EAAKD,GAAK2O,EAAU3O,GACpB,EAAK6O,aAAe3O,EACpB,EAAK4O,OAASvN,E,CAChB,CA4BF,OA3CoC,OAiB3B,YAAAwN,WAAP,WAEE,OAAO,OACT,EAEO,YAAAC,SAAP,WACE,OAAOtP,KAAKoP,MACd,EAEO,YAAA7B,SAAP,WACE,OAAOvN,KAAKmP,YACd,EAEO,YAAA3B,QAAP,WAGE,OAAO,OACT,EAEO,YAAA+B,gBAAP,SAAuBC,GACrB,MAAM,IAAI7F,MAAM,kBAClB,EAEO,YAAA8F,cAAP,WACE,MAAO,CAACzP,KAAKO,GAAIP,KAAKuN,WAAYvN,KAAKsP,WAAYtP,KAAKwN,UAC1D,EACF,EA3CA,CAAoC,EAAAkC,eAAvB,EAAArC,eAAAA,C,cC5iBb,SAAgBsC,EAAa7S,EAA2B8S,EAAcC,GACpE,IAAMC,EAAS9S,EAAaF,EAAG6S,aAAaC,IAI5C,GAHA9S,EAAGiT,aAAaD,EAAQD,GACxB/S,EAAGkT,cAAcF,GACDhT,EAAGmT,mBAAmBH,EAAQhT,EAAGoT,gBAE/C,OAAOJ,EAGTK,QAAQC,MAAMtT,EAAGuT,iBAAiBP,IAClChT,EAAGwT,aAAaR,EAClB,CAWA,SAAgB9S,EAAgBwS,GAC9B,IAAKA,EACH,MAAM,IAAI7F,MAAM,2BAElB,OAAO6F,CACT,C,+IAhDa,EAAA9L,kBAAoB,IAAIvH,aAAa,CAChD,EAAG,EAAG,EAAG,EACT,GAAI,EAAG,EAAG,EACV,EAAG,EAAG,EAAG,GACR,EAAG,EAAG,EAAG,IAGZ,yBAA8BW,EAA2ByT,EAAsBC,GAC7E,IAAMC,EAAUzT,EAAaF,EAAGG,iBAKhC,GAJAH,EAAG4T,aAAaD,EAASzT,EAAa2S,EAAa7S,EAAIA,EAAG6T,cAAeJ,KACzEzT,EAAG4T,aAAaD,EAASzT,EAAa2S,EAAa7S,EAAIA,EAAG8T,gBAAiBJ,KAC3E1T,EAAG+T,YAAYJ,GACC3T,EAAGgU,oBAAoBL,EAAS3T,EAAGiU,aAEjD,OAAON,EAGTN,QAAQC,MAAMtT,EAAGkU,kBAAkBP,IACnC3T,EAAGM,cAAcqT,EACnB,EAEA,iBAaA,8BAAmCZ,EAAsBrB,GAGvD,IAFA,IAAMyC,EAAY1C,KAAKE,IAAoB,EAAhBoB,EAAO5O,OAAYuN,GACxC0C,EAAW,IAAI/U,aAAa8U,GACzBpQ,EAAI,EAAGA,EAAIgP,EAAO5O,OAAQJ,IACjCqQ,EAASrQ,GAAKgP,EAAOhP,GAEvB,OAAOqQ,CACT,EAEA,gB,qHC/CA,aACA,SAaMC,EAAyC,GAQ/C,4BACEjP,EACA0I,EACAhG,EACAC,EACA6D,EACAC,GAKA,IAHA,IAAMyI,GAAY,IAAAC,gBAAezM,EAAiBC,EAAkB6D,EAAiBC,EAAkBzG,EAAU0I,GAGxG/J,EAAI,EAAGA,EAAIsQ,EAAelQ,OAAQJ,IAAK,CAC9C,IACMyQ,GADAC,EAAQJ,EAAetQ,IACF2Q,QAAQC,QAAQvP,GAC3C,GAAIoP,GAAgB,EAAG,CACrB,IAAI,IAAAI,cAAaH,EAAMI,OAAQP,GAC7B,OAAOG,EAAMxN,MAGc,IAAzBwN,EAAMC,QAAQvQ,QAChBsQ,EAAMxN,MAAMwG,UACZ4G,EAAeS,OAAO/Q,EAAG,IAEzB0Q,EAAMC,QAAQI,OAAON,EAAc,GAErC,K,EAKJ,IAASzQ,EAAI,EAAGA,EAAIsQ,EAAelQ,OAAQJ,IAAK,CAC9C,IAAM0Q,EAAQJ,EAAetQ,GAC7B,IAAI,IAAA6Q,cAAaH,EAAMI,OAAQP,GAG7B,OADAG,EAAMC,QAAQK,KAAK3P,GACZqP,EAAMxN,K,CAIjB,IAAM+N,EAAiC,CACrC/N,MAAO,IAAI,EAAAgO,eAAe1I,SAAU+H,GACpCO,OAAQP,EACRI,QAAS,CAACtP,IAGZ,OADAiP,EAAeU,KAAKC,GACbA,EAAS/N,KAClB,EAMA,mCAAwC7B,GACtC,IAAK,IAAIrB,EAAI,EAAGA,EAAIsQ,EAAelQ,OAAQJ,IAAK,CAC9C,IAAMmR,EAAQb,EAAetQ,GAAG2Q,QAAQC,QAAQvP,GAChD,IAAe,IAAX8P,EAAc,CACyB,IAArCb,EAAetQ,GAAG2Q,QAAQvQ,QAE5BkQ,EAAetQ,GAAGkD,MAAMwG,UACxB4G,EAAeS,OAAO/Q,EAAG,IAGzBsQ,EAAetQ,GAAG2Q,QAAQI,OAAOI,EAAO,GAE1C,K,EAGN,C,mHCnFA,IAAMC,EAAqB,CACzBC,IAAK,GACLnM,KAAM,GAGR,0BAA+BnB,EAAyBC,EAA0B6D,EAAyBC,EAA0BzG,EAAoB0I,GAEvJ,IAAMuH,EAA0B,CAC9BlM,WAAY2E,EAAO3E,WACnBvB,WAAYkG,EAAOlG,WACnB0N,OAAQH,EACRI,aAAcJ,EACdK,qBAAsBL,EACtB9D,gBAAiB8D,EACjB7D,oBAAqB6D,EAGrBjM,KAAM4E,EAAO5E,KAAKuM,QAClBC,cAAe5H,EAAO4H,eAExB,MAAO,CACLC,aAAcvQ,EAAS0M,QAAQ6D,aAC/BvJ,iBAAkBD,OAAOC,iBACzB6F,cAAe7M,EAAS0M,QAAQG,cAChCF,WAAY3M,EAAS0M,QAAQC,WAC7BjK,gBAAe,EACfC,iBAAgB,EAChB6D,gBAAe,EACfC,iBAAgB,EAChB+J,WAAYxQ,EAAS0M,QAAQ8D,WAC7BC,SAAUzQ,EAAS0M,QAAQ+D,SAC3BC,WAAY1Q,EAAS0M,QAAQgE,WAC7BC,eAAgB3Q,EAAS0M,QAAQiE,eACjCC,kBAAmB5Q,EAAS0M,QAAQkE,kBACpCC,2BAA4B7Q,EAAS0M,QAAQmE,2BAC7CC,qBAAsB9Q,EAAS0M,QAAQoE,qBACvCpI,OAAQuH,EAEZ,EAEA,wBAA6B1L,EAAqBF,GAChD,IAAK,IAAI1F,EAAI,EAAGA,EAAI4F,EAAEmE,OAAO5E,KAAK/E,OAAQJ,IACxC,GAAI4F,EAAEmE,OAAO5E,KAAKnF,GAAGkF,OAASQ,EAAEqE,OAAO5E,KAAKnF,GAAGkF,KAC7C,OAAO,EAGX,OAAOU,EAAEyC,mBAAqB3C,EAAE2C,kBAC5BzC,EAAEgM,eAAiBlM,EAAEkM,cACrBhM,EAAEoI,aAAetI,EAAEsI,YACnBpI,EAAEsI,gBAAkBxI,EAAEwI,eACtBtI,EAAEiM,aAAenM,EAAEmM,YACnBjM,EAAEkM,WAAapM,EAAEoM,UACjBlM,EAAEmM,aAAerM,EAAEqM,YACnBnM,EAAEoM,iBAAmBtM,EAAEsM,gBACvBpM,EAAEqM,oBAAsBvM,EAAEuM,mBAC1BrM,EAAEiC,kBAAoBnC,EAAEmC,iBACxBjC,EAAEkC,mBAAqBpC,EAAEoC,kBACzBlC,EAAEsM,6BAA+BxM,EAAEwM,4BACnCtM,EAAEuM,uBAAyBzM,EAAEyM,sBAC7BvM,EAAEmE,OAAO3E,aAAeM,EAAEqE,OAAO3E,YACjCQ,EAAEmE,OAAOlG,aAAe6B,EAAEqE,OAAOlG,UACvC,EAEA,sBAA2BuO,GACzB,OAA4C,WAAxB,SAAZA,IAA8F,WAAxB,SAAZA,EACpE,C,yFCtEA,aAEA,SACA,SAGA,SACA,SACA,QACA,SAIMC,EAAgB,KAChBC,EAAiB,KAOjBC,EAAmB7E,KAAKG,MAAMyE,OAE9BE,EAAoB,CACxBnB,IAAK,mBACLnM,KAAM,GAMFuN,EAA0C,CAC9ClS,OAAQ,CAAEjB,EAAG,EAAGC,EAAG,GACnBmT,gBAAiB,CAAEpT,EAAG,EAAGC,EAAG,GAC5BuB,yBAA0B,CAAExB,EAAG,EAAGC,EAAG,GACrCoB,KAAM,CAAErB,EAAG,EAAGC,EAAG,GACjB0B,cAAe,CAAE3B,EAAG,EAAGC,EAAG,IAK5B,aA2BE,WACEiJ,EACQmK,GAAA,KAAAA,QAAAA,EA5BF,KAAAC,YAAsB,EAEtB,KAAAC,UAAqD,CAAC,EACtD,KAAAC,kBAA8D,CAAC,EAc/D,KAAAC,aAAuB,EACvB,KAAAC,aAAuB,EACvB,KAAAC,kBAA4B,EAE7B,KAAA1Q,kBAAmB,EAElB,KAAA2Q,iBAAiC,CAAEC,IAAK,EAAGC,KAAM,EAAGC,OAAQ,EAAGC,MAAO,GACtE,KAAAC,mBAAoC,IAAI,EAAA1E,cAM9C1P,KAAK4B,YAAcyH,EAASC,cAAc,UAC1CtJ,KAAK4B,YAAYC,MAAQqR,EACzBlT,KAAK4B,YAAYW,OAAS4Q,EAI1BnT,KAAKqU,WAAY,IAAArX,cAAagD,KAAK4B,YAAY8H,WAAW,KAAM,CAAE4K,OAAO,KAEzEtU,KAAKuU,WAAalL,EAASC,cAAc,UACzCtJ,KAAKuU,WAAW1S,MAAuC,EAA/B7B,KAAKwT,QAAQ5O,gBAAsB4P,EAC3DxU,KAAKuU,WAAWhS,OAASvC,KAAKwT,QAAQ3O,iBAAmB2P,EACzDxU,KAAKyU,SAAU,IAAAzX,cAAagD,KAAKuU,WAAW7K,WAAW,KAAM,CAAE4K,MAAOtU,KAAKwT,QAAQV,oBACrF,CAweF,OAteS,YAAAvI,QAAP,WACMvK,KAAK4B,YAAY4I,eACnBxK,KAAK4B,YAAY4I,cAAcC,YAAYzK,KAAK4B,YAEpD,EAEO,YAAAgK,OAAP,WACO5L,KAAKyT,aACRzT,KAAK0U,YACL1U,KAAKyT,YAAa,EAEtB,EAEQ,YAAAiB,UAAR,WAEE,I,QAAS7T,EAAI,GAAIA,EAAI,IAAKA,IAAK,CAC7B,IAAMD,EAAkBZ,KAAK2U,aAAa9T,EAAG,EAAA+T,cAAe,EAAAA,eAC5D5U,KAAK0T,UAAU7S,KAAE,MACd,EAAA+T,iBAAa,MACX,EAAAA,eAAgBhU,E,MAIzB,EAEO,YAAAb,WAAP,WACE,OAAIC,KAAK4T,aAAeR,IACtBpT,KAAK8L,eACL9L,KAAK4L,UACE,EAGX,EAEO,YAAAE,aAAP,WAC4B,IAAtB9L,KAAK6T,cAA4C,IAAtB7T,KAAK4T,eAGpC5T,KAAKqU,UAAUQ,UAAU,EAAG,EAAG3B,EAAeC,GAC9CnT,KAAK0T,UAAY,CAAC,EAClB1T,KAAK2T,kBAAoB,CAAC,EAC1B3T,KAAK8T,kBAAoB,EACzB9T,KAAK6T,aAAe,EACpB7T,KAAK4T,aAAe,EACpB5T,KAAKyT,YAAa,EACpB,EAEO,YAAAvS,+BAAP,SAAsCV,EAAeF,EAAYC,GAC/D,IAKIK,EALAkU,EAAqB9U,KAAK2T,kBAAkBnT,GAC3CsU,IACHA,EAAqB,CAAC,EACtB9U,KAAK2T,kBAAkBnT,GAASsU,GAGlC,IAAMC,EAAuBD,EAAmBxU,GAWhD,OAVIyU,IACFnU,EAAkBmU,EAAqBxU,IAEpCK,IACHA,EAAkBZ,KAAK2U,aAAanU,EAAOF,EAAIC,GAC1CuU,EAAmBxU,KACtBwU,EAAmBxU,GAAM,CAAC,GAE5BwU,EAAmBxU,GAAKC,GAAMK,GAEzBA,CACT,EAKO,YAAAO,mBAAP,SAA0Bd,EAAcC,EAAYC,GAClD,IAKIK,EALAkU,EAAqB9U,KAAK0T,UAAUrT,GACnCyU,IACHA,EAAqB,CAAC,EACtB9U,KAAK0T,UAAUrT,GAAQyU,GAGzB,IAAMC,EAAuBD,EAAmBxU,GAWhD,OAVIyU,IACFnU,EAAkBmU,EAAqBxU,IAEpCK,IACHA,EAAkBZ,KAAK2U,aAAatU,EAAMC,EAAIC,GACzCuU,EAAmBxU,KACtBwU,EAAmBxU,GAAM,CAAC,GAE5BwU,EAAmBxU,GAAKC,GAAMK,GAEzBA,CACT,EAEQ,YAAAoU,uBAAR,SAA+BC,GAC7B,GAAIA,GAAOjV,KAAKwT,QAAQ5I,OAAO5E,KAAK/E,OAClC,MAAM,IAAI0I,MAAM,0BAA4BsL,GAE9C,OAAOjV,KAAKwT,QAAQ5I,OAAO5E,KAAKiP,EAClC,EAEQ,YAAAC,oBAAR,SAA4BC,EAAqBC,EAAiBzP,GAChE,GAAI3F,KAAKwT,QAAQV,kBAIf,OAAOO,EAGT,OAAQ8B,GACN,KAAK,SACL,KAAK,SACH,OAAOnV,KAAKgV,uBAAuBI,GACrC,KAAK,SACH,IAAMC,EAAM,EAAA3F,cAAc4F,WAAWF,GAErC,MAAO,CACLrP,KAAMqP,GAAW,EACjBlD,IAAK,IAAIqD,EAAYF,EAAI,IAAME,EAAYF,EAAI,IAAME,EAAYF,EAAI,KAGzE,QACE,OAAI1P,EACK3F,KAAKwT,QAAQ5I,OAAO3E,WAEtBjG,KAAKwT,QAAQ5I,OAAOlG,WAEjC,EAEQ,YAAA8Q,oBAAR,SAA4BlV,EAAY6U,EAAqBC,EAAiB7U,EAAYkV,EAAqBC,EAAiB/P,EAAkBgQ,EAAeC,GAC/J,IAAMC,EAAuB7V,KAAK8V,yBAAyBxV,EAAI6U,EAAaC,EAAS7U,EAAIkV,EAAaC,EAAS/P,EAASgQ,EAAMC,GAC9H,GAAIC,EACF,OAAOA,EAGT,OAAQJ,GACN,KAAK,SACL,KAAK,SAIH,OAHIzV,KAAKwT,QAAQT,4BAA8B4C,GAAQD,EAAU,IAC/DA,GAAW,GAEN1V,KAAKgV,uBAAuBU,GACrC,KAAK,SACH,IAAML,EAAM,EAAA3F,cAAc4F,WAAWI,GACrC,OAAO,EAAA3P,KAAKgQ,QAAQV,EAAI,GAAIA,EAAI,GAAIA,EAAI,IAE1C,QACE,OAAI1P,EAEK,EAAAe,MAAMsP,OAAOhW,KAAKwT,QAAQ5I,OAAOlG,YAEnC1E,KAAKwT,QAAQ5I,OAAO3E,WAEjC,EAEQ,YAAAgQ,uBAAR,SAA+Bd,EAAqBC,EAAiBzP,GACnE,OAAQwP,GACN,KAAK,SACL,KAAK,SACH,OAAOnV,KAAKgV,uBAAuBI,GAASrP,KAC9C,KAAK,SACH,OAAOqP,GAAW,EAEpB,QACE,OAAIzP,EACK3F,KAAKwT,QAAQ5I,OAAO3E,WAAWF,KAEjC/F,KAAKwT,QAAQ5I,OAAOlG,WAAWqB,KAE5C,EAEQ,YAAAmQ,uBAAR,SAA+BT,EAAqBC,EAAiB/P,EAAkBgQ,GACrF,OAAQF,GACN,KAAK,SACL,KAAK,SAIH,OAHIzV,KAAKwT,QAAQT,4BAA8B4C,GAAQD,EAAU,IAC/DA,GAAW,GAEN1V,KAAKgV,uBAAuBU,GAAS3P,KAC9C,KAAK,SACH,OAAO2P,GAAW,EAEpB,QACE,OAAI/P,EACK3F,KAAKwT,QAAQ5I,OAAOlG,WAAWqB,KAEjC/F,KAAKwT,QAAQ5I,OAAO3E,WAAWF,KAE5C,EAEQ,YAAA+P,yBAAR,SAAiCxV,EAAY6U,EAAqBC,EAAiB7U,EAAYkV,EAAqBC,EAAiB/P,EAAkBgQ,EAAeC,GACpK,GAA0C,IAAtC5V,KAAKwT,QAAQR,uBAA8B4C,EAA/C,CAKA,IAAMO,EAAgBnW,KAAKwT,QAAQ5I,OAAO4H,cAAc4D,SAAS9V,EAAIC,GACrE,QAAsBS,IAAlBmV,EACF,OAAOA,QAAiBnV,EAG1B,IAAMqV,EAASrW,KAAKiW,uBAAuBd,EAAaC,EAASzP,GAC3D2Q,EAAStW,KAAKkW,uBAAuBT,EAAaC,EAAS/P,EAASgQ,GACpEY,EAAS,EAAAxQ,KAAKyQ,oBAAoBH,EAAQC,EAAQtW,KAAKwT,QAAQR,sBAErE,GAAKuD,EAAL,CAKA,IAAM7P,EAAQ,EAAAX,KAAKgQ,QAChBQ,GAAU,GAAM,IAChBA,GAAU,GAAM,IAChBA,GAAU,EAAK,KAIlB,OAFAvW,KAAKwT,QAAQ5I,OAAO4H,cAAciE,SAASnW,EAAIC,EAAImG,GAE5CA,C,CAXL1G,KAAKwT,QAAQ5I,OAAO4H,cAAciE,SAASnW,EAAIC,EAAI,K,CAYvD,EAIQ,YAAAoU,aAAR,SAAqB+B,EAA8BpW,EAAYC,GAC7D,IAAMC,EAA+B,iBAAhBkW,EAA2BC,OAAOC,aAAaF,GAAeA,EAEnF1W,KAAKoD,kBAAmB,EAKxB,IAAMyT,EAAe7W,KAAKwT,QAAQ5O,gBAAkB2J,KAAKC,IAAIhO,EAAMS,OAAQ,GAAKuT,EAC5ExU,KAAKuU,WAAW1S,MAAQgV,IAC1B7W,KAAKuU,WAAW1S,MAAQgV,GAG1B,IAAMC,EAAgB9W,KAAKwT,QAAQ3O,iBAAmB2P,EAUtD,GATIxU,KAAKuU,WAAWhS,OAASuU,IAC3B9W,KAAKuU,WAAWhS,OAASuU,GAE3B9W,KAAKyU,QAAQsC,OAEb/W,KAAKoU,mBAAmB7T,GAAKA,EAC7BP,KAAKoU,mBAAmB9T,GAAKA,EAETN,KAAKoU,mBAAmB4C,cAE1C,OAAO1D,EAGT,IAAMqC,IAAS3V,KAAKoU,mBAAmB6C,SACjCtR,IAAY3F,KAAKoU,mBAAmB8C,YACpCC,IAAQnX,KAAKoU,mBAAmBgD,QAChCC,IAAWrX,KAAKoU,mBAAmBkD,WACnCC,IAAcvX,KAAKoU,mBAAmBoD,cACtCC,IAAkBzX,KAAKoU,mBAAmBsD,kBAC5ChC,EAAU1V,KAAKoU,mBAAmBuD,aAClClC,EAAczV,KAAKoU,mBAAmBwD,iBACtCxC,EAAUpV,KAAKoU,mBAAmByD,aAClC1C,EAAcnV,KAAKoU,mBAAmB0D,iBAC1C,GAAInS,EAAS,CACX,IAAMoS,EAAOrC,EACbA,EAAUN,EACVA,EAAU2C,EACV,IAAMC,EAAQvC,EACdA,EAAcN,EACdA,EAAc6C,C,CAIhB,IAAMC,EAAkBjY,KAAKkV,oBAAoBC,EAAaC,EAASzP,GAGvE3F,KAAKyU,QAAQyD,yBAA2B,OACxClY,KAAKyU,QAAQ0D,UAAYF,EAAgB/F,IACzClS,KAAKyU,QAAQ2D,SAAS,EAAG,EAAGpY,KAAKuU,WAAW1S,MAAO7B,KAAKuU,WAAWhS,QACnEvC,KAAKyU,QAAQyD,yBAA2B,cAGxC,IAAMtF,EAAa+C,EAAO3V,KAAKwT,QAAQX,eAAiB7S,KAAKwT,QAAQZ,WAC/DyF,EAAYhB,EAAS,SAAW,GACtCrX,KAAKyU,QAAQ6D,KACRD,EAAS,IAAIzF,EAAU,IAAI5S,KAAKwT,QAAQb,SAAW3S,KAAKwT,QAAQtK,iBAAgB,MAAMlJ,KAAKwT,QAAQd,WACxG1S,KAAKyU,QAAQ8D,aAAe,EAAAC,cAE5B,IAAMC,EAAkC,IAAjBjY,EAAMS,SAAgB,IAAAyX,kBAAiBlY,EAAMmY,WAAW,IACzEC,EAAkB5Y,KAAKwV,oBAAoBlV,EAAI6U,EAAaC,EAAS7U,EAAIkV,EAAaC,EAAS/P,EAASgQ,GAAM,IAAAC,iCAAgCpV,EAAMmY,WAAW,KACrK3Y,KAAKyU,QAAQ0D,UAAYS,EAAgB1G,IAGrCiF,IACFnX,KAAKyU,QAAQoE,YAAc,EAAAC,aAI7B,IAAMC,EAAUN,EAAiB,EAnVJ,EAsVzBO,GAAc,EAYlB,IAXkC,IAA9BhZ,KAAKwT,QAAQf,eACfuG,GAAc,IAAAC,mBAAkBjZ,KAAKyU,QAASjU,EAAOuY,EAASA,EAAS/Y,KAAKwT,QAAQ5O,gBAAiB5E,KAAKwT,QAAQ3O,mBAI/GmU,GACHhZ,KAAKyU,QAAQyE,SAAS1Y,EAAOuY,EAASA,EAAU/Y,KAAKwT,QAAQ7K,kBAKjD,MAAVnI,IAAkBR,KAAKwT,QAAQV,kBAAmB,CACpD,IAAIqG,EAAqBC,EAAWpZ,KAAKyU,QAAQ4E,aAAaN,EAASA,EAAS/Y,KAAKwT,QAAQ5O,gBAAiB5E,KAAKwT,QAAQ3O,kBAAmBoT,EAAiBW,EAAiB5Y,KAAKwT,QAAQV,mBAC7L,GAAIqG,EACF,IAAK,IAAI/X,EAAS,EAAGA,GAAU,IAC7BpB,KAAKyU,QAAQI,UAAU,EAAG,EAAG7U,KAAKuU,WAAW1S,MAAO7B,KAAKuU,WAAWhS,QACpEvC,KAAKyU,QAAQyE,SAAS1Y,EAAOuY,EAASA,EAAU/Y,KAAKwT,QAAQ7K,iBAAmBvH,GAChF+X,EAAqBC,EAAWpZ,KAAKyU,QAAQ4E,aAAaN,EAASA,EAAS/Y,KAAKwT,QAAQ5O,gBAAiB5E,KAAKwT,QAAQ3O,kBAAmBoT,EAAiBW,EAAiB5Y,KAAKwT,QAAQV,oBAHzJ1R,K,CAYtC,GAAImW,GAAaE,EAAe,CAC9B,IAAM6B,EAAY/K,KAAKC,IAAI,EAAGD,KAAKG,MAAM1O,KAAKwT,QAAQb,SAAW,KAC3D4G,EAAUvZ,KAAKyU,QAAQ6E,UAAY,GAAM,EAAI,GAAM,EACzDtZ,KAAKyU,QAAQ6E,UAAYA,EACzBtZ,KAAKyU,QAAQ+E,YAAcxZ,KAAKyU,QAAQ0D,UACxCnY,KAAKyU,QAAQgF,YACTlC,IACFvX,KAAKyU,QAAQiF,OAAOX,EAASA,EAAU/Y,KAAKwT,QAAQ7K,iBAAmB4Q,GACvEvZ,KAAKyU,QAAQkF,OAAOZ,EAAU/Y,KAAKwT,QAAQ9K,gBAAiBqQ,EAAU/Y,KAAKwT,QAAQ7K,iBAAmB4Q,IAEpG9B,IACFzX,KAAKyU,QAAQiF,OAAOX,EAASA,EAAUxK,KAAKG,MAAM1O,KAAKwT,QAAQ7K,iBAAmB,GAAK4Q,GACvFvZ,KAAKyU,QAAQkF,OAAOZ,EAAU/Y,KAAKwT,QAAQ9K,gBAAiBqQ,EAAUxK,KAAKG,MAAM1O,KAAKwT,QAAQ7K,iBAAmB,GAAK4Q,IAExHvZ,KAAKyU,QAAQmF,SACb5Z,KAAKyU,QAAQoF,W,CAGf7Z,KAAKyU,QAAQqF,UAIb,IAAMC,EAAY/Z,KAAKyU,QAAQ4E,aAC7B,EAAG,EAAGrZ,KAAKuU,WAAW1S,MAAO7B,KAAKuU,WAAWhS,QAO/C,GAHgB6W,EAAWW,EAAW9B,EAAiBW,EAAiB5Y,KAAKwT,QAAQV,mBAInF,OAAOQ,EAGT,IAAM1S,EAAkBZ,KAAKga,sBAAsBD,EAAW/Z,KAAK+T,iBAAkB8C,EAAc4B,EAAgBO,GAC7GiB,EAAmBja,KAAKka,eAAeH,EAAW/Z,KAAK+T,kBAsB7D,OAnBI/T,KAAK6T,aAAejT,EAAgBY,KAAKrB,EAAI+S,IAC/ClT,KAAK6T,aAAe,EACpB7T,KAAK4T,cAAgB5T,KAAK8T,kBAC1B9T,KAAK8T,kBAAoB,GAI3BlT,EAAgB2S,gBAAgBpT,EAAIH,KAAK6T,aACzCjT,EAAgB2S,gBAAgBnT,EAAIJ,KAAK4T,aACzChT,EAAgBe,yBAAyBxB,EAAIH,KAAK6T,aAAeX,EACjEtS,EAAgBe,yBAAyBvB,EAAIJ,KAAK4T,aAAeT,EAGjEnT,KAAK8T,kBAAoBvF,KAAKC,IAAIxO,KAAK8T,kBAAmBlT,EAAgBY,KAAKpB,GAC/EJ,KAAK6T,cAAgBjT,EAAgBY,KAAKrB,EAG1CH,KAAKqU,UAAU8F,aAAaF,EAAkBrZ,EAAgB2S,gBAAgBpT,EAAGS,EAAgB2S,gBAAgBnT,GAE1GQ,CACT,EASQ,YAAAoZ,sBAAR,SAA8BD,EAAsBK,EAA2BvD,EAAsBwD,EAA0BC,GAC7HF,EAAYpG,IAAM,EAIlB,IAHA,IAAMzR,EAAS8X,EAAkBra,KAAKwT,QAAQ3O,iBAAmB7E,KAAKuU,WAAWhS,OAC3EV,EAAQwY,EAAkBra,KAAKwT,QAAQ9K,gBAAkBmO,EAC3D0D,GAAQ,EACHna,EAAI,EAAGA,EAAImC,EAAQnC,IAAK,CAC/B,IAAK,IAAID,EAAI,EAAGA,EAAI0B,EAAO1B,IAAK,CAC9B,IAAMqa,EAAcpa,EAAIJ,KAAKuU,WAAW1S,MAAQ,EAAQ,EAAJ1B,EAAQ,EAC5D,GAAoC,IAAhC4Z,EAAUU,KAAKD,GAAoB,CACrCJ,EAAYpG,IAAM5T,EAClBma,GAAQ,EACR,K,EAGJ,GAAIA,EACF,K,CAKJ,IAFAH,EAAYnG,KAAO,EACnBsG,GAAQ,EACCpa,EAAI,EAAGA,EAAI0B,EAAO1B,IAAK,CAC9B,IAASC,EAAI,EAAGA,EAAImC,EAAQnC,IAE1B,GADMoa,EAAcpa,EAAIJ,KAAKuU,WAAW1S,MAAQ,EAAQ,EAAJ1B,EAAQ,EACxB,IAAhC4Z,EAAUU,KAAKD,GAAoB,CACrCJ,EAAYnG,KAAO9T,EACnBoa,GAAQ,EACR,K,CAGJ,GAAIA,EACF,K,CAKJ,IAFAH,EAAYjG,MAAQtS,EACpB0Y,GAAQ,EACCpa,EAAI0B,EAAQ,EAAG1B,GAAK,EAAGA,IAAK,CACnC,IAASC,EAAI,EAAGA,EAAImC,EAAQnC,IAE1B,GADMoa,EAAcpa,EAAIJ,KAAKuU,WAAW1S,MAAQ,EAAQ,EAAJ1B,EAAQ,EACxB,IAAhC4Z,EAAUU,KAAKD,GAAoB,CACrCJ,EAAYjG,MAAQhU,EACpBoa,GAAQ,EACR,K,CAGJ,GAAIA,EACF,K,CAKJ,IAFAH,EAAYlG,OAAS3R,EACrBgY,GAAQ,EACCna,EAAImC,EAAS,EAAGnC,GAAK,EAAGA,IAAK,CACpC,IAASD,EAAI,EAAGA,EAAI0B,EAAO1B,IAEzB,GADMqa,EAAcpa,EAAIJ,KAAKuU,WAAW1S,MAAQ,EAAQ,EAAJ1B,EAAQ,EACxB,IAAhC4Z,EAAUU,KAAKD,GAAoB,CACrCJ,EAAYlG,OAAS9T,EACrBma,GAAQ,EACR,K,CAGJ,GAAIA,EACF,K,CAGJ,MAAO,CACLhH,gBAAiB,CAAEpT,EAAG,EAAGC,EAAG,GAC5BuB,yBAA0B,CAAExB,EAAG,EAAGC,EAAG,GACrCoB,KAAM,CACJrB,EAAGia,EAAYjG,MAAQiG,EAAYnG,KAAO,EAC1C7T,EAAGga,EAAYlG,OAASkG,EAAYpG,IAAM,GAE5ClS,cAAe,CACb3B,GAAIia,EAAYjG,MAAQiG,EAAYnG,KAAO,GAAKf,EAChD9S,GAAIga,EAAYlG,OAASkG,EAAYpG,IAAM,GAAKb,GAElD/R,OAAQ,CACNjB,GAAIia,EAAYnG,MAAQoG,EAAkB,EA/fjB,IA+fkDC,EAAc/L,KAAKG,MAAM1O,KAAKwT,QAAQzE,cAAgB,GAAK,GACtI3O,GAAIga,EAAYpG,KAAOqG,EAAkB,EAhgBhB,IAggBiDC,EAA0C,IAA5Bta,KAAKwT,QAAQ3E,WAAmB,EAAIN,KAAKO,OAAO9O,KAAKwT,QAAQ3O,iBAAmB7E,KAAKwT,QAAQ7K,kBAAoB,GAAK,IAGpN,EAEQ,YAAAuR,eAAR,SAAuBH,EAAsBK,GAI3C,IAHA,IAAMvY,EAAQuY,EAAYjG,MAAQiG,EAAYnG,KAAO,EAC/C1R,EAAS6X,EAAYlG,OAASkG,EAAYpG,IAAM,EAChD0G,EAAc,IAAIC,kBAAkB9Y,EAAQU,EAAS,GAClDnC,EAAIga,EAAYpG,IAAK5T,GAAKga,EAAYlG,OAAQ9T,IACrD,IAAK,IAAID,EAAIia,EAAYnG,KAAM9T,GAAKia,EAAYjG,MAAOhU,IAAK,CAC1D,IAAMya,EAAYxa,EAAIJ,KAAKuU,WAAW1S,MAAQ,EAAQ,EAAJ1B,EAC5C0a,GAAaza,EAAIga,EAAYpG,KAAOnS,EAAQ,EAA6B,GAAxB1B,EAAIia,EAAYnG,MACvEyG,EAAYG,GAAad,EAAUU,KAAKG,GACxCF,EAAYG,EAAY,GAAKd,EAAUU,KAAKG,EAAY,GACxDF,EAAYG,EAAY,GAAKd,EAAUU,KAAKG,EAAY,GACxDF,EAAYG,EAAY,GAAKd,EAAUU,KAAKG,EAAY,E,CAG5D,OAAO,IAAIE,UAAUJ,EAAa7Y,EAAOU,EAC3C,EACF,EAnhBA,GA0hBA,SAAS6W,EAAWW,EAAsBzZ,EAAYC,EAAYuS,GAmBhE,IAjBA,IAAMzM,EAAI/F,EAAGyF,OAAS,GAChBO,EAAIhG,EAAGyF,OAAS,GAAK,IACrBQ,EAAIjG,EAAGyF,OAAS,EAAI,IACpBgV,EAAMxa,EAAGwF,OAAS,GAClBiV,EAAMza,EAAGwF,OAAS,GAAK,IACvBkV,EAAM1a,EAAGwF,OAAS,EAAI,IAQtBmV,EAAY3M,KAAKG,OAAOH,KAAK4M,IAAI9U,EAAI0U,GAAOxM,KAAK4M,IAAI7U,EAAI0U,GAAOzM,KAAK4M,IAAI5U,EAAI0U,IAAQ,IAGvFG,GAAU,EACLha,EAAS,EAAGA,EAAS2Y,EAAUU,KAAKxZ,OAAQG,GAAU,EACzD2Y,EAAUU,KAAKrZ,KAAYiF,GAC3B0T,EAAUU,KAAKrZ,EAAS,KAAOkF,GAC/ByT,EAAUU,KAAKrZ,EAAS,KAAOmF,IAK5BuM,GACAvE,KAAK4M,IAAIpB,EAAUU,KAAKrZ,GAAUiF,GACnCkI,KAAK4M,IAAIpB,EAAUU,KAAKrZ,EAAS,GAAKkF,GACtCiI,KAAK4M,IAAIpB,EAAUU,KAAKrZ,EAAS,GAAKmF,GAAM2U,EAPhDnB,EAAUU,KAAKrZ,EAAS,GAAK,EAU3Bga,GAAU,EAKhB,OAAOA,CACT,CAEA,SAAS7F,EAAY8F,GACnB,IAAMC,EAAID,EAAEE,SAAS,IACrB,OAAOD,EAAEra,OAAS,EAAI,IAAMqa,EAAIA,CAClC,CAtkBa,EAAAvJ,eAAAA,C,0FCzCb,aAGA,SAIA,SAEA,aAYE,WACUyJ,EACRC,EACAC,EACQC,EACErf,GAJF,KAAAkf,WAAAA,EAGA,KAAAG,OAAAA,EACE,KAAArf,QAAAA,EAdJ,KAAAsf,iBAA2B,EAC3B,KAAAC,kBAA4B,EAC5B,KAAAC,iBAA2B,EAC3B,KAAAC,kBAA4B,EAC5B,KAAAC,gBAA0B,EAC1B,KAAAC,eAAyB,EAW/Bjc,KAAKoJ,QAAUC,SAASC,cAAc,UACtCtJ,KAAKoJ,QAAQ8S,UAAUC,IAAI,SAASV,EAAE,UACtCzb,KAAKoJ,QAAQ6B,MAAMyQ,OAASA,EAAOH,WACnCvb,KAAKoc,cACLpc,KAAKwb,WAAWzR,YAAY/J,KAAKoJ,QACnC,CA8NF,OA5NS,YAAAmB,QAAP,WACEvK,KAAKoJ,QAAQiT,SACTrc,KAAK2K,YACP3K,KAAK2K,WAAWJ,SAEpB,EAEQ,YAAA6R,YAAR,WACEpc,KAAKsc,MAAO,IAAAtf,cAAagD,KAAKoJ,QAAQM,WAAW,KAAM,CAAE4K,MAAOtU,KAAK2b,UAEhE3b,KAAK2b,QACR3b,KAAKuc,WAET,EAEO,YAAA7Q,iBAAP,SAAwBxJ,GAA2B,EAC5C,YAAAgJ,OAAP,SAAchJ,GAA2B,EAClC,YAAAiJ,QAAP,SAAejJ,GAA2B,EACnC,YAAAuJ,aAAP,SAAoBvJ,GAA2B,EACxC,YAAAoK,cAAP,SAAqBpK,EAAoBsa,EAAkBC,GAAuB,EAC3E,YAAArR,mBAAP,SAA0BlJ,EAAoBmJ,EAAqCC,EAAmCtE,QAAA,IAAAA,IAAAA,GAAA,EAA0C,EAEzJ,YAAAxE,UAAP,SAAiBN,EAAoBwa,GACnC1c,KAAK+K,kBAAkB7I,EAAUwa,EACnC,EAEU,YAAAC,iBAAV,SAA2Bza,EAAoBoS,GAE7C,GAAIA,IAAUtU,KAAK2b,OAAnB,CAKA,IAAMiB,EAAY5c,KAAKoJ,QACvBpJ,KAAK2b,OAASrH,EAEdtU,KAAKoJ,QAAUpJ,KAAKoJ,QAAQyT,YAC5B7c,KAAKoc,cACLpc,KAAKwb,WAAWsB,aAAa9c,KAAKoJ,QAASwT,GAG3C5c,KAAK+K,kBAAkB7I,EAAUlC,KAAK1D,SACtC0D,KAAKsM,cAAcpK,EAAU,EAAGA,EAASE,KAAO,E,CAClD,EAOQ,YAAA2I,kBAAR,SAA0B7I,EAAoBwa,GACxC1c,KAAK4b,kBAAoB,GAAK5b,KAAK6b,mBAAqB,IAG5D7b,KAAK2K,YAAa,IAAAgB,kBAAiBzJ,EAAUwa,EAAU1c,KAAK8b,iBAAkB9b,KAAK+b,kBAAmB/b,KAAK4b,iBAAkB5b,KAAK6b,mBAClI7b,KAAK2K,WAAWiB,SAClB,EAEO,YAAArE,OAAP,SAAcrF,EAAoBiV,GAChCnX,KAAK8b,iBAAmB3E,EAAIvS,gBAC5B5E,KAAK+b,kBAAoB5E,EAAItS,iBAC7B7E,KAAK4b,iBAAmBzE,EAAIzO,gBAC5B1I,KAAK6b,kBAAoB1E,EAAIxO,iBAC7B3I,KAAKgc,gBAAkB7E,EAAI7V,eAC3BtB,KAAKic,eAAiB9E,EAAI5V,cAC1BvB,KAAKoJ,QAAQvH,MAAQsV,EAAI1V,kBACzBzB,KAAKoJ,QAAQ7G,OAAS4U,EAAIzV,mBAC1B1B,KAAKoJ,QAAQ6B,MAAMpJ,MAAWsV,EAAIvO,YAAW,KAC7C5I,KAAKoJ,QAAQ6B,MAAM1I,OAAY4U,EAAItO,aAAY,KAG1C7I,KAAK2b,QACR3b,KAAKuc,YAGPvc,KAAK+K,kBAAkB7I,EAAUlC,KAAK1D,QACxC,EAWU,YAAAygB,WAAV,SAAqB5c,EAAWC,EAAWyB,EAAeU,GACxDvC,KAAKsc,KAAKlE,SACRjY,EAAIH,KAAK8b,iBACT1b,EAAIJ,KAAK+b,kBACTla,EAAQ7B,KAAK8b,iBACbvZ,EAASvC,KAAK+b,kBAClB,EAQU,YAAAiB,uBAAV,SAAiC7c,EAAWC,EAAWyB,QAAA,IAAAA,IAAAA,EAAA,GACrD7B,KAAKsc,KAAKlE,SACRjY,EAAIH,KAAK8b,kBACR1b,EAAI,GAAKJ,KAAK+b,kBAAoB9S,OAAOC,iBAAmB,EAC7DrH,EAAQ7B,KAAK8b,iBACb7S,OAAOC,iBACX,EAQU,YAAA+T,oBAAV,SAA8B9c,EAAWC,EAAWyB,GAClD7B,KAAKsc,KAAKlE,SACRjY,EAAIH,KAAK8b,iBACT1b,EAAIJ,KAAK+b,kBACT9S,OAAOC,iBAAmBrH,EAC1B7B,KAAK+b,kBACT,EAQU,YAAAmB,kBAAV,SAA4B/c,EAAWC,EAAWyB,EAAeU,GAC/DvC,KAAKsc,KAAKhD,UAAYrQ,OAAOC,iBAC7BlJ,KAAKsc,KAAKa,WACRhd,EAAIH,KAAK8b,iBAAmB7S,OAAOC,iBAAmB,EACtD9I,EAAIJ,KAAK+b,kBAAqB9S,OAAOC,iBAAmB,EACxDrH,EAAQ7B,KAAK8b,iBAAmB7S,OAAOC,iBACtC3G,EAASvC,KAAK+b,kBAAqB9S,OAAOC,iBAC/C,EAKU,YAAAqT,UAAV,WACMvc,KAAK2b,OACP3b,KAAKsc,KAAKzH,UAAU,EAAG,EAAG7U,KAAKoJ,QAAQvH,MAAO7B,KAAKoJ,QAAQ7G,SAE3DvC,KAAKsc,KAAKnE,UAAYnY,KAAK1D,QAAQoI,WAAWwN,IAC9ClS,KAAKsc,KAAKlE,SAAS,EAAG,EAAGpY,KAAKoJ,QAAQvH,MAAO7B,KAAKoJ,QAAQ7G,QAE9D,EASU,YAAA6a,YAAV,SAAsBjd,EAAWC,EAAWyB,EAAeU,GACrDvC,KAAK2b,OACP3b,KAAKsc,KAAKzH,UACR1U,EAAIH,KAAK8b,iBACT1b,EAAIJ,KAAK+b,kBACTla,EAAQ7B,KAAK8b,iBACbvZ,EAASvC,KAAK+b,oBAEhB/b,KAAKsc,KAAKnE,UAAYnY,KAAK1D,QAAQoI,WAAWwN,IAC9ClS,KAAKsc,KAAKlE,SACRjY,EAAIH,KAAK8b,iBACT1b,EAAIJ,KAAK+b,kBACTla,EAAQ7B,KAAK8b,iBACbvZ,EAASvC,KAAK+b,mBAEpB,EAYU,YAAAsB,mBAAV,SAA6Bnb,EAAoBqK,EAAgBpM,EAAWC,GAC1EJ,KAAKsc,KAAKhE,KAAOtY,KAAKsd,SAASpb,GAAU,GAAO,GAChDlC,KAAKsc,KAAK/D,aAAe,EAAAC,cACzBxY,KAAKud,SAASrb,EAAU9B,GACxBJ,KAAKsc,KAAKpD,SACR3M,EAAKgB,WACLpN,EAAIH,KAAK8b,iBAAmB9b,KAAKgc,gBACjC5b,EAAIJ,KAAK+b,kBAAoB/b,KAAKic,eAAiBjc,KAAK6b,kBAC5D,EAOQ,YAAA0B,SAAR,SAAiBrb,EAAoB9B,GACnCJ,KAAKsc,KAAK7C,YACVzZ,KAAKsc,KAAKkB,KACR,EACApd,EAAIJ,KAAK+b,kBACT7Z,EAASpB,KAAOd,KAAK8b,iBACrB9b,KAAK+b,mBACP/b,KAAKsc,KAAKmB,MACZ,EAOU,YAAAH,SAAV,SAAmBpb,EAAoB+U,EAAiBK,GAItD,OAFkBA,EAAW,SAAW,IAErB,KAHAL,EAAS/U,EAAS0M,QAAQiE,eAAiB3Q,EAAS0M,QAAQgE,YAG9C,IAAI1Q,EAAS0M,QAAQ+D,SAAY1J,OAAOC,iBAAgB,MAAMhH,EAAS0M,QAAQ8D,UAClH,EACF,EAtPA,GAAsB,EAAAgL,gBAAAA,C,ikBCTtB,aAEA,SAgBMC,EAAiB,IAEvB,cAME,WACEzb,EACA0b,EACAlC,EACA9Q,EACiBvO,EACTwhB,GANV,MAQE,YAAMD,EAAW,SAAUlC,GAAQ,EAAM9Q,IAAO,K,OAH/B,EAAAvO,UAAAA,EACT,EAAAwhB,2BAAAA,EARF,EAAAC,MAAmB,IAAI,EAAA9V,SAW7B,EAAK+V,OAAS,CACZ5d,EAAG,EACHC,EAAG,EACH4d,WAAW,EACX/S,MAAO,GACPpJ,MAAO,GAET,EAAKoc,iBAAmB,CACtB,IAAO,EAAKC,iBAAiBC,KAAK,GAClC,MAAS,EAAKC,mBAAmBD,KAAK,GACtC,UAAa,EAAKE,uBAAuBF,KAAK,IAEhD,EAAKzS,iBAAiBxJ,G,CACxB,CAmLF,OA/MuC,OA8B9B,YAAAqF,OAAP,SAAcrF,EAAoBiV,GAChC,YAAM5P,OAAM,UAACrF,EAAUiV,GAEvBnX,KAAK+d,OAAS,CACZ5d,EAAG,EACHC,EAAG,EACH4d,WAAW,EACX/S,MAAO,GACPpJ,MAAO,EAEX,EAEO,YAAAiJ,MAAP,SAAa5I,G,MACXlC,KAAKse,eACwB,QAA7B,EAAAte,KAAKue,gCAAwB,SAAEC,sBAAsBtc,GACrDlC,KAAK0L,iBAAiBxJ,EACxB,EAEO,YAAAgJ,OAAP,SAAchJ,G,MACiB,QAA7B,EAAAlC,KAAKue,gCAAwB,SAAEE,QAC/Bze,KAAK6d,2BAA2B/T,KAAK,CAAEuB,MAAOnJ,EAASuK,OAAO4B,OAAOqQ,QAASpT,IAAKpJ,EAASuK,OAAO4B,OAAOqQ,SAC5G,EAEO,YAAAvT,QAAP,SAAejJ,G,MACgB,QAA7B,EAAAlC,KAAKue,gCAAwB,SAAEI,OAAOzc,GACtClC,KAAK6d,2BAA2B/T,KAAK,CAAEuB,MAAOnJ,EAASuK,OAAO4B,OAAOqQ,QAASpT,IAAKpJ,EAASuK,OAAO4B,OAAOqQ,SAC5G,EAEO,YAAAhT,iBAAP,SAAwBxJ,GAAxB,I,EAAA,OACMA,EAAS0M,QAAQgQ,YACd5e,KAAKue,2BACRve,KAAKue,yBAA2B,IAAIM,EAAwB3c,GAAU,WACpE,EAAK4c,QAAQ5c,GAAU,EACzB,MAG2B,QAA7B,EAAAlC,KAAKue,gCAAwB,SAAEhU,UAC/BvK,KAAKue,8BAA2Bvd,GAIlChB,KAAK6d,2BAA2B/T,KAAK,CAAEuB,MAAOnJ,EAASuK,OAAO4B,OAAOqQ,QAASpT,IAAKpJ,EAASuK,OAAO4B,OAAOqQ,SAC5G,EAEO,YAAAjT,aAAP,SAAoBvJ,G,MACW,QAA7B,EAAAlC,KAAKue,gCAAwB,SAAEC,sBAAsBtc,EACvD,EAEO,YAAAoK,cAAP,SAAqBpK,EAAoBsa,EAAkBC,IACpDzc,KAAKue,0BAA4Bve,KAAKue,yBAAyBQ,SAClE/e,KAAK8e,QAAQ5c,GAAU,GAEvBlC,KAAKue,yBAAyBC,sBAAsBtc,EAExD,EAEQ,YAAA4c,QAAR,SAAgB5c,EAAoB8c,GAGlC,GAAKhf,KAAK3D,UAAU4iB,YAAYC,sBAAuBlf,KAAK3D,UAAU4iB,YAAYE,eAAlF,CAKA,IAAMT,EAAUxc,EAASuK,OAAO4B,OAAO+Q,MAAQld,EAASuK,OAAO4B,OAAOqQ,QAChEW,EAA0BX,EAAUxc,EAASuK,OAAO4B,OAAOC,UAG3DgR,EAAU/Q,KAAKE,IAAIvM,EAASuK,OAAO4B,OAAOiR,QAASpd,EAASpB,KAAO,GAGzE,GAAIue,EAA0B,GAAKA,GAA2Bnd,EAASE,KACrEpC,KAAKse,oBAMP,GADCpc,EAAiBmG,MAAMoE,OAAOG,MAAMC,IAAI6R,GAAS1R,SAASsS,EAAStf,KAAK8d,YAC9C9c,IAAvBhB,KAAK8d,MAAM5O,QAAf,CAIA,IAAKqQ,EAAkBrd,GAAW,CAChClC,KAAKse,eACLte,KAAKsc,KAAKvF,OACV/W,KAAKsc,KAAKnE,UAAYnY,KAAK1D,QAAQ8V,OAAOF,IAC1C,IAAMsN,EAActd,EAAS0M,QAAQ4Q,YAYrC,OAXIA,GAA+B,UAAhBA,EACjBxf,KAAKie,iBAAiBuB,GAAatd,EAAUod,EAASD,EAAyBrf,KAAK8d,OAEpF9d,KAAKyf,kBAAkBvd,EAAUod,EAASD,EAAyBrf,KAAK8d,OAE1E9d,KAAKsc,KAAKxC,UACV9Z,KAAK+d,OAAO5d,EAAImf,EAChBtf,KAAK+d,OAAO3d,EAAIif,EAChBrf,KAAK+d,OAAOC,WAAY,EACxBhe,KAAK+d,OAAO9S,MAAQuU,OACpBxf,KAAK+d,OAAOlc,MAAQ7B,KAAK8d,MAAMxO,W,CAKjC,IAAItP,KAAKue,0BAA6Bve,KAAKue,yBAAyBmB,gBAApE,CAKA,GAAI1f,KAAK+d,OAAQ,CAEf,GAAI/d,KAAK+d,OAAO5d,IAAMmf,GAClBtf,KAAK+d,OAAO3d,IAAMif,GAClBrf,KAAK+d,OAAOC,YAAcuB,EAAkBrd,IAC5ClC,KAAK+d,OAAO9S,QAAU/I,EAAS0M,QAAQ4Q,aACvCxf,KAAK+d,OAAOlc,QAAU7B,KAAK8d,MAAMxO,WACnC,OAEFtP,KAAKse,c,CAGPte,KAAKsc,KAAKvF,OACV/W,KAAKie,iBAAiB/b,EAAS0M,QAAQ4Q,aAAe,SAAStd,EAAUod,EAASD,EAAyBrf,KAAK8d,OAChH9d,KAAKsc,KAAKxC,UAEV9Z,KAAK+d,OAAO5d,EAAImf,EAChBtf,KAAK+d,OAAO3d,EAAIif,EAChBrf,KAAK+d,OAAOC,WAAY,EACxBhe,KAAK+d,OAAO9S,MAAQ/I,EAAS0M,QAAQ4Q,YACrCxf,KAAK+d,OAAOlc,MAAQ7B,KAAK8d,MAAMxO,U,MAxB7BtP,KAAKse,c,OA3CLte,KAAKse,cAoET,EAEQ,YAAAA,aAAR,WACMte,KAAK+d,SAEH9U,OAAOC,iBAAmB,EAC5BlJ,KAAKuc,YAELvc,KAAKod,YAAYpd,KAAK+d,OAAO5d,EAAGH,KAAK+d,OAAO3d,EAAGJ,KAAK+d,OAAOlc,MAAO,GAEpE7B,KAAK+d,OAAS,CACZ5d,EAAG,EACHC,EAAG,EACH4d,WAAW,EACX/S,MAAO,GACPpJ,MAAO,GAGb,EAEQ,YAAAqc,iBAAR,SAAyBhc,EAAoB/B,EAAWC,EAAWmM,GACjEvM,KAAKsc,KAAKvF,OACV/W,KAAKsc,KAAKnE,UAAYnY,KAAK1D,QAAQ8V,OAAOF,IAC1ClS,KAAKid,oBAAoB9c,EAAGC,EAAG8B,EAAS0M,QAAQ+Q,aAChD3f,KAAKsc,KAAKxC,SACZ,EAEQ,YAAAsE,mBAAR,SAA2Blc,EAAoB/B,EAAWC,EAAWmM,GACnEvM,KAAKsc,KAAKvF,OACV/W,KAAKsc,KAAKnE,UAAYnY,KAAK1D,QAAQ8V,OAAOF,IAC1ClS,KAAK+c,WAAW5c,EAAGC,EAAGmM,EAAK+C,WAAY,GACvCtP,KAAKsc,KAAKnE,UAAYnY,KAAK1D,QAAQ+V,aAAaH,IAChDlS,KAAKqd,mBAAmBnb,EAAUqK,EAAMpM,EAAGC,GAC3CJ,KAAKsc,KAAKxC,SACZ,EAEQ,YAAAuE,uBAAR,SAA+Bnc,EAAoB/B,EAAWC,EAAWmM,GACvEvM,KAAKsc,KAAKvF,OACV/W,KAAKsc,KAAKnE,UAAYnY,KAAK1D,QAAQ8V,OAAOF,IAC1ClS,KAAKgd,uBAAuB7c,EAAGC,GAC/BJ,KAAKsc,KAAKxC,SACZ,EAEQ,YAAA2F,kBAAR,SAA0Bvd,EAAoB/B,EAAWC,EAAWmM,GAClEvM,KAAKsc,KAAKvF,OACV/W,KAAKsc,KAAK9C,YAAcxZ,KAAK1D,QAAQ8V,OAAOF,IAC5ClS,KAAKkd,kBAAkB/c,EAAGC,EAAGmM,EAAK+C,WAAY,GAC9CtP,KAAKsc,KAAKxC,SACZ,EACF,EA/MA,CAAuC,EAAA4D,iBAA1B,EAAAjV,kBAAAA,EAiNb,iBAcE,WACEvG,EACQ0d,GAAA,KAAAA,gBAAAA,EAER5f,KAAK0f,iBAAkB,EACnBH,EAAkBrd,IACpBlC,KAAK6f,kBAET,CA+GF,OA7GE,sBAAW,uBAAQ,C,IAAnB,WAAiC,QAAS7f,KAAK8f,oBAAsB9f,KAAK+f,eAAiB,E,gCAEpF,YAAAxV,QAAP,WACMvK,KAAK+f,iBACP9W,OAAO+W,cAAchgB,KAAK+f,gBAC1B/f,KAAK+f,oBAAiB/e,GAEpBhB,KAAK8f,qBACP7W,OAAOgX,aAAajgB,KAAK8f,oBACzB9f,KAAK8f,wBAAqB9e,GAExBhB,KAAKkgB,kBACPjX,OAAOkX,qBAAqBngB,KAAKkgB,iBACjClgB,KAAKkgB,qBAAkBlf,EAE3B,EAEO,YAAAwd,sBAAP,SAA6Btc,GAA7B,WACMlC,KAAK+e,WAIT/e,KAAKogB,wBAA0BC,KAAKC,MAEpCtgB,KAAK0f,iBAAkB,EAClB1f,KAAKkgB,kBACRlgB,KAAKkgB,gBAAkBjX,OAAOsX,uBAAsB,WAClD,EAAKX,kBACL,EAAKM,qBAAkBlf,CACzB,KAEJ,EAEQ,YAAA6e,iBAAR,SAAyBW,GAAzB,gBAAyB,IAAAA,IAAAA,EAAA,GAEnBxgB,KAAK+f,iBACP9W,OAAO+W,cAAchgB,KAAK+f,gBAC1B/f,KAAK+f,oBAAiB/e,GAOxBhB,KAAK8f,mBAAqB7W,OAAOwX,YAAW,WAG1C,GAAI,EAAKL,wBAAyB,CAChC,IAAMM,EAAO/C,GAAkB0C,KAAKC,MAAQ,EAAKF,yBAEjD,GADA,EAAKA,6BAA0Bpf,EAC3B0f,EAAO,EAET,YADA,EAAKb,iBAAiBa,E,CAM1B,EAAKhB,iBAAkB,EACvB,EAAKQ,gBAAkBjX,OAAOsX,uBAAsB,WAClD,EAAKX,kBACL,EAAKM,qBAAkBlf,CACzB,IAGA,EAAK+e,eAAiB9W,OAAO0X,aAAY,WAEvC,GAAI,EAAKP,wBAAyB,CAGhC,IAAMM,EAAO/C,GAAkB0C,KAAKC,MAAQ,EAAKF,yBAGjD,OAFA,EAAKA,6BAA0Bpf,OAC/B,EAAK6e,iBAAiBa,E,CAKxB,EAAKhB,iBAAmB,EAAKA,gBAC7B,EAAKQ,gBAAkBjX,OAAOsX,uBAAsB,WAClD,EAAKX,kBACL,EAAKM,qBAAkBlf,CACzB,GACF,GAAG2c,EACL,GAAG6C,EACL,EAEO,YAAA/B,MAAP,WACEze,KAAK0f,iBAAkB,EACnB1f,KAAK+f,iBACP9W,OAAO+W,cAAchgB,KAAK+f,gBAC1B/f,KAAK+f,oBAAiB/e,GAEpBhB,KAAK8f,qBACP7W,OAAOgX,aAAajgB,KAAK8f,oBACzB9f,KAAK8f,wBAAqB9e,GAExBhB,KAAKkgB,kBACPjX,OAAOkX,qBAAqBngB,KAAKkgB,iBACjClgB,KAAKkgB,qBAAkBlf,EAE3B,EAEO,YAAA2d,OAAP,SAAczc,GAEZlC,KAAKye,QAELze,KAAKogB,6BAA0Bpf,EAC/BhB,KAAK6f,mBACL7f,KAAKwe,sBAAsBtc,EAC7B,EACF,EArIA,GAuIA,SAASqd,EAAkBrd,GACzB,OAAOmH,SAASuX,gBAAkB1e,EAAS2e,UAAYxX,SAASyX,UAClE,C,+jBC9WA,aACA,SACA,SAIA,cAGE,WAAYlD,EAAwBlC,EAAgB9Q,EAAmB1I,GAAvE,MACE,YAAM0b,EAAW,OAAQlC,GAAQ,EAAM9Q,IAAO,K,OAC9C1I,EAAS6e,UAAUC,qBAAoB,SAAAnX,GAAK,SAAKoX,qBAAqBpX,EAA1B,IAC5C3H,EAAS6e,UAAUG,qBAAoB,SAAArX,GAAK,SAAKsX,qBAAqBtX,EAA1B,IAE5C3H,EAASkf,WAAWJ,qBAAoB,SAAAnX,GAAK,SAAKoX,qBAAqBpX,EAA1B,IAC7C3H,EAASkf,WAAWF,qBAAoB,SAAArX,GAAK,SAAKsX,qBAAqBtX,EAA1B,I,CAC/C,CAmDF,OA7DqC,OAY5B,YAAAtC,OAAP,SAAcrF,EAAoBiV,GAChC,YAAM5P,OAAM,UAACrF,EAAUiV,GAEvBnX,KAAK+d,YAAS/c,CAChB,EAEO,YAAA8J,MAAP,SAAa5I,GACXlC,KAAKqhB,mBACP,EAEQ,YAAAA,kBAAR,WACE,GAAIrhB,KAAK+d,OAAQ,CACf/d,KAAKod,YAAYpd,KAAK+d,OAAO5X,GAAInG,KAAK+d,OAAO3X,GAAIpG,KAAK+d,OAAOjd,KAAOd,KAAK+d,OAAO5X,GAAI,GACpF,IAAMmb,EAAiBthB,KAAK+d,OAAOwD,GAAKvhB,KAAK+d,OAAO3X,GAAK,EACrDkb,EAAiB,GACnBthB,KAAKod,YAAY,EAAGpd,KAAK+d,OAAO3X,GAAK,EAAGpG,KAAK+d,OAAOjd,KAAMwgB,GAE5DthB,KAAKod,YAAY,EAAGpd,KAAK+d,OAAOwD,GAAIvhB,KAAK+d,OAAOyD,GAAI,GACpDxhB,KAAK+d,YAAS/c,C,CAElB,EAEQ,YAAAigB,qBAAR,SAA6BpX,GAU3B,GATIA,EAAEtJ,KAAO,EAAAkhB,uBACXzhB,KAAKsc,KAAKnE,UAAYnY,KAAK1D,QAAQoI,WAAWwN,SAC5BlR,IAAT6I,EAAEtJ,KAAoB,IAAAmhB,YAAW7X,EAAEtJ,IAE5CP,KAAKsc,KAAKnE,UAAYnY,KAAK1D,QAAQ0J,KAAK6D,EAAEtJ,IAAK2R,IAE/ClS,KAAKsc,KAAKnE,UAAYnY,KAAK1D,QAAQ2J,WAAWiM,IAG5CrI,EAAEzD,KAAOyD,EAAE0X,GAEbvhB,KAAKgd,uBAAuBnT,EAAE1D,GAAI0D,EAAEzD,GAAIyD,EAAE2X,GAAK3X,EAAE1D,QAC5C,CAELnG,KAAKgd,uBAAuBnT,EAAE1D,GAAI0D,EAAEzD,GAAIyD,EAAE/I,KAAO+I,EAAE1D,IACnD,IAAK,IAAI/F,EAAIyJ,EAAEzD,GAAK,EAAGhG,EAAIyJ,EAAE0X,GAAInhB,IAC/BJ,KAAKgd,uBAAuB,EAAG5c,EAAGyJ,EAAE/I,MAEtCd,KAAKgd,uBAAuB,EAAGnT,EAAE0X,GAAI1X,EAAE2X,G,CAEzCxhB,KAAK+d,OAASlU,CAChB,EAEQ,YAAAsX,qBAAR,SAA6BtX,GAC3B7J,KAAKqhB,mBACP,EACF,EA7DA,CAAqC,EAAA3D,iBAAxB,EAAAnV,gBAAAA,C,iGCAb,oCACEoZ,EACA/R,EACA3D,EACA2C,GAEA+S,EAAKC,iBAAiBhS,EAAM3D,EAAS2C,GACrC,IAAIiT,GAAW,EACf,MAAO,CACLtX,QAAS,WACHsX,IAGJA,GAAW,EACXF,EAAKG,oBAAoBlS,EAAM3D,EAAS2C,GAC1C,EAEJ,C,2mCCxBA,cASa,EAAAmT,wBAA2E,CAEtF,IAAK,CAAC,CAAE5hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAG7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAG7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IACzD,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IACzD,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IACzD,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IACzD,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IACzD,IAAK,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAGzD,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IACrC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IACrC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IACrC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IACrC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IACrC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAGrC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IACrC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IACrC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IACrC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IACrC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IACrC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAGrC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAEjE,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAEjE,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAEjE,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAEjE,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAEjE,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAGzH,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAErC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAErC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAErC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAErC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAGrC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAErC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAErC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAErC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAErC,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAGrC,KAAa,CACX,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GACnD,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GACnD,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GACnD,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAGrD,KAAa,CACX,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GACnD,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GACnD,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GACnD,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,IAGrD,KAAa,CAAC,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,GAAK,CAAE9hB,EAAG,EAAGC,EAAG,EAAG4hB,EAAG,EAAGC,EAAG,KASnE,IAAMC,GAAgF,CAEpF,IAAK,CACH,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEZ,IAAK,CACH,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN,IAAK,CACH,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,KAgDK,EAAAC,sBAAwH,CAEnI,KAAG,KAAI,mBAAoC,GAC3C,KAAG,KAAI,mBAAoC,GAC3C,KAAG,KAAI,mBAAoC,GAC3C,KAAG,KAAI,mBAAoC,GAC3C,KAAG,KAAI,2BAAsC,GAC7C,KAAG,KAAI,2BAAsC,GAC7C,KAAG,KAAI,0BAAqC,GAC5C,KAAG,KAAI,0BAAqC,GAC5C,KAAG,KAAI,0BAAmC,GAC1C,KAAG,KAAI,0BAAmC,GAC1C,KAAG,KAAI,0BAAkC,GACzC,KAAG,KAAI,0BAAkC,GACzC,KAAG,KAAI,gCAA8B,GACrC,KAAG,KAAI,gCAA8B,GACrC,KAAG,KAAI,gCAA6B,GACpC,KAAG,KAAI,gCAA6B,GACpC,KAAG,KAAI,gCAA+B,GACtC,KAAG,KAAI,gCAA+B,GACtC,KAAG,KAAI,gCAA4B,GACnC,KAAG,KAAI,gCAA4B,GACnC,KAAG,KAAI,+BAA4B,GACnC,KAAG,KAAI,+BAA4B,GACnC,KAAG,KAAI,oBAAqC,GAC5C,KAAG,KAAI,oBAAqC,GAC5C,KAAG,KAAI,oBAAoC,GAC3C,KAAG,KAAI,oBAAoC,GAC3C,KAAG,KAAI,oBAAsC,GAC7C,KAAG,KAAI,oBAAsC,GAC7C,KAAG,KAAI,oBAAuC,GAC9C,KAAG,KAAI,oBAAuC,GAG9C,KAAG,KAAI,KAAgB,SAACC,EAAIC,GAAO,aAAM,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,EAArD,EAAyD,GAC5F,KAAG,KAAI,KAAgB,SAACD,EAAIC,GAAO,WAAI,GAAKD,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,IAArD,EAAyD,GAC5F,KAAG,KAAI,KAAgB,SAACA,EAAIC,GAAO,oBAAa,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,EAA7D,EAAiE,GACpG,KAAG,KAAI,KAAgB,SAACD,EAAIC,GAAO,WAAI,GAAKD,GAAE,QAAO,GAAKA,GAAE,eAAc,GAAKA,GAAE,SAAQ,GAAKA,GAAE,IAA7D,EAAiE,GACpG,KAAG,KAAI,KAAgB,SAACA,EAAIC,GAAO,aAAM,GAAKA,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,IAAnG,EAAuG,GAC1I,KAAG,KAAI,KAAgB,SAACA,EAAIC,GAAO,aAAM,GAAKA,GAAE,SAAQ,GAAKA,GAAE,cAAa,GAAKA,GAAE,SAAQ,GAAKA,EAA7D,EAAiE,GACpG,KAAG,KAAI,KAAgB,SAACD,EAAIC,GAAO,WAAI,GAAKD,GAAE,QAAO,GAAKA,GAAE,eAAc,GAAKA,GAAE,SAAQ,GAAKA,GAAE,IAA7D,EAAiE,GACpG,KAAG,KAAI,KAAgB,SAACA,EAAIC,GAAO,aAAM,GAAKA,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,IAAnG,EAAuG,GAC1I,KAAG,KAAI,KAAgB,SAACA,EAAIC,GAAO,oBAAa,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,EAA7D,EAAiE,GACpG,KAAG,KAAI,KAAgB,SAACD,EAAIC,GAAO,iBAAU,GAAKD,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,GAAE,IAA7D,EAAiE,GACpG,KAAG,KAAI,KAAgB,SAACA,EAAIC,GAAO,aAAM,GAAKA,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,IAAnG,EAAuG,GAC1I,KAAG,KAAI,KAAgB,SAACA,EAAIC,GAAO,aAAM,GAAKA,GAAE,SAAQ,GAAKA,GAAE,cAAa,GAAKA,GAAE,SAAQ,GAAKA,EAA7D,EAAiE,GACpG,KAAG,KAAI,KAAgB,SAACD,EAAIC,GAAO,iBAAU,GAAKD,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,GAAE,IAA7D,EAAiE,GACpG,KAAG,KAAI,KAAgB,SAACA,EAAIC,GAAO,aAAM,GAAKA,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,IAAnG,EAAuG,GAC1I,KAAG,KAAI,KAAgB,SAACA,EAAIC,GAAO,0BAA+B,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,EAA/E,EAAmF,GACtH,KAAG,KAAI,KAAgB,SAACD,EAAIC,GAAO,WAAI,GAAKD,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,WAAnE,EAA8E,GACjH,KAAG,KAAI,KAAgB,SAACA,EAAIC,GAAO,WAAI,GAAKD,GAAE,QAAO,GAAKA,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,IAA/H,EAAmI,GACtK,KAAG,KAAI,KAAgB,SAACA,EAAIC,GAAO,yBAA8B,GAAKA,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,EAA/E,EAAmF,GACtH,KAAG,KAAI,KAAgB,SAACD,EAAIC,GAAO,iBAAU,GAAKD,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,IAA1E,EAA8E,GACjH,KAAG,KAAI,KAAgB,SAACA,EAAIC,GAAO,WAAI,GAAKD,GAAE,QAAO,GAAKA,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,IAA/H,EAAmI,GACtK,KAAG,KAAI,KAAgB,SAACA,EAAIC,GAAO,aAAM,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,GAAE,QAAtE,EAA8E,GACjH,KAAG,MAAI,MAAgB,SAACD,EAAIC,GAAO,uBAA4B,GAAKD,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,GAAE,IAA/E,EAAmF,IACtH,KAAG,MAAI,MAAgB,SAACA,EAAIC,GAAO,aAAM,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,IAA/H,EAAmI,IACtK,KAAG,MAAI,MAAgB,SAACA,EAAIC,GAAO,oBAAa,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,EAA1E,EAA8E,IACjH,KAAG,MAAI,MAAgB,SAACD,EAAIC,GAAO,uBAA4B,GAAKD,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,GAAE,IAA/E,EAAmF,IACtH,KAAG,MAAI,MAAgB,SAACA,EAAIC,GAAO,aAAM,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,IAA/H,EAAmI,IACtK,KAAG,MAAI,MAAgB,SAACA,EAAIC,GAAO,yBAA8B,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,EAA7E,EAAiF,IACpH,KAAG,MAAI,MAAgB,SAACD,EAAIC,GAAO,uBAA4B,GAAKD,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,IAA7E,EAAiF,IACpH,KAAG,MAAI,MAAgB,SAACA,EAAIC,GAAO,aAAM,GAAKA,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,IAAzM,EAA6M,IAGhP,KAAG,MAAI,MAAgB,YAAW,IAClC,KAAG,MAAI,MAAgB,YAAW,IAClC,KAAG,MAAI,MAAgB,sBAAqB,IAG5C,KAAG,MAAI,qBAAsE,qBAAoC,IACjH,KAAG,MAAI,qBAAsE,qBAAqC,IAClH,KAAG,MAAI,qBAAsE,qBAAmC,IAChH,KAAG,MAAI,qBAAsE,qBAAkC,IAC/G,KAAG,MAAI,qBAAsE,qBAAoC,IACjH,KAAG,MAAI,qBAAsE,qBAAqC,IAClH,KAAG,MAAI,qBAAsE,qBAAmC,IAChH,KAAG,MAAI,qBAAsE,qBAAqC,IAClH,KAAG,MAAI,qBAAsE,qBAAoC,IACjH,KAAG,MAAI,qBAAsE,qBAAkC,IAC/G,KAAG,MAAI,qBAAsE,qBAAmC,IAChH,KAAG,MAAI,qBAAsE,qBAAkC,IAC/G,KAAG,MAAI,oBAAsE,qBAAoC,IACjH,KAAG,MAAI,4BAAsE,qBAAkC,IAC/G,KAAG,MAAI,2BAAsE,qBAAqC,IAClH,KAAG,MAAI,qBAAsE,oBAAkC,IAC/G,KAAG,MAAI,qBAAsE,2BAAiC,IAC9G,KAAG,MAAI,qBAAsE,4BAAoC,IACjH,KAAG,MAAI,oBAAsE,qBAAmC,IAChH,KAAG,MAAI,2BAAsE,qBAAkC,IAC/G,KAAG,MAAI,2BAAsE,qBAAqC,IAClH,KAAG,MAAI,qBAAsE,oBAAkC,IAC/G,KAAG,MAAI,qBAAsE,2BAAgC,IAC7G,KAAG,MAAI,qBAAsE,2BAAmC,IAChH,KAAG,MAAI,4BAAsE,qBAAmC,IAChH,KAAG,MAAI,2BAAsE,qBAAoC,IACjH,KAAG,MAAI,qBAAsE,oBAAkC,IAC/G,KAAG,MAAI,oBAAsE,qBAAqC,IAClH,KAAG,MAAI,qBAAsE,2BAAmC,IAChH,KAAG,MAAI,qBAAsE,4BAAoC,IACjH,KAAG,MAAI,2BAAsE,qBAAmC,IAChH,KAAG,MAAI,2BAAsE,qBAAoC,IACjH,KAAG,MAAI,qBAAsE,oBAAkC,IAC/G,KAAG,MAAI,oBAAsE,qBAAkC,IAC/G,KAAG,MAAI,qBAAsE,2BAAgC,IAC7G,KAAG,MAAI,qBAAsE,2BAAiC,IAC9G,KAAG,MAAI,MAAgB,2BAAsD,qBAAmC,IAChH,KAAG,MAAI,MAAgB,2BAAsD,qBAAoC,IACjH,KAAG,MAAI,oBAAsE,oBAAkC,IAC/G,KAAG,MAAI,MAAgB,2BAAsD,qBAAkC,IAC/G,KAAG,MAAI,MAAgB,2BAAsD,qBAAqC,IAClH,KAAG,MAAI,oBAAsE,oBAAkC,IAC/G,KAAG,MAAI,4BAAsE,2BAAgC,IAC7G,KAAG,MAAI,2BAAsE,2BAAiC,IAC9G,KAAG,MAAI,2BAAsE,2BAAmC,IAChH,KAAG,MAAI,2BAAsE,4BAAoC,IACjH,KAAG,MAAI,qBAAsE,MAAc,2BAAiD,IAC5I,KAAG,MAAI,qBAAsE,MAAc,2BAAoD,IAC/I,KAAG,MAAI,qBAAsE,MAAc,2BAAkD,IAC7I,KAAG,MAAI,qBAAsE,MAAc,2BAAmD,IAG9I,KAAG,MAAI,oCAA4C,IACnD,KAAG,MAAI,oCAA4C,IACnD,KAAG,MAAI,8DAA8C,IACrD,KAAG,MAAI,8DAA8C,IACrD,KAAG,MAAI,oEAA6C,IACpD,KAAG,MAAI,oEAA6C,IACpD,KAAG,MAAI,oCAA0C,IACjD,KAAG,MAAI,oCAA0C,IACjD,KAAG,MAAI,8DAA4C,IACnD,KAAG,MAAI,8DAA4C,IACnD,KAAG,MAAI,6DAA2C,IAClD,KAAG,MAAI,6DAA2C,IAGlD,KAAG,MAAI,MAAgB,SAACA,EAAIC,GAAO,oBAAa,GAAMA,EAAK,IAAM,IAAG,SAAQ,GAAMA,EAAK,IAAM,IAAG,aAA7D,EAA0E,IAC7G,KAAG,MAAI,MAAgB,SAACD,EAAIC,GAAO,oBAAa,GAAMA,EAAK,IAAM,IAAG,SAAQ,GAAMA,EAAK,IAAM,IAAG,aAA7D,EAA0E,IAC7G,KAAG,MAAI,MAAgB,SAACD,EAAIC,GAAO,oBAAa,GAAMA,EAAK,IAAM,IAAG,SAAQ,GAAMA,EAAK,IAAM,IAAG,aAA7D,EAA0E,IAC7G,KAAG,MAAI,MAAgB,SAACD,EAAIC,GAAO,oBAAa,GAAMA,EAAK,IAAM,IAAG,SAAQ,GAAMA,EAAK,IAAM,IAAG,aAA7D,EAA0E,KAuBlG,EAAAC,qBAA0D,CAErE,IAAY,CAAEvU,EAAG,kBAAmB6B,KAAM,GAE1C,IAAY,CAAE7B,EAAG,kBAAmB6B,KAAM,EAAmB2S,kBAAmB,IAEhF,IAAY,CAAExU,EAAG,kBAAmB6B,KAAM,GAE1C,IAAY,CAAE7B,EAAG,kBAAmB6B,KAAM,EAAmB2S,kBAAmB,IAEhF,IAAY,CAAExU,EAAG,uDAAwD6B,KAAM,GAE/E,IAAY,CAAE7B,EAAG,kDAAmD6B,KAAM,GAE1E,IAAY,CAAE7B,EAAG,uDAAwD6B,KAAM,GAE/E,IAAY,CAAE7B,EAAG,kDAAmD6B,KAAM,IAO5E,6BACE4S,EACAnH,EACAoH,EACAlJ,EACA3U,EACAC,GAEA,IAAM6d,EAAyB,EAAAX,wBAAwB1G,GACvD,GAAIqH,EAEF,OAwBJ,SACEF,EACAG,EACAF,EACAlJ,EACA3U,EACAC,GAEA,IAAK,IAAIhE,EAAI,EAAGA,EAAI8hB,EAAe1hB,OAAQJ,IAAK,CAC9C,IAAM+hB,EAAMD,EAAe9hB,GACrBgiB,EAAUje,EAAkB,EAC5Bke,EAAUje,EAAmB,EACnC2d,EAAIpK,SACFqK,EAAUG,EAAIziB,EAAI0iB,EAClBtJ,EAAUqJ,EAAIxiB,EAAI0iB,EAClBF,EAAIZ,EAAIa,EACRD,EAAIX,EAAIa,E,CAGd,CA5CIC,CAAqBP,EAAKE,EAAwBD,EAASlJ,EAAS3U,EAAiBC,IAC9E,EAGT,IAAMme,EAAoBd,GAA4B7G,GACtD,GAAI2H,EAEF,OAyCJ,SACER,EACAG,EACAF,EACAlJ,EACA3U,EACAC,G,MAEIoe,EAAaC,GAAerW,IAAI8V,GAC/BM,IACHA,EAAa,IAAIE,IACjBD,GAAehgB,IAAIyf,EAAgBM,IAErC,IAAM9K,EAAYqK,EAAIrK,UACtB,GAAyB,iBAAdA,EACT,MAAM,IAAIxO,MAAM,8BAA8BwO,EAAS,KAEzD,IAAIiL,EAAUH,EAAWpW,IAAIsL,GAC7B,IAAKiL,EAAS,CACZ,IAAMvhB,EAAQ8gB,EAAe,GAAG1hB,OAC1BsB,EAASogB,EAAe1hB,OACxBoiB,EAAYha,SAASC,cAAc,UACzC+Z,EAAUxhB,MAAQA,EAClBwhB,EAAU9gB,OAASA,EACnB,IAAM+gB,GAAS,KAAAtmB,cAAaqmB,EAAU3Z,WAAW,OAC3CqQ,EAAY,IAAIe,UAAUjZ,EAAOU,GAGnC8D,OAAC,EACDC,OAAC,EACDC,OAAC,EACDE,OAAC,EACL,GAAI0R,EAAUoL,WAAW,KACvBld,EAAImd,SAASrL,EAAU5F,MAAM,EAAG,GAAI,IACpCjM,EAAIkd,SAASrL,EAAU5F,MAAM,EAAG,GAAI,IACpChM,EAAIid,SAASrL,EAAU5F,MAAM,EAAG,GAAI,IACpC9L,EAAI0R,EAAUlX,OAAS,GAAKuiB,SAASrL,EAAU5F,MAAM,EAAG,GAAI,KAAO,MAC9D,KAAI4F,EAAUoL,WAAW,QAG9B,MAAM,IAAI5Z,MAAM,sCAAsCwO,EAAS,gCAF7D9R,GAAD,KAAe8R,EAAUsL,UAAU,EAAGtL,EAAUlX,OAAS,GAAGyiB,MAAM,KAAKC,KAAI,SAAA9Z,GAAK,OAAA+Z,WAAW/Z,EAAX,IAAc,IAA5F,GAAEvD,EAAC,KAAEC,EAAC,KAAEE,EAAC,I,CAKd,IAAK,IAAIrG,EAAI,EAAGA,EAAImC,EAAQnC,IAC1B,IAAK,IAAID,EAAI,EAAGA,EAAI0B,EAAO1B,IACzB4Z,EAAUU,KAAuB,GAAjBra,EAAIyB,EAAQ1B,IAAckG,EAC1C0T,EAAUU,KAAuB,GAAjBra,EAAIyB,EAAQ1B,GAAS,GAAKmG,EAC1CyT,EAAUU,KAAuB,GAAjBra,EAAIyB,EAAQ1B,GAAS,GAAKoG,EAC1CwT,EAAUU,KAAuB,GAAjBra,EAAIyB,EAAQ1B,GAAS,GAAKwiB,EAAeviB,GAAGD,IAAU,IAAJsG,GAGtE6c,EAAOnJ,aAAaJ,EAAW,EAAG,GAClCqJ,GAAU,KAAApmB,cAAawlB,EAAIqB,cAAcR,EAAW,OACpDJ,EAAW/f,IAAIiV,EAAWiL,E,CAE5BZ,EAAIrK,UAAYiL,EAChBZ,EAAIpK,SAASqK,EAASlJ,EAAS3U,EAAiBC,EAClD,CAnGIif,CAAgBtB,EAAKQ,EAAmBP,EAASlJ,EAAS3U,EAAiBC,IACpE,EAGT,IAAMkf,EAAuB,EAAA5B,sBAAsB9G,GACnD,GAAI0I,EAEF,OAsIJ,SACEvB,EACAG,EACAF,EACAlJ,EACA3U,EACAC,G,YAEA2d,EAAIhJ,YAAcgJ,EAAIrK,U,IACtB,IAAyC,SAAA6L,OAAOC,QAAQtB,IAAe,8BAAE,CAA9D,oBAAC/P,EAAU,KAAEsR,EAAY,KAClC1B,EAAI/I,YACJ+I,EAAIlJ,UAAYrQ,OAAOC,iBAAmBib,OAAOX,SAAS5Q,GAC1D,IAAIwR,OAAkB,EAIpBA,EAH0B,mBAAjBF,EAGYA,EAFV,IACA,IAAMrf,EAAmBD,GAGfsf,E,IAEvB,IAA0B,mBAAAE,EAAmBV,MAAM,OAAI,8BAAE,CAApD,IAAMW,EAAW,QACdzU,EAAOyU,EAAY,GACnBC,EAAIC,GAA0B3U,GACpC,GAAK0U,EAAL,CAIA,IAAME,EAAiBH,EAAYZ,UAAU,GAAGC,MAAM,KACjDc,EAAK,IAAOA,EAAK,IAGtBF,EAAE9B,EAAKiC,GAAcD,EAAM5f,EAAiBC,EAAkB4d,EAASlJ,G,MAPrEpJ,QAAQC,MAAM,4CAA4CR,EAAI,I,mGASlE4S,EAAI5I,SACJ4I,EAAI3I,W,mGAER,CA3KI6K,CAAmBlC,EAAKuB,EAAsBtB,EAASlJ,EAAS3U,EAAiBC,IAC1E,EAGT,IAAM8f,EAAsB,EAAArC,qBAAqBjH,GACjD,QAAIsJ,IAwKN,SACEnC,EACAG,EACAF,EACAlJ,EACA3U,EACAC,G,QAEA2d,EAAI/I,YACJ+I,EAAIlJ,UAAYrQ,OAAOC,iB,IACvB,IAA0B,SAAAyZ,EAAe5U,EAAE2V,MAAM,MAAI,8BAAE,CAAlD,IAAMW,EAAW,QACdzU,EAAOyU,EAAY,GACnBC,EAAIC,GAA0B3U,GACpC,GAAK0U,EAAL,CAIA,IAAME,EAAiBH,EAAYZ,UAAU,GAAGC,MAAM,KACjDc,EAAK,IAAOA,EAAK,IAGtBF,EAAE9B,EAAKiC,GAAcD,EAAM5f,EAAiBC,EAAkB4d,EAASlJ,EAASoJ,EAAeJ,mB,MAP7FpS,QAAQC,MAAM,4CAA4CR,EAAI,I,mGAStC,IAAxB+S,EAAe/S,MACjB4S,EAAIhJ,YAAcgJ,EAAIrK,UACtBqK,EAAI5I,UAEJ4I,EAAIzgB,OAENygB,EAAI3I,WACN,CArMI+K,CAAkBpC,EAAKmC,EAAqBlC,EAASlJ,EAAS3U,EAAiBC,IACxE,EAIX,EAuBA,IAAMqe,GAAoF,IAAIC,IA2K9F,SAAS0B,GAAMrV,EAAehB,EAAaC,GACzC,YADyC,IAAAA,IAAAA,EAAA,GAClCF,KAAKC,IAAID,KAAKE,IAAIe,EAAOhB,GAAMC,EACxC,CAEA,IAAM8V,GAAsD,CAC1D,EAAK,SAAC/B,EAA+BgC,GAAmB,OAAAhC,EAAIsC,cAAcN,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAApE,EACxD,EAAK,SAAChC,EAA+BgC,GAAmB,OAAAhC,EAAI7I,OAAO6K,EAAK,GAAIA,EAAK,GAAzB,EACxD,EAAK,SAAChC,EAA+BgC,GAAmB,OAAAhC,EAAI9I,OAAO8K,EAAK,GAAIA,EAAK,GAAzB,GAG1D,SAASC,GAAcD,EAAgBO,EAAmBC,EAAoBvC,EAAiBlJ,EAAiBgJ,QAAA,IAAAA,IAAAA,EAAA,GAC9G,IAAMhM,EAASiO,EAAKb,KAAI,SAAA9Z,GAAK,OAAA+Z,WAAW/Z,IAAM2Z,SAAS3Z,EAA1B,IAE7B,GAAI0M,EAAOtV,OAAS,EAClB,MAAM,IAAI0I,MAAM,qCAGlB,IAAK,IAAIxJ,EAAI,EAAGA,EAAIoW,EAAOtV,OAAQd,GAAK,EAEtCoW,EAAOpW,IAAM4kB,EAAiC,EAApBxC,EAAwBtZ,OAAOC,iBAGvC,IAAdqN,EAAOpW,KACToW,EAAOpW,GAAK0kB,GAAMtW,KAAKO,MAAMyH,EAAOpW,GAAK,IAAO,GAAK4kB,EAAW,IAGlExO,EAAOpW,IAAMsiB,EAAWF,EAAoBtZ,OAAOC,iBAGrD,IAAK,IAAI9I,EAAI,EAAGA,EAAImW,EAAOtV,OAAQb,GAAK,EAEtCmW,EAAOnW,IAAM4kB,EAGK,IAAdzO,EAAOnW,KACTmW,EAAOnW,GAAKykB,GAAMtW,KAAKO,MAAMyH,EAAOnW,GAAK,IAAO,GAAK4kB,EAAY,IAGnEzO,EAAOnW,IAAMmZ,EAGf,OAAOhD,CACT,C,cCznBA,SAAgBmC,EAAiBuM,GAI/B,OAAO,OAAUA,GAAaA,GAAc,KAC9C,C,4HAZA,wBAAgCzV,GAC9B,IAAKA,EACH,MAAM,IAAI7F,MAAM,2BAElB,OAAO6F,CACT,EAEA,qBAWA,2CAAgDyV,GAC9C,OAAOvM,EAAiBuM,IAL1B,SAA2BA,GACzB,OAAQ,MAAUA,GAAaA,GAAa,IAC9C,CAGwCC,CAAkBD,EAC1D,C,yJCpBA,aAEa,EAAAxD,uBAAyB,IACzB,EAAA3I,YAAc,GAId,EAAAN,cAAoC,EAAA2M,WAAa,EAAAC,aAAe,SAAW,cAE3E,EAAAC,wBAA0B,C,wBCJtBC,EAmBA,EA6GAC,EAoCAxf,E,6SA8FjB,SAAgBwP,EAAY8F,GAC1B,IAAMC,EAAID,EAAEE,SAAS,IACrB,OAAOD,EAAEra,OAAS,EAAI,IAAMqa,EAAIA,CAClC,CAQA,SAAgBkK,EAAcC,EAAYC,GACxC,OAAID,EAAKC,GACCA,EAAK,MAASD,EAAK,MAErBA,EAAK,MAASC,EAAK,IAC7B,C,4HAlRA,SAAiBJ,GACC,EAAAK,MAAhB,SAAsBtf,EAAWC,EAAWC,EAAWE,GACrD,YAAUzF,IAANyF,EACK,IAAI8O,EAAYlP,GAAKkP,EAAYjP,GAAKiP,EAAYhP,GAAKgP,EAAY9O,GAErE,IAAI8O,EAAYlP,GAAKkP,EAAYjP,GAAKiP,EAAYhP,EAC3D,EAEgB,EAAAqf,OAAhB,SAAuBvf,EAAWC,EAAWC,EAAWE,GAItD,YAJsD,IAAAA,IAAAA,EAAA,MAI9CJ,GAAK,GAAKC,GAAK,GAAKC,GAAK,EAAIE,KAAO,CAC9C,CACD,CAdD,CAAiB6e,EAAA,EAAAA,WAAA,EAAAA,SAAQ,MAmBR,IAAA5e,QAAA,EAAAA,MAAK,KACJmf,MAAhB,SAAsBvlB,EAAYC,GAChC,IAAMkG,GAAe,IAAVlG,EAAGwF,MAAe,IAC7B,GAAU,IAANU,EACF,MAAO,CACLyL,IAAK3R,EAAG2R,IACRnM,KAAMxF,EAAGwF,MAGb,IAAMgV,EAAOxa,EAAGwF,MAAQ,GAAM,IACxBiV,EAAOza,EAAGwF,MAAQ,GAAM,IACxBkV,EAAO1a,EAAGwF,MAAQ,EAAK,IACvB+f,EAAOxlB,EAAGyF,MAAQ,GAAM,IACxBggB,EAAOzlB,EAAGyF,MAAQ,GAAM,IACxBigB,EAAO1lB,EAAGyF,MAAQ,EAAK,IACvBM,EAAIyf,EAAMvX,KAAKO,OAAOiM,EAAM+K,GAAOrf,GACnCH,EAAIyf,EAAMxX,KAAKO,OAAOkM,EAAM+K,GAAOtf,GACnCF,EAAIyf,EAAMzX,KAAKO,OAAOmM,EAAM+K,GAAOvf,GAGzC,MAAO,CAAEyL,IAFGoT,EAASK,MAAMtf,EAAGC,EAAGC,GAEnBR,KADDuf,EAASM,OAAOvf,EAAGC,EAAGC,GAErC,EAEgB,EAAA0f,SAAhB,SAAyBvf,GACvB,OAA+B,MAAV,IAAbA,EAAMX,KAChB,EAEgB,EAAAyQ,oBAAhB,SAAoClW,EAAYC,EAAY2lB,GAC1D,IAAM3P,EAASxQ,EAAKyQ,oBAAoBlW,EAAGyF,KAAMxF,EAAGwF,KAAMmgB,GAC1D,GAAK3P,EAGL,OAAOxQ,EAAKgQ,QACTQ,GAAU,GAAK,IACfA,GAAU,GAAK,IACfA,GAAU,EAAK,IAEpB,EAEgB,EAAAP,OAAhB,SAAuBtP,GACrB,IAAMyf,GAA0B,IAAbzf,EAAMX,QAAiB,EACpC,IAAYA,EAAKqgB,WAAWD,GAAU,GAArC9f,EAAC,KAAEC,EAAC,KAAEC,EAAC,KACd,MAAO,CACL2L,IAAKoT,EAASK,MAAMtf,EAAGC,EAAGC,GAC1BR,KAAMogB,EAEV,EAEgB,EAAAE,QAAhB,SAAwB3f,EAAe2f,GACrC,IAAM5f,EAAI8H,KAAKO,MAAgB,IAAVuX,GACf,IAAYtgB,EAAKqgB,WAAW1f,EAAMX,MAAK,GAAtCM,EAAC,KAAEC,EAAC,KAAEC,EAAC,KACd,MAAO,CACL2L,IAAKoT,EAASK,MAAMtf,EAAGC,EAAGC,EAAGE,GAC7BV,KAAMuf,EAASM,OAAOvf,EAAGC,EAAGC,EAAGE,GAEnC,EAEgB,EAAA6O,WAAhB,SAA2B5O,GACzB,MAAO,CAAEA,EAAMX,MAAQ,GAAM,IAAOW,EAAMX,MAAQ,GAAM,IAAOW,EAAMX,MAAQ,EAAK,IACpF,GAMe,EAAAmM,MAAA,EAAAA,IAAG,KACF6D,QAAhB,SAAwB7D,GACtB,GAAIA,EAAIoU,MAAM,mBACZ,OAAQpU,EAAIjR,QACV,KAAK,EACH,IAAMoF,EAAImd,SAAStR,EAAIK,MAAM,EAAG,GAAGgU,OAAO,GAAI,IACxCjgB,EAAIkd,SAAStR,EAAIK,MAAM,EAAG,GAAGgU,OAAO,GAAI,IACxChgB,EAAIid,SAAStR,EAAIK,MAAM,EAAG,GAAGgU,OAAO,GAAI,IAC9C,OAAOxgB,EAAKgQ,QAAQ1P,EAAGC,EAAGC,GAE5B,KAAK,EACGF,EAAImd,SAAStR,EAAIK,MAAM,EAAG,GAAGgU,OAAO,GAAI,IACxCjgB,EAAIkd,SAAStR,EAAIK,MAAM,EAAG,GAAGgU,OAAO,GAAI,IACxChgB,EAAIid,SAAStR,EAAIK,MAAM,EAAG,GAAGgU,OAAO,GAAI,IAF9C,IAGM9f,EAAI+c,SAAStR,EAAIK,MAAM,EAAG,GAAGgU,OAAO,GAAI,IAC9C,OAAOxgB,EAAKgQ,QAAQ1P,EAAGC,EAAGC,EAAGE,GAE/B,KAAK,EACH,MAAO,CACLyL,IAAG,EACHnM,MAAOyd,SAAStR,EAAIK,MAAM,GAAI,KAAO,EAAI,OAAU,GAEvD,KAAK,EACH,MAAO,CACLL,IAAG,EACHnM,KAAMyd,SAAStR,EAAIK,MAAM,GAAI,MAAQ,GAI7C,IAAMiU,EAAYtU,EAAIoU,MAAM,sFAC5B,GAAIE,EAKF,OAJMngB,EAAImd,SAASgD,EAAU,IACvBlgB,EAAIkd,SAASgD,EAAU,IACvBjgB,EAAIid,SAASgD,EAAU,IACvB/f,EAAI8H,KAAKO,MAAoE,UAA5C9N,IAAjBwlB,EAAU,GAAmB,EAAI5C,WAAW4C,EAAU,MACrEzgB,EAAKgQ,QAAQ1P,EAAGC,EAAGC,EAAGE,GAE/B,MAAM,IAAIkD,MAAM,sCAClB,EAMF,SAAiB,GAsBf,SAAgB8c,EAAmBpgB,EAAWC,EAAWC,GACvD,IAAMmgB,EAAKrgB,EAAI,IACTsgB,EAAKrgB,EAAI,IACTsgB,EAAKrgB,EAAI,IAIf,MAAY,OAHDmgB,GAAM,OAAUA,EAAK,MAAQnY,KAAKsY,KAAKH,EAAK,MAAS,MAAO,MAG7C,OAFfC,GAAM,OAAUA,EAAK,MAAQpY,KAAKsY,KAAKF,EAAK,MAAS,MAAO,MAE/B,OAD7BC,GAAM,OAAUA,EAAK,MAAQrY,KAAKsY,KAAKD,EAAK,MAAS,MAAO,KAEzE,CAvBgB,EAAAE,kBAAhB,SAAkCvB,GAChC,OAAOkB,EACJlB,GAAO,GAAM,IACbA,GAAO,EAAM,IACA,IAAd,EACJ,EAUgB,EAAAkB,mBAAkB,CASnC,CA/BD,CAAiBlB,EAAA,EAAAA,MAAA,EAAAA,IAAG,KAoCpB,SAAiBxf,GAyCf,SAAgBghB,EAAgB1Q,EAAgBC,EAAgB4P,GAU9D,IAPA,IAAMJ,EAAOzP,GAAU,GAAM,IACvB0P,EAAO1P,GAAU,GAAM,IACvB2P,EAAO3P,GAAW,EAAK,IACzB0E,EAAOzE,GAAU,GAAM,IACvB0E,EAAO1E,GAAU,GAAM,IACvB2E,EAAO3E,GAAW,EAAK,IACvB0Q,EAAKxB,EAAcD,EAAIkB,mBAAmB1L,EAAKC,EAAKC,GAAMsK,EAAIkB,mBAAmBX,EAAKC,EAAKC,IACxFgB,EAAKd,IAAUnL,EAAM,GAAKC,EAAM,GAAKC,EAAM,IAEhDF,GAAOxM,KAAKC,IAAI,EAAGD,KAAKI,KAAW,GAANoM,IAC7BC,GAAOzM,KAAKC,IAAI,EAAGD,KAAKI,KAAW,GAANqM,IAC7BC,GAAO1M,KAAKC,IAAI,EAAGD,KAAKI,KAAW,GAANsM,IAC7B+L,EAAKxB,EAAcD,EAAIkB,mBAAmB1L,EAAKC,EAAKC,GAAMsK,EAAIkB,mBAAmBX,EAAKC,EAAKC,IAE7F,OAAQjL,GAAO,GAAKC,GAAO,GAAKC,GAAO,EAAI,OAAU,CACvD,CAEA,SAAgBgM,EAAkB5Q,EAAgBC,EAAgB4P,GAUhE,IAPA,IAAMJ,EAAOzP,GAAU,GAAM,IACvB0P,EAAO1P,GAAU,GAAM,IACvB2P,EAAO3P,GAAW,EAAK,IACzB0E,EAAOzE,GAAU,GAAM,IACvB0E,EAAO1E,GAAU,GAAM,IACvB2E,EAAO3E,GAAW,EAAK,IACvB0Q,EAAKxB,EAAcD,EAAIkB,mBAAmB1L,EAAKC,EAAKC,GAAMsK,EAAIkB,mBAAmBX,EAAKC,EAAKC,IACxFgB,EAAKd,IAAUnL,EAAM,KAAQC,EAAM,KAAQC,EAAM,MAEtDF,EAAMxM,KAAKE,IAAI,IAAMsM,EAAMxM,KAAKI,KAAmB,IAAb,IAAMoM,KAC5CC,EAAMzM,KAAKE,IAAI,IAAMuM,EAAMzM,KAAKI,KAAmB,IAAb,IAAMqM,KAC5CC,EAAM1M,KAAKE,IAAI,IAAMwM,EAAM1M,KAAKI,KAAmB,IAAb,IAAMsM,KAC5C+L,EAAKxB,EAAcD,EAAIkB,mBAAmB1L,EAAKC,EAAKC,GAAMsK,EAAIkB,mBAAmBX,EAAKC,EAAKC,IAE7F,OAAQjL,GAAO,GAAKC,GAAO,GAAKC,GAAO,EAAI,OAAU,CACvD,CAjEgB,EAAAzE,oBAAhB,SAAoCH,EAAgBC,EAAgB4P,GAClE,IAAMgB,EAAM3B,EAAIuB,kBAAkBzQ,GAAU,GACtC8Q,EAAM5B,EAAIuB,kBAAkBxQ,GAAU,GAE5C,GADWkP,EAAc0B,EAAKC,GACrBjB,EAAO,CACd,GAAIiB,EAAMD,EAAK,CACb,IAAM,EAAUH,EAAgB1Q,EAAQC,EAAQ4P,GAC1C,EAAeV,EAAc0B,EAAK3B,EAAIuB,kBAAkB,GAAW,IACzE,GAAI,EAAeZ,EAAO,CACxB,IAAMkB,EAAUH,EAAkB5Q,EAAQA,EAAQ6P,GAElD,OAAO,EADcV,EAAc0B,EAAK3B,EAAIuB,kBAAkBM,GAAW,IACpC,EAAUA,C,CAEjD,OAAO,C,CAET,IAAMC,EAAUJ,EAAkB5Q,EAAQC,EAAQ4P,GAC5CoB,EAAe9B,EAAc0B,EAAK3B,EAAIuB,kBAAkBO,GAAW,IACzE,OAAIC,EAAepB,GACXkB,EAAUL,EAAgB1Q,EAAQA,EAAQ6P,GAEzCoB,EADc9B,EAAc0B,EAAK3B,EAAIuB,kBAAkBM,GAAW,IACpCC,EAAUD,GAE1CC,C,CAGX,EAEgB,EAAAN,gBAAe,EAoBf,EAAAE,kBAAiB,EAqBjB,EAAAb,WAAhB,SAA2B5W,GACzB,MAAO,CAAEA,GAAS,GAAM,IAAOA,GAAS,GAAM,IAAOA,GAAS,EAAK,IAAc,IAARA,EAC3E,EAEgB,EAAAuG,QAAhB,SAAwB1P,EAAWC,EAAWC,EAAWE,GACvD,MAAO,CACLyL,IAAKoT,EAASK,MAAMtf,EAAGC,EAAGC,EAAGE,GAC7BV,KAAMuf,EAASM,OAAOvf,EAAGC,EAAGC,EAAGE,GAEnC,CACD,CA5FD,CAAiBV,EAAA,EAAAA,OAAA,EAAAA,KAAI,KA8FrB,gBAWA,iB,oGClQA,8BACU,KAAAwhB,WAAgC,GAEhC,KAAAC,WAAqB,CAwC/B,QAtCE,sBAAW,oBAAK,C,IAAhB,sBAmBE,OAlBKxnB,KAAKynB,SACRznB,KAAKynB,OAAS,SAACC,GAcb,OAbA,EAAKH,WAAW1V,KAAK6V,GACF,CACjBnd,QAAS,WACP,IAAK,EAAKid,UACR,IAAK,IAAI3mB,EAAI,EAAGA,EAAI,EAAK0mB,WAAWtmB,OAAQJ,IAC1C,GAAI,EAAK0mB,WAAW1mB,KAAO6mB,EAEzB,YADA,EAAKH,WAAW3V,OAAO/Q,EAAG,EAKlC,EAGJ,GAEKb,KAAKynB,MACd,E,gCAEO,YAAA3d,KAAP,SAAY6d,EAASC,GAEnB,IADA,IAAMC,EAA2B,GACxBhnB,EAAI,EAAGA,EAAIb,KAAKunB,WAAWtmB,OAAQJ,IAC1CgnB,EAAMhW,KAAK7R,KAAKunB,WAAW1mB,IAE7B,IAASA,EAAI,EAAGA,EAAIgnB,EAAM5mB,OAAQJ,IAChCgnB,EAAMhnB,GAAGinB,UAAK9mB,EAAW2mB,EAAMC,EAEnC,EAEO,YAAArd,QAAP,WACMvK,KAAKunB,aACPvnB,KAAKunB,WAAWtmB,OAAS,GAE3BjB,KAAKwnB,WAAY,CACnB,EACF,EA3CA,GAAa,EAAArf,aAAAA,EA6Cb,wBAAgC4f,EAAiBC,GAC/C,OAAOD,GAAK,SAAAle,GAAK,OAAAme,EAAGle,KAAKD,EAAR,GACnB,C,wdCzDA,iBAIE,aAHU,KAAAoe,aAA8B,GAC9B,KAAAC,aAAuB,CAGjC,CAkCF,OA7BS,YAAA3d,QAAP,W,QACEvK,KAAKkoB,aAAc,E,IACnB,IAAgB,QAAAloB,KAAKioB,cAAY,8BAArB,QACR1d,S,kGAEJvK,KAAKioB,aAAahnB,OAAS,CAC7B,EAOO,YAAA/D,SAAP,SAAuC6Q,GAErC,OADA/N,KAAKioB,aAAapW,KAAK9D,GAChBA,CACT,EAOO,YAAAoa,WAAP,SAAyCpa,GACvC,IAAMiE,EAAQhS,KAAKioB,aAAaxW,QAAQ1D,IACzB,IAAXiE,GACFhS,KAAKioB,aAAarW,OAAOI,EAAO,EAEpC,EACF,EAvCA,GAmDA,SAAgBoW,EAAaC,G,YAC3B,IAAgB,QAAAA,GAAW,8BAAf,QACR9d,S,kGAEJ8d,EAAYpnB,OAAS,CACvB,CAxDsB,EAAAiD,WAAAA,EA4CtB,wBAA6BogB,GAC3B,MAAO,CAAE/Z,QAAS+Z,EACpB,EAKA,iBAUA,qCAA0C3jB,GACxC,MAAO,CAAE4J,QAAS,WAAM,OAAA6d,EAAaznB,EAAb,EAC1B,C,8JC3DA,IAAM2nB,EAA+B,oBAAdC,UACjBC,EAAY,EAAW,OAASD,UAAUC,UAC1CC,EAAW,EAAW,OAASF,UAAUE,SAElC,EAAAtD,UAAYqD,EAAUE,SAAS,WAC/B,EAAAtD,aAAeoD,EAAUE,SAAS,QAClC,EAAAC,SAAW,iCAAiCC,KAAKJ,GAKjD,EAAAK,MAAQ,CAAC,YAAa,WAAY,SAAU,UAAUH,SAASD,GAC/D,EAAAK,OAAsB,SAAbL,EACT,EAAAM,SAAwB,WAAbN,EACX,EAAAO,UAAY,CAAC,UAAW,QAAS,QAAS,SAASN,SAASD,GAC5D,EAAAQ,QAAUR,EAAShX,QAAQ,UAAY,C,cCVpD,SAAgByX,EAAmCvoB,EAAU6O,EAAenE,EAAmBC,GAK7F,QAL0E,IAAAD,IAAAA,EAAA,QAAmB,IAAAC,IAAAA,EAAc3K,EAAMM,QAK7GoK,GAAS1K,EAAMM,OACjB,OAAON,EAET0K,GAAS1K,EAAMM,OAASoK,GAAS1K,EAAMM,OAErCqK,EADEA,GAAO3K,EAAMM,OACTN,EAAMM,QAELN,EAAMM,OAASqK,GAAO3K,EAAMM,OAErC,IAAK,IAAIJ,EAAIwK,EAAOxK,EAAIyK,IAAOzK,EAC7BF,EAAME,GAAK2O,EAEb,OAAO7O,CACT,C,uFA1BA,gBAA2CA,EAAU6O,EAAenE,EAAgBC,GAElF,OAAI3K,EAAMoB,KACDpB,EAAMoB,KAAKyN,EAAOnE,EAAOC,GAE3B4d,EAAavoB,EAAO6O,EAAOnE,EAAOC,EAC3C,EAEA,iBAwBA,kBAA6C7E,EAAMF,GACjD,IAAMgQ,EAAS,IAAK9P,EAAE0iB,YAAoB1iB,EAAExF,OAASsF,EAAEtF,QAGvD,OAFAsV,EAAOrT,IAAIuD,GACX8P,EAAOrT,IAAIqD,EAAGE,EAAExF,QACTsV,CACT,C,sGCzCA,8BAsBS,KAAAhW,GAAK,EACL,KAAAD,GAAK,EACL,KAAA8oB,SAAW,IAAIC,CAyFxB,QAhHgB,EAAA/T,WAAd,SAAyB9F,GACvB,MAAO,CACLA,IAAU,GAAuB,IACjCA,IAAU,EAAyB,IAC3B,IAARA,EAEJ,EAEc,EAAA8Z,aAAd,SAA2B9Z,GACzB,OAAmB,IAAXA,EAAM,KAAa,IAAmC,IAAXA,EAAM,KAAa,EAAoC,IAAXA,EAAM,EACvG,EAEO,YAAA+Z,MAAP,WACE,IAAMC,EAAS,IAAI9Z,EAInB,OAHA8Z,EAAOjpB,GAAKP,KAAKO,GACjBipB,EAAOlpB,GAAKN,KAAKM,GACjBkpB,EAAOJ,SAAWppB,KAAKopB,SAASG,QACzBC,CACT,EAQO,YAAAtS,UAAP,WAAmC,OAAiB,SAAVlX,KAAKO,EAAsB,EAC9D,YAAA0W,OAAP,WAAmC,OAAiB,UAAVjX,KAAKO,EAAmB,EAC3D,YAAAiX,YAAP,WAAmC,OAAiB,UAAVxX,KAAKO,EAAwB,EAChE,YAAAkpB,QAAP,WAAmC,OAAiB,UAAVzpB,KAAKO,EAAoB,EAC5D,YAAAyW,YAAP,WAAmC,OAAiB,WAAVhX,KAAKO,EAAwB,EAChE,YAAA+W,SAAP,WAAmC,OAAiB,SAAVtX,KAAKM,EAAqB,EAC7D,YAAA8W,MAAP,WAAmC,OAAiB,UAAVpX,KAAKM,EAAkB,EAC1D,YAAAoX,gBAAP,WAAmC,OAAiB,WAAV1X,KAAKO,EAA4B,EAGpE,YAAAqX,eAAP,WAAkC,OAAiB,SAAV5X,KAAKO,EAAyB,EAChE,YAAAuX,eAAP,WAAkC,OAAiB,SAAV9X,KAAKM,EAAyB,EAChE,YAAAopB,QAAP,WAAkC,OAA0C,WAAxB,SAAV1pB,KAAKO,GAAgD,EACxF,YAAAopB,QAAP,WAAkC,OAA0C,WAAxB,SAAV3pB,KAAKM,GAAgD,EACxF,YAAAspB,YAAP,WAAkC,OAA0C,WAAxB,SAAV5pB,KAAKO,KAAqF,WAAxB,SAAVP,KAAKO,GAAiD,EACjJ,YAAAspB,YAAP,WAAkC,OAA0C,WAAxB,SAAV7pB,KAAKM,KAAqF,WAAxB,SAAVN,KAAKM,GAAiD,EACjJ,YAAAwpB,YAAP,WAAkC,OAA0C,IAAxB,SAAV9pB,KAAKO,GAAgC,EACxE,YAAAwpB,YAAP,WAAkC,OAA0C,IAAxB,SAAV/pB,KAAKM,GAAgC,EACxE,YAAA0pB,mBAAP,WAAuC,OAAmB,IAAZhqB,KAAKO,IAAwB,IAAZP,KAAKM,EAAU,EAGvE,YAAAqX,WAAP,WACE,OAAkB,SAAV3X,KAAKO,IACX,KAAK,SACL,KAAK,SAAqB,OAAiB,IAAVP,KAAKO,GACtC,KAAK,SAAqB,OAAiB,SAAVP,KAAKO,GACtC,QAA0B,OAAQ,EAEtC,EACO,YAAAsX,WAAP,WACE,OAAkB,SAAV7X,KAAKM,IACX,KAAK,SACL,KAAK,SAAqB,OAAiB,IAAVN,KAAKM,GACtC,KAAK,SAAqB,OAAiB,SAAVN,KAAKM,GACtC,QAA0B,OAAQ,EAEtC,EAGO,YAAA2pB,iBAAP,WACE,OAAiB,UAAVjqB,KAAKM,EACd,EACO,YAAA4pB,eAAP,WACMlqB,KAAKopB,SAAShO,UAChBpb,KAAKM,KAAM,UAEXN,KAAKM,IAAM,SAEf,EACO,YAAA6pB,kBAAP,WACE,GAAe,UAAVnqB,KAAKM,KAA+BN,KAAKopB,SAASgB,eACrD,OAAuC,SAA/BpqB,KAAKopB,SAASgB,gBACpB,KAAK,SACL,KAAK,SAAqB,OAAsC,IAA/BpqB,KAAKopB,SAASgB,eAC/C,KAAK,SAAqB,OAAsC,SAA/BpqB,KAAKopB,SAASgB,eAC/C,QAA0B,OAAOpqB,KAAK2X,aAG1C,OAAO3X,KAAK2X,YACd,EACO,YAAA0S,sBAAP,WACE,OAAkB,UAAVrqB,KAAKM,KAA+BN,KAAKopB,SAASgB,eACvB,SAA/BpqB,KAAKopB,SAASgB,eACdpqB,KAAK4X,gBACX,EACO,YAAA0S,oBAAP,WACE,OAAkB,UAAVtqB,KAAKM,KAA+BN,KAAKopB,SAASgB,eACE,WAAxB,SAA/BpqB,KAAKopB,SAASgB,gBACfpqB,KAAK0pB,SACX,EACO,YAAAa,wBAAP,WACE,OAAkB,UAAVvqB,KAAKM,KAA+BN,KAAKopB,SAASgB,eACE,WAAxB,SAA/BpqB,KAAKopB,SAASgB,iBAC8C,WAAxB,SAA/BpqB,KAAKopB,SAASgB,gBACpBpqB,KAAK4pB,aACX,EACO,YAAAY,wBAAP,WACE,OAAkB,UAAVxqB,KAAKM,KAA+BN,KAAKopB,SAASgB,eACE,IAAxB,SAA/BpqB,KAAKopB,SAASgB,gBACfpqB,KAAK8pB,aACX,EACO,YAAAW,kBAAP,WACE,OAAiB,UAAVzqB,KAAKO,GACG,UAAVP,KAAKM,GAA4BN,KAAKopB,SAASsB,eAAiB,EACjE,CACN,EACF,EAjHA,GAAa,EAAAhb,cAAAA,EAwHb,iBACE,WAESgb,EAEAN,QAFA,IAAAM,IAAAA,EAAA,QAEA,IAAAN,IAAAA,GAA0B,GAF1B,KAAAM,eAAAA,EAEA,KAAAN,eAAAA,CACN,CAaL,OAXS,YAAAb,MAAP,WACE,OAAO,IAAIF,EAAcrpB,KAAK0qB,eAAgB1qB,KAAKoqB,eACrD,EAMO,YAAAhP,QAAP,WACE,OAA+B,IAAxBpb,KAAK0qB,cACd,EACF,EAnBA,GAAa,EAAArB,cAAAA,C,wjBC1Hb,aACA,SACA,SAKA,yE,OAQS,EAAAna,QAAU,EACV,EAAA3O,GAAK,EACL,EAAAD,GAAK,EACL,EAAA8oB,SAA2B,IAAI,EAAAC,cAC/B,EAAAla,aAAe,G,CAoExB,QAhF8B,OAEd,EAAAwb,aAAd,SAA2Bnb,GACzB,IAAMob,EAAM,IAAI5iB,EAEhB,OADA4iB,EAAIrb,gBAAgBC,GACbob,CACT,EAQO,YAAAvb,WAAP,WACE,OAAsB,QAAfrP,KAAKkP,OACd,EAEO,YAAAI,SAAP,WACE,OAAOtP,KAAKkP,SAAW,EACzB,EAEO,YAAA3B,SAAP,WACE,OAAmB,QAAfvN,KAAKkP,QACAlP,KAAKmP,aAEK,QAAfnP,KAAKkP,SACA,IAAA2b,qBAAmC,QAAf7qB,KAAKkP,SAE3B,EACT,EAOO,YAAA1B,QAAP,WACE,OAAQxN,KAAKqP,aACTrP,KAAKmP,aAAawJ,WAAW3Y,KAAKmP,aAAalO,OAAS,GACzC,QAAfjB,KAAKkP,OACX,EAEO,YAAAK,gBAAP,SAAuBC,GACrBxP,KAAKO,GAAKiP,EAAM,EAAAsb,sBAChB9qB,KAAKM,GAAK,EACV,IAAIyqB,GAAW,EAEf,GAAIvb,EAAM,EAAAwb,sBAAsB/pB,OAAS,EACvC8pB,GAAW,OAER,GAA2C,IAAvCvb,EAAM,EAAAwb,sBAAsB/pB,OAAc,CACjD,IAAMZ,EAAOmP,EAAM,EAAAwb,sBAAsBrS,WAAW,GAGpD,GAAI,OAAUtY,GAAQA,GAAQ,MAAQ,CACpC,IAAM4qB,EAASzb,EAAM,EAAAwb,sBAAsBrS,WAAW,GAClD,OAAUsS,GAAUA,GAAU,MAChCjrB,KAAKkP,QAA6B,MAAjB7O,EAAO,OAAkB4qB,EAAS,MAAS,MAAYzb,EAAM,EAAA0b,wBAA0B,GAGxGH,GAAW,C,MAIbA,GAAW,C,MAIb/qB,KAAKkP,QAAUM,EAAM,EAAAwb,sBAAsBrS,WAAW,GAAMnJ,EAAM,EAAA0b,wBAA0B,GAE1FH,IACF/qB,KAAKmP,aAAeK,EAAM,EAAAwb,sBAC1BhrB,KAAKkP,QAAU,QAA4BM,EAAM,EAAA0b,wBAA0B,GAE/E,EAEO,YAAAzb,cAAP,WACE,MAAO,CAACzP,KAAKO,GAAIP,KAAKuN,WAAYvN,KAAKsP,WAAYtP,KAAKwN,UAC1D,EACF,EAhFA,CAA8B,EAAAkC,eAAjB,EAAA1H,SAAAA,C,4TCRA,EAAA4M,cAAgB,IAChB,EAAAuW,aAAe,IAAa,EAAAvW,eAAiB,EAE7C,EAAAkW,qBAAuB,EACvB,EAAAE,qBAAuB,EACvB,EAAAE,sBAAwB,EACxB,EAAAE,qBAAuB,EAOvB,EAAAzd,eAAiB,GACjB,EAAA0d,gBAAkB,EAClB,EAAAtqB,eAAiB,EAOjB,EAAAuqB,qBAAuB,IACvB,EAAAC,sBAAwB,EACxB,EAAAC,qBAAuB,E,0ICjBpC,+BAAoCC,GAClC,OAAIA,EAAY,OACdA,GAAa,MACN9U,OAAOC,aAAiC,OAAnB6U,GAAa,KAAgB9U,OAAOC,aAAc6U,EAAY,KAAS,QAE9F9U,OAAOC,aAAa6U,EAC7B,EAOA,yBAA8BhR,EAAmBpP,EAAmBC,QAAnB,IAAAD,IAAAA,EAAA,QAAmB,IAAAC,IAAAA,EAAcmP,EAAKxZ,QAErF,IADA,IAAIsV,EAAS,GACJ1V,EAAIwK,EAAOxK,EAAIyK,IAAOzK,EAAG,CAChC,IAAIokB,EAAYxK,EAAK5Z,GACjBokB,EAAY,OAMdA,GAAa,MACb1O,GAAUI,OAAOC,aAAiC,OAAnBqO,GAAa,KAAgBtO,OAAOC,aAAcqO,EAAY,KAAS,QAEtG1O,GAAUI,OAAOC,aAAaqO,E,CAGlC,OAAO1O,CACT,EAMA,8BACU,KAAAmV,SAAmB,CAkE7B,QA7DS,YAAA1pB,MAAP,WACEhC,KAAK0rB,SAAW,CAClB,EAUO,YAAAC,OAAP,SAAcC,EAAeC,GAC3B,IAAM5qB,EAAS2qB,EAAM3qB,OAErB,IAAKA,EACH,OAAO,EAGT,IAAIO,EAAO,EACPsqB,EAAW,EAGX9rB,KAAK0rB,WAEH,QADET,EAASW,EAAMjT,WAAWmT,OACRb,GAAU,MAChCY,EAAOrqB,KAAqC,MAA1BxB,KAAK0rB,SAAW,OAAkBT,EAAS,MAAS,OAGtEY,EAAOrqB,KAAUxB,KAAK0rB,SACtBG,EAAOrqB,KAAUypB,GAEnBjrB,KAAK0rB,SAAW,GAGlB,IAAK,IAAI7qB,EAAIirB,EAAUjrB,EAAII,IAAUJ,EAAG,CACtC,IAAMR,EAAOurB,EAAMjT,WAAW9X,GAE9B,GAAI,OAAUR,GAAQA,GAAQ,MAA9B,CACE,KAAMQ,GAAKI,EAET,OADAjB,KAAK0rB,SAAWrrB,EACTmB,EAET,IAAMypB,EACF,QADEA,EAASW,EAAMjT,WAAW9X,KACRoqB,GAAU,MAChCY,EAAOrqB,KAA4B,MAAjBnB,EAAO,OAAkB4qB,EAAS,MAAS,OAG7DY,EAAOrqB,KAAUnB,EACjBwrB,EAAOrqB,KAAUypB,E,MAIR,QAAT5qB,IAIJwrB,EAAOrqB,KAAUnB,E,CAEnB,OAAOmB,CACT,EACF,EAnEA,GAAa,EAAAuqB,cAAAA,EAwEb,8BACS,KAAAC,QAAsB,IAAIxtB,WAAW,EAgO9C,QA3NS,YAAAwD,MAAP,WACEhC,KAAKgsB,QAAQjqB,KAAK,EACpB,EAUO,YAAA4pB,OAAP,SAAcC,EAAmBC,GAC/B,IAAM5qB,EAAS2qB,EAAM3qB,OAErB,IAAKA,EACH,OAAO,EAGT,IACIgrB,EACAC,EACAC,EACAC,EAJA5qB,EAAO,EAKPyjB,EAAY,EACZ6G,EAAW,EAGf,GAAI9rB,KAAKgsB,QAAQ,GAAI,CACnB,IAAIK,GAAiB,EACjBC,EAAKtsB,KAAKgsB,QAAQ,GACtBM,GAAyB,MAAV,IAALA,GAAwB,GAAyB,MAAV,IAALA,GAAwB,GAAO,EAG3E,IAFA,IAAIC,EAAM,EACNC,OAAG,GACCA,EAA4B,GAAtBxsB,KAAKgsB,UAAUO,KAAgBA,EAAM,GACjDD,IAAO,EACPA,GAAME,EAKR,IAFA,IAAM5c,EAAsC,MAAV,IAAlB5P,KAAKgsB,QAAQ,IAAwB,EAAmC,MAAV,IAAlBhsB,KAAKgsB,QAAQ,IAAwB,EAAI,EAC/FS,EAAU7c,EAAO2c,EAChBT,EAAWW,GAAS,CACzB,GAAIX,GAAY7qB,EACd,OAAO,EAGT,GAAqB,MAAV,KADXurB,EAAMZ,EAAME,OACe,CAEzBA,IACAO,GAAiB,EACjB,K,CAGArsB,KAAKgsB,QAAQO,KAASC,EACtBF,IAAO,EACPA,GAAY,GAANE,C,CAGLH,IAEU,IAATzc,EACE0c,EAAK,IAEPR,IAEAD,EAAOrqB,KAAU8qB,EAED,IAAT1c,EACL0c,EAAK,MAAWA,GAAM,OAAUA,GAAM,OAAkB,QAAPA,IAGnDT,EAAOrqB,KAAU8qB,GAGfA,EAAK,OAAYA,EAAK,UAGxBT,EAAOrqB,KAAU8qB,IAIvBtsB,KAAKgsB,QAAQjqB,KAAK,E,CAMpB,IAFA,IAAM2qB,EAAWzrB,EAAS,EACtBJ,EAAIirB,EACDjrB,EAAII,GAAQ,CAejB,SAAOJ,EAAI6rB,IACiB,KAApBT,EAAQL,EAAM/qB,KACU,KAAxBqrB,EAAQN,EAAM/qB,EAAI,KACM,KAAxBsrB,EAAQP,EAAM/qB,EAAI,KACM,KAAxBurB,EAAQR,EAAM/qB,EAAI,MAExBgrB,EAAOrqB,KAAUyqB,EACjBJ,EAAOrqB,KAAU0qB,EACjBL,EAAOrqB,KAAU2qB,EACjBN,EAAOrqB,KAAU4qB,EACjBvrB,GAAK,EAOP,IAHAorB,EAAQL,EAAM/qB,MAGF,IACVgrB,EAAOrqB,KAAUyqB,OAGZ,GAAuB,MAAV,IAARA,GAAwB,CAClC,GAAIprB,GAAKI,EAEP,OADAjB,KAAKgsB,QAAQ,GAAKC,EACXzqB,EAGT,GAAuB,MAAV,KADb0qB,EAAQN,EAAM/qB,OACe,CAE3BA,IACA,Q,CAGF,IADAokB,GAAqB,GAARgH,IAAiB,EAAa,GAARC,GACnB,IAAM,CAEpBrrB,IACA,Q,CAEFgrB,EAAOrqB,KAAUyjB,C,MAGZ,GAAuB,MAAV,IAARgH,GAAwB,CAClC,GAAIprB,GAAKI,EAEP,OADAjB,KAAKgsB,QAAQ,GAAKC,EACXzqB,EAGT,GAAuB,MAAV,KADb0qB,EAAQN,EAAM/qB,OACe,CAE3BA,IACA,Q,CAEF,GAAIA,GAAKI,EAGP,OAFAjB,KAAKgsB,QAAQ,GAAKC,EAClBjsB,KAAKgsB,QAAQ,GAAKE,EACX1qB,EAGT,GAAuB,MAAV,KADb2qB,EAAQP,EAAM/qB,OACe,CAE3BA,IACA,Q,CAGF,IADAokB,GAAqB,GAARgH,IAAiB,IAAc,GAARC,IAAiB,EAAa,GAARC,GAC1C,MAAWlH,GAAa,OAAUA,GAAa,OAAyB,QAAdA,EAExE,SAEF4G,EAAOrqB,KAAUyjB,C,MAGZ,GAAuB,MAAV,IAARgH,GAAwB,CAClC,GAAIprB,GAAKI,EAEP,OADAjB,KAAKgsB,QAAQ,GAAKC,EACXzqB,EAGT,GAAuB,MAAV,KADb0qB,EAAQN,EAAM/qB,OACe,CAE3BA,IACA,Q,CAEF,GAAIA,GAAKI,EAGP,OAFAjB,KAAKgsB,QAAQ,GAAKC,EAClBjsB,KAAKgsB,QAAQ,GAAKE,EACX1qB,EAGT,GAAuB,MAAV,KADb2qB,EAAQP,EAAM/qB,OACe,CAE3BA,IACA,Q,CAEF,GAAIA,GAAKI,EAIP,OAHAjB,KAAKgsB,QAAQ,GAAKC,EAClBjsB,KAAKgsB,QAAQ,GAAKE,EAClBlsB,KAAKgsB,QAAQ,GAAKG,EACX3qB,EAGT,GAAuB,MAAV,KADb4qB,EAAQR,EAAM/qB,OACe,CAE3BA,IACA,Q,CAGF,IADAokB,GAAqB,EAARgH,IAAiB,IAAc,GAARC,IAAiB,IAAc,GAARC,IAAiB,EAAa,GAARC,GACjE,OAAYnH,EAAY,QAEtC,SAEF4G,EAAOrqB,KAAUyjB,C,EAKrB,OAAOzjB,CACT,EACF,EAjOA,GAAa,EAAAmrB,YAAAA,C,GCvHTC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB9rB,IAAjB+rB,EACH,OAAOA,EAAanxB,QAGrB,IAAIC,EAAS+wB,EAAyBE,GAAY,CAGjDlxB,QAAS,CAAC,GAOX,OAHAoxB,EAAoBF,GAAUhF,KAAKjsB,EAAOD,QAASC,EAAQA,EAAOD,QAASixB,GAGpEhxB,EAAOD,OACf,C,kGChBA,aAGA,SACA,SAGA,aAME,WACUqxB,GAAA,KAAAA,uBAAAA,EAJF,KAAA7kB,eAAiB,IAAI,EAAAD,YAK1B,CAqCL,OAzCE,sBAAW,4BAAa,C,IAAxB,WAA2C,OAAOnI,KAAKoI,eAAekC,KAAO,E,gCAMtE,YAAA4iB,SAAP,SAAgBhrB,GAAhB,WACE,IAAKA,EAASirB,QACZ,MAAM,IAAIxjB,MAAM,mDAElB,GAAI,EAAAgf,SACF,MAAM,IAAIhf,MAAM,8CAElB3J,KAAK3D,UAAY6F,EACjB,IAAMkrB,EAAiClrB,EAAiBmG,MAAMglB,eACxDC,EAAmDprB,EAAiBmG,MAAMV,wBAC1E4lB,EAAyCrrB,EAAiBmG,MAAMT,mBAChEgD,EAAqB1I,EAAiBmG,MAAMmlB,cAAc5iB,OAChE5K,KAAKytB,UAAY,IAAI,EAAAze,cAAc9M,EAAU0I,EAAQ0iB,EAAwBC,EAAmBvtB,KAAKitB,wBACrGjtB,KAAKytB,UAAUC,eAAc,WAAM,SAAKtlB,eAAe0B,MAApB,IACnCsjB,EAAcO,YAAY3tB,KAAKytB,UACjC,EAEO,YAAAljB,QAAP,W,MACE,IAAKvK,KAAK3D,UACR,MAAM,IAAIsN,MAAM,qDAElB,IAAMyjB,EAAiCptB,KAAK3D,UAAkBgM,MAAMglB,eACpED,EAAcO,YAAa3tB,KAAK3D,UAAkBgM,MAAMulB,mBACxDR,EAActtB,SAASE,KAAK3D,UAAUyE,KAAMd,KAAK3D,UAAU+F,MAC7C,QAAd,EAAApC,KAAKytB,iBAAS,SAAEljB,UAChBvK,KAAKytB,eAAYzsB,CACnB,EAEA,sBAAW,2BAAY,C,IAAvB,W,MACE,OAAqB,QAAd,EAAAhB,KAAKytB,iBAAS,eAAEI,YACzB,E,gCAEO,YAAAC,kBAAP,W,MACgB,QAAd,EAAA9tB,KAAKytB,iBAAS,SAAE5hB,gBAClB,EACF,EA7CA,GAAa,EAAAkiB,WAAAA,C","sources":["webpack://WebglAddon/webpack/universalModuleDefinition","webpack://WebglAddon/./src/GlyphRenderer.ts","webpack://WebglAddon/./src/RectangleRenderer.ts","webpack://WebglAddon/./src/RenderModel.ts","webpack://WebglAddon/./src/WebglRenderer.ts","webpack://WebglAddon/./src/WebglUtils.ts","webpack://WebglAddon/./src/atlas/CharAtlasCache.ts","webpack://WebglAddon/./src/atlas/CharAtlasUtils.ts","webpack://WebglAddon/./src/atlas/WebglCharAtlas.ts","webpack://WebglAddon/./src/renderLayer/BaseRenderLayer.ts","webpack://WebglAddon/./src/renderLayer/CursorRenderLayer.ts","webpack://WebglAddon/./src/renderLayer/LinkRenderLayer.ts","webpack://WebglAddon/../../src/browser/Lifecycle.ts","webpack://WebglAddon/../../src/browser/renderer/CustomGlyphs.ts","webpack://WebglAddon/../../src/browser/renderer/RendererUtils.ts","webpack://WebglAddon/../../src/browser/renderer/atlas/Constants.ts","webpack://WebglAddon/../../src/common/Color.ts","webpack://WebglAddon/../../src/common/EventEmitter.ts","webpack://WebglAddon/../../src/common/Lifecycle.ts","webpack://WebglAddon/../../src/common/Platform.ts","webpack://WebglAddon/../../src/common/TypedArrayUtils.ts","webpack://WebglAddon/../../src/common/buffer/AttributeData.ts","webpack://WebglAddon/../../src/common/buffer/CellData.ts","webpack://WebglAddon/../../src/common/buffer/Constants.ts","webpack://WebglAddon/../../src/common/input/TextDecoder.ts","webpack://WebglAddon/webpack/bootstrap","webpack://WebglAddon/./src/WebglAddon.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebglAddon\"] = factory();\n\telse\n\t\troot[\"WebglAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { createProgram, PROJECTION_MATRIX, throwIfFalsy } from './WebglUtils';\nimport { WebglCharAtlas } from './atlas/WebglCharAtlas';\nimport { IWebGL2RenderingContext, IWebGLVertexArrayObject, IRenderModel, IRasterizedGlyph } from './Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { NULL_CELL_CODE } from 'common/buffer/Constants';\nimport { Terminal, IBufferLine } from 'xterm';\nimport { IColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\ninterface IVertices {\n  attributes: Float32Array;\n  /**\n   * These buffers are the ones used to bind to WebGL, the reason there are\n   * multiple is to allow double buffering to work as you cannot modify the\n   * buffer while it's being used by the GPU. Having multiple lets us start\n   * working on the next frame.\n   */\n  attributesBuffers: Float32Array[];\n  count: number;\n}\n\nconst enum VertexAttribLocations {\n  UNIT_QUAD = 0,\n  CELL_POSITION = 1,\n  OFFSET = 2,\n  SIZE = 3,\n  TEXCOORD = 4,\n  TEXSIZE = 5\n}\n\nconst vertexShaderSource = `#version 300 es\nlayout (location = ${VertexAttribLocations.UNIT_QUAD}) in vec2 a_unitquad;\nlayout (location = ${VertexAttribLocations.CELL_POSITION}) in vec2 a_cellpos;\nlayout (location = ${VertexAttribLocations.OFFSET}) in vec2 a_offset;\nlayout (location = ${VertexAttribLocations.SIZE}) in vec2 a_size;\nlayout (location = ${VertexAttribLocations.TEXCOORD}) in vec2 a_texcoord;\nlayout (location = ${VertexAttribLocations.TEXSIZE}) in vec2 a_texsize;\n\nuniform mat4 u_projection;\nuniform vec2 u_resolution;\n\nout vec2 v_texcoord;\n\nvoid main() {\n  vec2 zeroToOne = (a_offset / u_resolution) + a_cellpos + (a_unitquad * a_size);\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_texcoord = a_texcoord + a_unitquad * a_texsize;\n}`;\n\nconst fragmentShaderSource = `#version 300 es\nprecision lowp float;\n\nin vec2 v_texcoord;\n\nuniform sampler2D u_texture;\n\nout vec4 outColor;\n\nvoid main() {\n  outColor = texture(u_texture, v_texcoord);\n}`;\n\nconst INDICES_PER_CELL = 10;\nconst BYTES_PER_CELL = INDICES_PER_CELL * Float32Array.BYTES_PER_ELEMENT;\nconst CELL_POSITION_INDICES = 2;\n\nexport class GlyphRenderer  extends Disposable {\n  private _atlas: WebglCharAtlas | undefined;\n\n  private _program: WebGLProgram;\n  private _vertexArrayObject: IWebGLVertexArrayObject;\n  private _projectionLocation: WebGLUniformLocation;\n  private _resolutionLocation: WebGLUniformLocation;\n  private _textureLocation: WebGLUniformLocation;\n  private _atlasTexture: WebGLTexture;\n  private _attributesBuffer: WebGLBuffer;\n  private _activeBuffer: number = 0;\n\n  private _vertices: IVertices = {\n    count: 0,\n    attributes: new Float32Array(0),\n    attributesBuffers: [\n      new Float32Array(0),\n      new Float32Array(0)\n    ]\n  };\n\n  constructor(\n    private _terminal: Terminal,\n    private _colors: IColorSet,\n    private _gl: IWebGL2RenderingContext,\n    private _dimensions: IRenderDimensions\n  ) {\n    super();\n\n    const gl = this._gl;\n    this._program = throwIfFalsy(createProgram(gl, vertexShaderSource, fragmentShaderSource));\n    this.register(toDisposable(() => gl.deleteProgram(this._program)));\n\n    // Uniform locations\n    this._projectionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_projection'));\n    this._resolutionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_resolution'));\n    this._textureLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_texture'));\n\n    // Create and set the vertex array object\n    this._vertexArrayObject = gl.createVertexArray();\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Setup a_unitquad, this defines the 4 vertices of a rectangle\n    const unitQuadVertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const unitQuadVerticesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(unitQuadVerticesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, unitQuadVerticesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, unitQuadVertices, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(VertexAttribLocations.UNIT_QUAD);\n    gl.vertexAttribPointer(VertexAttribLocations.UNIT_QUAD, 2, this._gl.FLOAT, false, 0, 0);\n\n    // Setup the unit quad element array buffer, this points to indices in\n    // unitQuadVertuces to allow is to draw 2 triangles from the vertices\n    const unitQuadElementIndices = new Uint8Array([0, 1, 3, 0, 2, 3]);\n    const elementIndicesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(elementIndicesBuffer)));\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementIndicesBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, unitQuadElementIndices, gl.STATIC_DRAW);\n\n    // Setup attributes\n    this._attributesBuffer = throwIfFalsy(gl.createBuffer());\n    this.register(toDisposable(() => gl.deleteBuffer(this._attributesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.enableVertexAttribArray(VertexAttribLocations.OFFSET);\n    gl.vertexAttribPointer(VertexAttribLocations.OFFSET, 2, gl.FLOAT, false, BYTES_PER_CELL, 0);\n    gl.vertexAttribDivisor(VertexAttribLocations.OFFSET, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.SIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.SIZE, 2, gl.FLOAT, false, BYTES_PER_CELL, 2 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.SIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXCOORD);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXCOORD, 2, gl.FLOAT, false, BYTES_PER_CELL, 4 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXCOORD, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXSIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXSIZE, 2, gl.FLOAT, false, BYTES_PER_CELL, 6 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXSIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.CELL_POSITION);\n    gl.vertexAttribPointer(VertexAttribLocations.CELL_POSITION, 2, gl.FLOAT, false, BYTES_PER_CELL, 8 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.CELL_POSITION, 1);\n\n    // Setup empty texture atlas\n    this._atlasTexture = throwIfFalsy(gl.createTexture());\n    this.register(toDisposable(() => gl.deleteTexture(this._atlasTexture)));\n    gl.bindTexture(gl.TEXTURE_2D, this._atlasTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0, 0, 255, 255]));\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    // Allow drawing of transparent texture\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    // Set viewport\n    this.onResize();\n  }\n\n  public beginFrame(): boolean {\n    return this._atlas ? this._atlas.beginFrame() : true;\n  }\n\n  public updateCell(x: number, y: number, code: number, bg: number, fg: number, chars: string, lastBg: number): void {\n    this._updateCell(this._vertices.attributes, x, y, code, bg, fg, chars, lastBg);\n  }\n\n  private _updateCell(array: Float32Array, x: number, y: number, code: number | undefined, bg: number, fg: number, chars: string, lastBg: number): void {\n    const terminal = this._terminal;\n\n    const i = (y * terminal.cols + x) * INDICES_PER_CELL;\n\n    // Exit early if this is a null character, allow space character to continue as it may have\n    // underline/strikethrough styles\n    if (code === NULL_CELL_CODE || code === undefined/* This is used for the right side of wide chars */) {\n      fill(array, 0, i, i + INDICES_PER_CELL - 1 - CELL_POSITION_INDICES);\n      return;\n    }\n\n    let rasterizedGlyph: IRasterizedGlyph;\n    if (!this._atlas) {\n      return;\n    }\n\n    // Get the glyph\n    if (chars && chars.length > 1) {\n      rasterizedGlyph = this._atlas.getRasterizedGlyphCombinedChar(chars, bg, fg);\n    } else {\n      rasterizedGlyph = this._atlas.getRasterizedGlyph(code, bg, fg);\n    }\n\n    // Fill empty if no glyph was found\n    if (!rasterizedGlyph) {\n      fill(array, 0, i, i + INDICES_PER_CELL - 1 - CELL_POSITION_INDICES);\n      return;\n    }\n\n    if (bg !== lastBg && rasterizedGlyph.offset.x > 0) {\n      const clippedPixels = rasterizedGlyph.offset.x;\n      // a_origin\n      array[i    ] = this._dimensions.scaledCharLeft;\n      array[i + 1] = -rasterizedGlyph.offset.y + this._dimensions.scaledCharTop;\n      // a_size\n      array[i + 2] = (rasterizedGlyph.size.x - clippedPixels) / this._dimensions.scaledCanvasWidth;\n      array[i + 3] = rasterizedGlyph.size.y / this._dimensions.scaledCanvasHeight;\n      // a_texcoord\n      array[i + 4] = rasterizedGlyph.texturePositionClipSpace.x + clippedPixels / this._atlas.cacheCanvas.width;\n      array[i + 5] = rasterizedGlyph.texturePositionClipSpace.y;\n      // a_texsize\n      array[i + 6] = rasterizedGlyph.sizeClipSpace.x - clippedPixels / this._atlas.cacheCanvas.width;\n      array[i + 7] = rasterizedGlyph.sizeClipSpace.y;\n    } else {\n      // a_origin\n      array[i    ] = -rasterizedGlyph.offset.x + this._dimensions.scaledCharLeft;\n      array[i + 1] = -rasterizedGlyph.offset.y + this._dimensions.scaledCharTop;\n      // a_size\n      array[i + 2] = rasterizedGlyph.size.x / this._dimensions.scaledCanvasWidth;\n      array[i + 3] = rasterizedGlyph.size.y / this._dimensions.scaledCanvasHeight;\n      // a_texcoord\n      array[i + 4] = rasterizedGlyph.texturePositionClipSpace.x;\n      array[i + 5] = rasterizedGlyph.texturePositionClipSpace.y;\n      // a_texsize\n      array[i + 6] = rasterizedGlyph.sizeClipSpace.x;\n      array[i + 7] = rasterizedGlyph.sizeClipSpace.y;\n    }\n    // a_cellpos only changes on resize\n  }\n\n  public clear(force?: boolean): void {\n    const terminal = this._terminal;\n    const newCount = terminal.cols * terminal.rows * INDICES_PER_CELL;\n\n    // Don't clear if not forced and the array length is correct\n    if (!force && this._vertices.count === newCount) {\n      return;\n    }\n\n    // Clear vertices\n    this._vertices.count = newCount;\n    this._vertices.attributes = new Float32Array(newCount);\n    for (let i = 0; i < this._vertices.attributesBuffers.length; i++) {\n      this._vertices.attributesBuffers[i] = new Float32Array(newCount);\n    }\n    let i = 0;\n    for (let y = 0; y < terminal.rows; y++) {\n      for (let x = 0; x < terminal.cols; x++) {\n        this._vertices.attributes[i + 8] = x / terminal.cols;\n        this._vertices.attributes[i + 9] = y / terminal.rows;\n        i += INDICES_PER_CELL;\n      }\n    }\n  }\n\n  public onResize(): void {\n    const gl = this._gl;\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    this.clear();\n  }\n\n  public setColors(): void {\n  }\n\n  public render(renderModel: IRenderModel): void {\n    if (!this._atlas) {\n      return;\n    }\n\n    const gl = this._gl;\n\n    gl.useProgram(this._program);\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Alternate buffers each frame as the active buffer gets locked while it's in use by the GPU\n    this._activeBuffer = (this._activeBuffer + 1) % 2;\n    const activeBuffer = this._vertices.attributesBuffers[this._activeBuffer];\n\n    // Copy data for each cell of each line up to its line length (the last non-whitespace cell)\n    // from the attributes buffer into activeBuffer, which is the one that gets bound to the GPU.\n    // The reasons for this are as follows:\n    // - So the active buffer can be alternated so we don't get blocked on rendering finishing\n    // - To copy either the normal attributes buffer or the selection attributes buffer when there\n    //   is a selection\n    // - So we don't send vertices for all the line-ending whitespace to the GPU\n    let bufferLength = 0;\n    for (let y = 0; y < renderModel.lineLengths.length; y++) {\n      const si = y * this._terminal.cols * INDICES_PER_CELL;\n      const sub = this._vertices.attributes.subarray(si, si + renderModel.lineLengths[y] * INDICES_PER_CELL);\n      activeBuffer.set(sub, bufferLength);\n      bufferLength += sub.length;\n    }\n\n    // Bind the attributes buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, activeBuffer.subarray(0, bufferLength), gl.STREAM_DRAW);\n\n    // Bind the texture atlas if it's changed\n    if (this._atlas.hasCanvasChanged) {\n      this._atlas.hasCanvasChanged = false;\n      gl.uniform1i(this._textureLocation, 0);\n      gl.activeTexture(gl.TEXTURE0 + 0);\n      gl.bindTexture(gl.TEXTURE_2D, this._atlasTexture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._atlas.cacheCanvas);\n      gl.generateMipmap(gl.TEXTURE_2D);\n    }\n\n    // Set uniforms\n    gl.uniformMatrix4fv(this._projectionLocation, false, PROJECTION_MATRIX);\n    gl.uniform2f(this._resolutionLocation, gl.canvas.width, gl.canvas.height);\n\n    // Draw the viewport\n    gl.drawElementsInstanced(gl.TRIANGLES, 6, gl.UNSIGNED_BYTE, 0, bufferLength / INDICES_PER_CELL);\n  }\n\n  public setAtlas(atlas: WebglCharAtlas): void {\n    const gl = this._gl;\n    this._atlas = atlas;\n\n    gl.bindTexture(gl.TEXTURE_2D, this._atlasTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, atlas.cacheCanvas);\n    gl.generateMipmap(gl.TEXTURE_2D);\n  }\n\n  public setDimensions(dimensions: IRenderDimensions): void {\n    this._dimensions = dimensions;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { createProgram, expandFloat32Array, PROJECTION_MATRIX, throwIfFalsy } from './WebglUtils';\nimport { IRenderModel, IWebGLVertexArrayObject, IWebGL2RenderingContext } from './Types';\nimport { Attributes, FgFlags } from 'common/buffer/Constants';\nimport { Terminal } from 'xterm';\nimport { IColor } from 'common/Types';\nimport { IColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { RENDER_MODEL_BG_OFFSET, RENDER_MODEL_FG_OFFSET, RENDER_MODEL_INDICIES_PER_CELL } from './RenderModel';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nconst enum VertexAttribLocations {\n  POSITION = 0,\n  SIZE = 1,\n  COLOR = 2,\n  UNIT_QUAD = 3\n}\n\nconst vertexShaderSource = `#version 300 es\nlayout (location = ${VertexAttribLocations.POSITION}) in vec2 a_position;\nlayout (location = ${VertexAttribLocations.SIZE}) in vec2 a_size;\nlayout (location = ${VertexAttribLocations.COLOR}) in vec4 a_color;\nlayout (location = ${VertexAttribLocations.UNIT_QUAD}) in vec2 a_unitquad;\n\nuniform mat4 u_projection;\nuniform vec2 u_resolution;\n\nout vec4 v_color;\n\nvoid main() {\n  vec2 zeroToOne = (a_position + (a_unitquad * a_size)) / u_resolution;\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_color = a_color;\n}`;\n\nconst fragmentShaderSource = `#version 300 es\nprecision lowp float;\n\nin vec4 v_color;\n\nout vec4 outColor;\n\nvoid main() {\n  outColor = v_color;\n}`;\n\ninterface IVertices {\n  attributes: Float32Array;\n  count: number;\n}\n\nconst INDICES_PER_RECTANGLE = 8;\nconst BYTES_PER_RECTANGLE = INDICES_PER_RECTANGLE * Float32Array.BYTES_PER_ELEMENT;\n\nconst INITIAL_BUFFER_RECTANGLE_CAPACITY = 20 * INDICES_PER_RECTANGLE;\n\nexport class RectangleRenderer extends Disposable {\n\n  private _program: WebGLProgram;\n  private _vertexArrayObject: IWebGLVertexArrayObject;\n  private _resolutionLocation: WebGLUniformLocation;\n  private _attributesBuffer: WebGLBuffer;\n  private _projectionLocation: WebGLUniformLocation;\n  private _bgFloat!: Float32Array;\n\n  private _vertices: IVertices = {\n    count: 0,\n    attributes: new Float32Array(INITIAL_BUFFER_RECTANGLE_CAPACITY)\n  };\n\n  constructor(\n    private _terminal: Terminal,\n    private _colors: IColorSet,\n    private _gl: IWebGL2RenderingContext,\n    private _dimensions: IRenderDimensions\n  ) {\n    super();\n\n    const gl = this._gl;\n\n    this._program = throwIfFalsy(createProgram(gl, vertexShaderSource, fragmentShaderSource));\n    this.register(toDisposable(() => gl.deleteProgram(this._program)));\n\n    // Uniform locations\n    this._resolutionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_resolution'));\n    this._projectionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_projection'));\n\n    // Create and set the vertex array object\n    this._vertexArrayObject = gl.createVertexArray();\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Setup a_unitquad, this defines the 4 vertices of a rectangle\n    const unitQuadVertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const unitQuadVerticesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(unitQuadVerticesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, unitQuadVerticesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, unitQuadVertices, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(VertexAttribLocations.UNIT_QUAD);\n    gl.vertexAttribPointer(VertexAttribLocations.UNIT_QUAD, 2, this._gl.FLOAT, false, 0, 0);\n\n    // Setup the unit quad element array buffer, this points to indices in\n    // unitQuadVertuces to allow is to draw 2 triangles from the vertices\n    const unitQuadElementIndices = new Uint8Array([0, 1, 3, 0, 2, 3]);\n    const elementIndicesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(elementIndicesBuffer)));\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementIndicesBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, unitQuadElementIndices, gl.STATIC_DRAW);\n\n    // Setup attributes\n    this._attributesBuffer = throwIfFalsy(gl.createBuffer());\n    this.register(toDisposable(() => gl.deleteBuffer(this._attributesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.enableVertexAttribArray(VertexAttribLocations.POSITION);\n    gl.vertexAttribPointer(VertexAttribLocations.POSITION, 2, gl.FLOAT, false, BYTES_PER_RECTANGLE, 0);\n    gl.vertexAttribDivisor(VertexAttribLocations.POSITION, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.SIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.SIZE, 2, gl.FLOAT, false, BYTES_PER_RECTANGLE, 2 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.SIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.COLOR);\n    gl.vertexAttribPointer(VertexAttribLocations.COLOR, 4, gl.FLOAT, false, BYTES_PER_RECTANGLE, 4 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.COLOR, 1);\n\n    this._updateCachedColors();\n  }\n\n  public render(): void {\n    const gl = this._gl;\n\n    gl.useProgram(this._program);\n\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    gl.uniformMatrix4fv(this._projectionLocation, false, PROJECTION_MATRIX);\n    gl.uniform2f(this._resolutionLocation, gl.canvas.width, gl.canvas.height);\n\n    // Bind attributes buffer and draw\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this._vertices.attributes, gl.DYNAMIC_DRAW);\n    gl.drawElementsInstanced(this._gl.TRIANGLES, 6, gl.UNSIGNED_BYTE, 0, this._vertices.count);\n  }\n\n  public onResize(): void {\n    this._updateViewportRectangle();\n  }\n\n  public setColors(): void {\n    this._updateCachedColors();\n    this._updateViewportRectangle();\n  }\n\n  private _updateCachedColors(): void {\n    this._bgFloat = this._colorToFloat32Array(this._colors.background);\n  }\n\n  private _updateViewportRectangle(): void {\n    // Set first rectangle that clears the screen\n    this._addRectangleFloat(\n      this._vertices.attributes,\n      0,\n      0,\n      0,\n      this._terminal.cols * this._dimensions.scaledCellWidth,\n      this._terminal.rows * this._dimensions.scaledCellHeight,\n      this._bgFloat\n    );\n  }\n\n  public updateBackgrounds(model: IRenderModel): void {\n    const terminal = this._terminal;\n    const vertices = this._vertices;\n\n    let rectangleCount = 1;\n\n    for (let y = 0; y < terminal.rows; y++) {\n      let currentStartX = -1;\n      let currentBg = 0;\n      let currentFg = 0;\n      let currentInverse = false;\n      for (let x = 0; x < terminal.cols; x++) {\n        const modelIndex = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n        const bg = model.cells[modelIndex + RENDER_MODEL_BG_OFFSET];\n        const fg = model.cells[modelIndex + RENDER_MODEL_FG_OFFSET];\n        const inverse = !!(fg & FgFlags.INVERSE);\n        if (bg !== currentBg || (fg !== currentFg && (currentInverse || inverse))) {\n          // A rectangle needs to be drawn if going from non-default to another color\n          if (currentBg !== 0 || (currentInverse && currentFg !== 0)) {\n            const offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n            this._updateRectangle(vertices, offset, currentFg, currentBg, currentStartX, x, y);\n          }\n          currentStartX = x;\n          currentBg = bg;\n          currentFg = fg;\n          currentInverse = inverse;\n        }\n      }\n      // Finish rectangle if it's still going\n      if (currentBg !== 0 || (currentInverse && currentFg !== 0)) {\n        const offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n        this._updateRectangle(vertices, offset, currentFg, currentBg, currentStartX, terminal.cols, y);\n      }\n    }\n    vertices.count = rectangleCount;\n  }\n\n  private _updateRectangle(vertices: IVertices, offset: number, fg: number, bg: number, startX: number, endX: number, y: number): void {\n    let rgba: number | undefined;\n    if (fg & FgFlags.INVERSE) {\n      switch (fg & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          rgba = this._colors.ansi[fg & Attributes.PCOLOR_MASK].rgba;\n          break;\n        case Attributes.CM_RGB:\n          rgba = (fg & Attributes.RGB_MASK) << 8;\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          rgba = this._colors.foreground.rgba;\n      }\n    } else {\n      switch (bg & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          rgba = this._colors.ansi[bg & Attributes.PCOLOR_MASK].rgba;\n          break;\n        case Attributes.CM_RGB:\n          rgba = (bg & Attributes.RGB_MASK) << 8;\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          rgba = this._colors.background.rgba;\n      }\n    }\n\n    if (vertices.attributes.length < offset + 4) {\n      vertices.attributes = expandFloat32Array(vertices.attributes, this._terminal.rows * this._terminal.cols * INDICES_PER_RECTANGLE);\n    }\n    const x1 = startX * this._dimensions.scaledCellWidth;\n    const y1 = y * this._dimensions.scaledCellHeight;\n    const r = ((rgba >> 24) & 0xFF) / 255;\n    const g = ((rgba >> 16) & 0xFF) / 255;\n    const b = ((rgba >> 8 ) & 0xFF) / 255;\n\n    this._addRectangle(vertices.attributes, offset, x1, y1, (endX - startX) * this._dimensions.scaledCellWidth, this._dimensions.scaledCellHeight, r, g, b, 1);\n  }\n\n  private _addRectangle(array: Float32Array, offset: number, x1: number, y1: number, width: number, height: number, r: number, g: number, b: number, a: number): void {\n    array[offset    ] = x1;\n    array[offset + 1] = y1;\n    array[offset + 2] = width;\n    array[offset + 3] = height;\n    array[offset + 4] = r;\n    array[offset + 5] = g;\n    array[offset + 6] = b;\n    array[offset + 7] = a;\n  }\n\n  private _addRectangleFloat(array: Float32Array, offset: number, x1: number, y1: number, width: number, height: number, color: Float32Array): void {\n    array[offset    ] = x1;\n    array[offset + 1] = y1;\n    array[offset + 2] = width;\n    array[offset + 3] = height;\n    array[offset + 4] = color[0];\n    array[offset + 5] = color[1];\n    array[offset + 6] = color[2];\n    array[offset + 7] = color[3];\n  }\n\n  private _colorToFloat32Array(color: IColor): Float32Array {\n    return new Float32Array([\n      ((color.rgba >> 24) & 0xFF) / 255,\n      ((color.rgba >> 16) & 0xFF) / 255,\n      ((color.rgba >> 8 ) & 0xFF) / 255,\n      ((color.rgba      ) & 0xFF) / 255\n    ]);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderModel, ISelectionRenderModel } from './Types';\nimport { fill } from 'common/TypedArrayUtils';\n\nexport const RENDER_MODEL_INDICIES_PER_CELL = 3;\nexport const RENDER_MODEL_BG_OFFSET = 1;\nexport const RENDER_MODEL_FG_OFFSET = 2;\n\nexport const COMBINED_CHAR_BIT_MASK = 0x80000000;\n\nexport class RenderModel implements IRenderModel {\n  public cells: Uint32Array;\n  public lineLengths: Uint32Array;\n  public selection: ISelectionRenderModel;\n\n  constructor() {\n    this.cells = new Uint32Array(0);\n    this.lineLengths = new Uint32Array(0);\n    this.selection = {\n      hasSelection: false,\n      columnSelectMode: false,\n      viewportStartRow: 0,\n      viewportEndRow: 0,\n      viewportCappedStartRow: 0,\n      viewportCappedEndRow: 0,\n      startCol: 0,\n      endCol: 0\n    };\n  }\n\n  public resize(cols: number, rows: number): void {\n    const indexCount = cols * rows * RENDER_MODEL_INDICIES_PER_CELL;\n    if (indexCount !== this.cells.length) {\n      this.cells = new Uint32Array(indexCount);\n      this.lineLengths = new Uint32Array(rows);\n    }\n  }\n\n  public clear(): void {\n    fill(this.cells, 0, 0);\n    fill(this.lineLengths, 0, 0);\n  }\n\n  public clearSelection(): void {\n    this.selection.hasSelection = false;\n    this.selection.viewportStartRow = 0;\n    this.selection.viewportEndRow = 0;\n    this.selection.viewportCappedStartRow = 0;\n    this.selection.viewportCappedEndRow = 0;\n    this.selection.startCol = 0;\n    this.selection.endCol = 0;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { GlyphRenderer } from './GlyphRenderer';\nimport { LinkRenderLayer } from './renderLayer/LinkRenderLayer';\nimport { CursorRenderLayer } from './renderLayer/CursorRenderLayer';\nimport { acquireCharAtlas, removeTerminalFromCache } from './atlas/CharAtlasCache';\nimport { WebglCharAtlas } from './atlas/WebglCharAtlas';\nimport { RectangleRenderer } from './RectangleRenderer';\nimport { IWebGL2RenderingContext } from './Types';\nimport { RenderModel, COMBINED_CHAR_BIT_MASK, RENDER_MODEL_BG_OFFSET, RENDER_MODEL_FG_OFFSET, RENDER_MODEL_INDICIES_PER_CELL } from './RenderModel';\nimport { Disposable } from 'common/Lifecycle';\nimport { Attributes, Content, FgFlags, NULL_CELL_CHAR, NULL_CELL_CODE } from 'common/buffer/Constants';\nimport { Terminal, IEvent } from 'xterm';\nimport { IRenderLayer } from './renderLayer/Types';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { ITerminal, IColorSet } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { CellData } from 'common/buffer/CellData';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { CharData, ICellData } from 'common/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IDecorationService } from 'common/services/Services';\n\nexport class WebglRenderer extends Disposable implements IRenderer {\n  private _renderLayers: IRenderLayer[];\n  private _charAtlas: WebglCharAtlas | undefined;\n  private _devicePixelRatio: number;\n\n  private _model: RenderModel = new RenderModel();\n  private _workCell: CellData = new CellData();\n  private _workColors: { fg: number, bg: number } = { fg: 0, bg: 0 };\n\n  private _canvas: HTMLCanvasElement;\n  private _gl: IWebGL2RenderingContext;\n  private _rectangleRenderer: RectangleRenderer;\n  private _glyphRenderer: GlyphRenderer;\n\n  public dimensions: IRenderDimensions;\n\n  private _core: ITerminal;\n  private _isAttached: boolean;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  private _onContextLoss = new EventEmitter<void>();\n  public get onContextLoss(): IEvent<void> { return this._onContextLoss.event; }\n\n  constructor(\n    private _terminal: Terminal,\n    private _colors: IColorSet,\n    private readonly _characterJoinerService: ICharacterJoinerService,\n    private readonly _decorationService: IDecorationService,\n    preserveDrawingBuffer?: boolean\n  ) {\n    super();\n\n    this._core = (this._terminal as any)._core;\n\n    this._renderLayers = [\n      new LinkRenderLayer(this._core.screenElement!, 2, this._colors, this._core),\n      new CursorRenderLayer(_terminal, this._core.screenElement!, 3, this._colors, this._core, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n\n    this._canvas = document.createElement('canvas');\n\n    const contextAttributes = {\n      antialias: false,\n      depth: false,\n      preserveDrawingBuffer\n    };\n    this._gl = this._canvas.getContext('webgl2', contextAttributes) as IWebGL2RenderingContext;\n    if (!this._gl) {\n      throw new Error('WebGL2 not supported ' + this._gl);\n    }\n\n    this.register(addDisposableDomListener(this._canvas, 'webglcontextlost', (e) => { this._onContextLoss.fire(e); }));\n\n    this._core.screenElement!.appendChild(this._canvas);\n\n    this._rectangleRenderer = this.register(new RectangleRenderer(this._terminal, this._colors, this._gl, this.dimensions));\n    this._glyphRenderer = this.register(new GlyphRenderer(this._terminal, this._colors, this._gl, this.dimensions));\n\n    // Update dimensions and acquire char atlas\n    this.onCharSizeChanged();\n\n    this._isAttached = document.body.contains(this._core.screenElement!);\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    this._canvas.parentElement?.removeChild(this._canvas);\n    removeTerminalFromCache(this._terminal);\n    super.dispose();\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._charAtlas?.cacheCanvas;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._terminal, this._colors);\n      l.reset(this._terminal);\n    }\n\n    this._rectangleRenderer.setColors();\n    this._glyphRenderer.setColors();\n\n    this._refreshCharAtlas();\n\n    // Force a full refresh\n    this._model.clear();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._terminal.cols, this._terminal.rows);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    this._model.resize(this._terminal.cols, this._terminal.rows);\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this._terminal, this.dimensions);\n    }\n\n    // Resize the canvas\n    this._canvas.width = this.dimensions.scaledCanvasWidth;\n    this._canvas.height = this.dimensions.scaledCanvasHeight;\n    this._canvas.style.width = `${this.dimensions.canvasWidth}px`;\n    this._canvas.style.height = `${this.dimensions.canvasHeight}px`;\n\n    // Resize the screen\n    this._core.screenElement!.style.width = `${this.dimensions.canvasWidth}px`;\n    this._core.screenElement!.style.height = `${this.dimensions.canvasHeight}px`;\n\n    this._rectangleRenderer.onResize();\n    this._glyphRenderer.setDimensions(this.dimensions);\n    this._glyphRenderer.onResize();\n\n    this._refreshCharAtlas();\n\n    // Force a full refresh\n    this._model.clear();\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._terminal.cols, this._terminal.rows);\n  }\n\n  public onBlur(): void {\n    for (const l of this._renderLayers) {\n      l.onBlur(this._terminal);\n    }\n  }\n\n  public onFocus(): void {\n    for (const l of this._renderLayers) {\n      l.onFocus(this._terminal);\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    for (const l of this._renderLayers) {\n      l.onSelectionChanged(this._terminal, start, end, columnSelectMode);\n    }\n    this._updateSelectionModel(start, end, columnSelectMode);\n    this._requestRedrawViewport();\n  }\n\n  public onCursorMove(): void {\n    for (const l of this._renderLayers) {\n      l.onCursorMove(this._terminal);\n    }\n  }\n\n  public onOptionsChanged(): void {\n    for (const l of this._renderLayers) {\n      l.onOptionsChanged(this._terminal);\n    }\n    this._updateDimensions();\n    this._refreshCharAtlas();\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param terminal The terminal.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(): void {\n    if (this.dimensions.scaledCharWidth <= 0 && this.dimensions.scaledCharHeight <= 0) {\n      // Mark as not attached so char atlas gets refreshed on next render\n      this._isAttached = false;\n      return;\n    }\n\n    const atlas = acquireCharAtlas(this._terminal, this._colors, this.dimensions.scaledCellWidth, this.dimensions.scaledCellHeight, this.dimensions.scaledCharWidth, this.dimensions.scaledCharHeight);\n    if (!('getRasterizedGlyph' in atlas)) {\n      throw new Error('The webgl renderer only works with the webgl char atlas');\n    }\n    this._charAtlas = atlas as WebglCharAtlas;\n    this._charAtlas.warmUp();\n    this._glyphRenderer.setAtlas(this._charAtlas);\n  }\n\n  public clearCharAtlas(): void {\n    this._charAtlas?.clearTexture();\n    this._model.clear();\n    this._updateModel(0, this._terminal.rows - 1);\n    this._requestRedrawViewport();\n  }\n\n  public clear(): void {\n    this._model.clear();\n    this._glyphRenderer.clear(true);\n    for (const l of this._renderLayers) {\n      l.reset(this._terminal);\n    }\n  }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return -1;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return false;\n  }\n\n  public renderRows(start: number, end: number): void {\n    if (!this._isAttached) {\n      if (document.body.contains(this._core.screenElement!) && (this._core as any)._charSizeService.width && (this._core as any)._charSizeService.height) {\n        this._updateDimensions();\n        this._refreshCharAtlas();\n        this._isAttached = true;\n      } else {\n        return;\n      }\n    }\n\n    // Update render layers\n    for (const l of this._renderLayers) {\n      l.onGridChanged(this._terminal, start, end);\n    }\n\n    // Tell renderer the frame is beginning\n    if (this._glyphRenderer.beginFrame()) {\n      this._model.clear();\n      this._updateSelectionModel(undefined, undefined);\n    }\n\n    // Update model to reflect what's drawn\n    this._updateModel(start, end);\n\n    // Render\n    this._rectangleRenderer.render();\n    this._glyphRenderer.render(this._model);\n  }\n\n  private _updateModel(start: number, end: number): void {\n    const terminal = this._core;\n    let cell: ICellData = this._workCell;\n    let lastBg: number = 0;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + terminal.buffer.ydisp;\n      const line = terminal.buffer.lines.get(row)!;\n      this._model.lineLengths[y] = 0;\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < terminal.cols; x++) {\n        lastBg = this._workColors.bg;\n        line.loadCell(x, cell);\n\n        if (x === 0) {\n          lastBg = this._workColors.bg;\n        }\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly.\n          cell = new JoinedCellData(\n            cell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        const chars = cell.getChars();\n        let code = cell.getCode();\n        const i = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n\n        // Load colors/resolve overrides into work colors\n        this._loadColorsForCell(x, row);\n\n        if (code !== NULL_CELL_CODE) {\n          this._model.lineLengths[y] = x + 1;\n        }\n\n        // Nothing has changed, no updates needed\n        if (this._model.cells[i] === code &&\n            this._model.cells[i + RENDER_MODEL_BG_OFFSET] === this._workColors.bg &&\n            this._model.cells[i + RENDER_MODEL_FG_OFFSET] === this._workColors.fg) {\n          continue;\n        }\n\n        // Flag combined chars with a bit mask so they're easily identifiable\n        if (chars.length > 1) {\n          code |= COMBINED_CHAR_BIT_MASK;\n        }\n\n        // Cache the results in the model\n        this._model.cells[i] = code;\n        this._model.cells[i + RENDER_MODEL_BG_OFFSET] = this._workColors.bg;\n        this._model.cells[i + RENDER_MODEL_FG_OFFSET] = this._workColors.fg;\n\n        this._glyphRenderer.updateCell(x, y, code, this._workColors.bg, this._workColors.fg, chars, lastBg);\n\n        if (isJoined) {\n          // Restore work cell\n          cell = this._workCell;\n\n          // Null out non-first cells\n          for (x++; x < lastCharX; x++) {\n            const j = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n            this._glyphRenderer.updateCell(x, y, NULL_CELL_CODE, 0, 0, NULL_CELL_CHAR, 0);\n            this._model.cells[j] = NULL_CELL_CODE;\n            this._model.cells[j + RENDER_MODEL_BG_OFFSET] = this._workColors.bg;\n            this._model.cells[j + RENDER_MODEL_FG_OFFSET] = this._workColors.fg;\n          }\n        }\n      }\n    }\n    this._rectangleRenderer.updateBackgrounds(this._model);\n  }\n\n  /**\n   * Loads colors for the cell into the work colors object. This resolves overrides/inverse if\n   * necessary which is why the work cell object is not used.\n   */\n  private _loadColorsForCell(x: number, y: number): void {\n    this._workColors.bg = this._workCell.bg;\n    this._workColors.fg = this._workCell.fg;\n\n    // Get any foreground/background overrides, this happens on the model to avoid spreading\n    // override logic throughout the different sub-renderers\n    let bgOverride: number | undefined;\n    let fgOverride: number | undefined;\n\n    // Apply decorations on the bottom layer\n    for (const d of this._decorationService.getDecorationsAtCell(x, y, 'bottom')) {\n      if (d.backgroundColorRGB) {\n        bgOverride = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n      }\n      if (d.foregroundColorRGB) {\n        fgOverride = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n      }\n    }\n\n    // Apply the selection color if needed\n    if (this._isCellSelected(x, y)) {\n      bgOverride = this._colors.selectionOpaque.rgba >> 8 & 0xFFFFFF;\n      if (this._colors.selectionForeground) {\n        fgOverride = this._colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n      }\n    }\n\n    // Apply decorations on the top layer\n    for (const d of this._decorationService.getDecorationsAtCell(x, y, 'top')) {\n      if (d.backgroundColorRGB) {\n        bgOverride = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n      }\n      if (d.foregroundColorRGB) {\n        fgOverride = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n      }\n    }\n\n    // Convert any overrides from rgba to the fg/bg packed format. This resolves the inverse flag\n    // ahead of time in order to use the correct cache key\n    if (bgOverride !== undefined) {\n      // Non-RGB attributes from model + override + force RGB color mode\n      bgOverride = (this._workCell.bg & ~Attributes.RGB_MASK) | bgOverride | Attributes.CM_RGB;\n    }\n    if (fgOverride !== undefined) {\n      // Non-RGB attributes from model + force disable inverse + override + force RGB color mode\n      fgOverride = (this._workCell.fg & ~Attributes.RGB_MASK & ~FgFlags.INVERSE) | fgOverride | Attributes.CM_RGB;\n    }\n\n    // Handle case where inverse was specified by only one of bgOverride or fgOverride was set,\n    // resolving the other inverse color and setting the inverse flag if needed.\n    if (this._workColors.fg & FgFlags.INVERSE) {\n      if (bgOverride !== undefined && fgOverride === undefined) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this._workColors.bg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          fgOverride = (this._workColors.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | ((this._colors.background.rgba >> 8 & 0xFFFFFF) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          fgOverride = (this._workColors.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | this._workColors.bg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n      }\n      if (bgOverride === undefined && fgOverride !== undefined) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this._workColors.fg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          bgOverride = (this._workColors.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | ((this._colors.foreground.rgba >> 8 & 0xFFFFFF) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          bgOverride = (this._workColors.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | this._workColors.fg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n      }\n    }\n\n    // Use the override if it exists\n    this._workColors.bg = bgOverride ?? this._workColors.bg;\n    this._workColors.fg = fgOverride ?? this._workColors.fg;\n  }\n\n  private _isCellSelected(x: number, y: number): boolean {\n    if (!this._model.selection.hasSelection) {\n      return false;\n    }\n    y -= this._terminal.buffer.active.viewportY;\n    if (this._model.selection.columnSelectMode) {\n      if (this._model.selection.startCol <= this._model.selection.endCol) {\n        return x >= this._model.selection.startCol && y >= this._model.selection.viewportCappedStartRow &&\n          x < this._model.selection.endCol && y <= this._model.selection.viewportCappedEndRow;\n      }\n      return x < this._model.selection.startCol && y >= this._model.selection.viewportCappedStartRow &&\n        x >= this._model.selection.endCol && y <= this._model.selection.viewportCappedEndRow;\n    }\n    return (y > this._model.selection.viewportStartRow && y < this._model.selection.viewportEndRow) ||\n      (this._model.selection.viewportStartRow === this._model.selection.viewportEndRow && y === this._model.selection.viewportStartRow && x >= this._model.selection.startCol && x < this._model.selection.endCol) ||\n      (this._model.selection.viewportStartRow < this._model.selection.viewportEndRow && y === this._model.selection.viewportEndRow && x < this._model.selection.endCol) ||\n      (this._model.selection.viewportStartRow < this._model.selection.viewportEndRow && y === this._model.selection.viewportStartRow && x >= this._model.selection.startCol);\n  }\n\n  private _updateSelectionModel(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    const terminal = this._terminal;\n\n    // Selection does not exist\n    if (!start || !end || (start[0] === end[0] && start[1] === end[1])) {\n      this._model.clearSelection();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - terminal.buffer.active.viewportY;\n    const viewportEndRow = end[1] - terminal.buffer.active.viewportY;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      this._model.clearSelection();\n      return;\n    }\n\n    this._model.selection.hasSelection = true;\n    this._model.selection.columnSelectMode = columnSelectMode;\n    this._model.selection.viewportStartRow = viewportStartRow;\n    this._model.selection.viewportEndRow = viewportEndRow;\n    this._model.selection.viewportCappedStartRow = viewportCappedStartRow;\n    this._model.selection.viewportCappedEndRow = viewportCappedEndRow;\n    this._model.selection.startCol = start[0];\n    this._model.selection.endCol = end[0];\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    // TODO: Acquire CharSizeService properly\n\n    // Perform a new measure if the CharMeasure dimensions are not yet available\n    if (!(this._core as any)._charSizeService.width || !(this._core as any)._charSizeService.height) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n\n    // NOTE: ceil fixes sometime, floor does others :s\n\n    this.dimensions.scaledCharWidth = Math.floor((this._core as any)._charSizeService.width * this._devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil((this._core as any)._charSizeService.height * this._devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight!);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._terminal.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing!);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._terminal.options.letterSpacing! / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._terminal.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._terminal.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / this._devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / this._devicePixelRatio);\n\n    // this.dimensions.scaledCanvasHeight = this.dimensions.canvasHeight * devicePixelRatio;\n    // this.dimensions.scaledCanvasWidth = this.dimensions.canvasWidth * devicePixelRatio;\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. CharMeasure.width/height by itself is\n    // insufficient when the page is not at 100% zoom level as CharMeasure is\n    // measured in CSS pixels, but the actual char size on the canvas can\n    // differ.\n    // this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n    // this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n\n    // This fixes 110% and 125%, not 150% or 175% though\n    this.dimensions.actualCellHeight = this.dimensions.scaledCellHeight / this._devicePixelRatio;\n    this.dimensions.actualCellWidth = this.dimensions.scaledCellWidth / this._devicePixelRatio;\n  }\n\n  private _requestRedrawViewport(): void {\n    this._onRequestRedraw.fire({ start: 0, end: this._terminal.rows - 1 });\n  }\n}\n\n// TODO: Share impl with core\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * A matrix that when multiplies will translate 0-1 coordinates (left to right,\n * top to bottom) to clip space.\n */\nexport const PROJECTION_MATRIX = new Float32Array([\n  2, 0, 0, 0,\n  0, -2, 0, 0,\n  0, 0, 1, 0,\n  -1, 1, 0, 1\n]);\n\nexport function createProgram(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string): WebGLProgram | undefined {\n  const program = throwIfFalsy(gl.createProgram());\n  gl.attachShader(program, throwIfFalsy(createShader(gl, gl.VERTEX_SHADER, vertexSource)));\n  gl.attachShader(program, throwIfFalsy(createShader(gl, gl.FRAGMENT_SHADER, fragmentSource)));\n  gl.linkProgram(program);\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (success) {\n    return program;\n  }\n\n  console.error(gl.getProgramInfoLog(program));\n  gl.deleteProgram(program);\n}\n\nexport function createShader(gl: WebGLRenderingContext, type: number, source: string): WebGLShader | undefined {\n  const shader = throwIfFalsy(gl.createShader(type));\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (success) {\n    return shader;\n  }\n\n  console.error(gl.getShaderInfoLog(shader));\n  gl.deleteShader(shader);\n}\n\nexport function expandFloat32Array(source: Float32Array, max: number): Float32Array {\n  const newLength = Math.min(source.length * 2, max);\n  const newArray = new Float32Array(newLength);\n  for (let i = 0; i < source.length; i++) {\n    newArray[i] = source[i];\n  }\n  return newArray;\n}\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from './CharAtlasUtils';\nimport { WebglCharAtlas } from './WebglCharAtlas';\nimport { ICharAtlasConfig } from './Types';\nimport { Terminal } from 'xterm';\nimport { IColorSet } from 'browser/Types';\n\ninterface ICharAtlasCacheEntry {\n  atlas: WebglCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: Terminal[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n * @param terminal The terminal.\n * @param colors The colors to use.\n */\nexport function acquireCharAtlas(\n  terminal: Terminal,\n  colors: IColorSet,\n  scaledCellWidth: number,\n  scaledCellHeight: number,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): WebglCharAtlas {\n  const newConfig = generateConfig(scaledCellWidth, scaledCellHeight, scaledCharWidth, scaledCharHeight, terminal, colors);\n\n  // Check to see if the terminal already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(terminal);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the terminal from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the terminal to the cache entry and return\n      entry.ownedBy.push(terminal);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new WebglCharAtlas(document, newConfig),\n    config: newConfig,\n    ownedBy: [terminal]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n * @param terminal The terminal to remove.\n */\nexport function removeTerminalFromCache(terminal: Terminal): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(terminal);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only terminal\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from './Types';\nimport { Attributes } from 'common/buffer/Constants';\nimport { Terminal, FontWeight } from 'xterm';\nimport { IColorSet } from 'browser/Types';\nimport { IColor } from 'common/Types';\n\nconst NULL_COLOR: IColor = {\n  css: '',\n  rgba: 0\n};\n\nexport function generateConfig(scaledCellWidth: number, scaledCellHeight: number, scaledCharWidth: number, scaledCharHeight: number, terminal: Terminal, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: NULL_COLOR,\n    cursorAccent: NULL_COLOR,\n    selectionTransparent: NULL_COLOR,\n    selectionOpaque: NULL_COLOR,\n    selectionForeground: NULL_COLOR,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(),\n    contrastCache: colors.contrastCache\n  };\n  return {\n    customGlyphs: terminal.options.customGlyphs!,\n    devicePixelRatio: window.devicePixelRatio,\n    letterSpacing: terminal.options.letterSpacing!,\n    lineHeight: terminal.options.lineHeight!,\n    scaledCellWidth,\n    scaledCellHeight,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: terminal.options.fontFamily!,\n    fontSize: terminal.options.fontSize!,\n    fontWeight: terminal.options.fontWeight as FontWeight,\n    fontWeightBold: terminal.options.fontWeightBold as FontWeight,\n    allowTransparency: terminal.options.allowTransparency!,\n    drawBoldTextInBrightColors: terminal.options.drawBoldTextInBrightColors!,\n    minimumContrastRatio: terminal.options.minimumContrastRatio!,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.customGlyphs === b.customGlyphs &&\n      a.lineHeight === b.lineHeight &&\n      a.letterSpacing === b.letterSpacing &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.drawBoldTextInBrightColors === b.drawBoldTextInBrightColors &&\n      a.minimumContrastRatio === b.minimumContrastRatio &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return (colorCode & Attributes.CM_MASK) === Attributes.CM_P16 || (colorCode & Attributes.CM_MASK) === Attributes.CM_P256;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from './Types';\nimport { DIM_OPACITY, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IRasterizedGlyph, IBoundingBox, IRasterizedGlyphSet } from '../Types';\nimport { DEFAULT_COLOR, Attributes } from 'common/buffer/Constants';\nimport { throwIfFalsy } from '../WebglUtils';\nimport { IColor } from 'common/Types';\nimport { IDisposable } from 'xterm';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { channels, color, rgba } from 'common/Color';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\nimport { excludeFromContrastRatioDemands, isPowerlineGlyph } from 'browser/renderer/RendererUtils';\n\n// For debugging purposes, it can be useful to set this to a really tiny value,\n// to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\n/**\n * The amount of the texture to be filled before throwing it away and starting\n * again. Since the throw away and individual glyph draws don't cost too much,\n * this prevent juggling multiple textures in the GL context.\n */\nconst TEXTURE_CAPACITY = Math.floor(TEXTURE_HEIGHT * 0.8);\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n/**\n * A shared object which is used to draw nothing for a particular cell.\n */\nconst NULL_RASTERIZED_GLYPH: IRasterizedGlyph = {\n  offset: { x: 0, y: 0 },\n  texturePosition: { x: 0, y: 0 },\n  texturePositionClipSpace: { x: 0, y: 0 },\n  size: { x: 0, y: 0 },\n  sizeClipSpace: { x: 0, y: 0 }\n};\n\nconst TMP_CANVAS_GLYPH_PADDING = 2;\n\nexport class WebglCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  private _cacheMap: { [code: number]: IRasterizedGlyphSet } = {};\n  private _cacheMapCombined: { [chars: string]: IRasterizedGlyphSet } = {};\n\n  // The texture that the atlas is drawn to\n  public cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  private _tmpCanvas: HTMLCanvasElement;\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // Since glyphs are expected to be around the same height, the packing\n  // strategy used it to fill a row with glyphs while keeping track of the\n  // tallest glyph in the row. Once the row is full a new row is started at\n  // (0,lastRow+lastRowTallestGlyph).\n  private _currentRowY: number = 0;\n  private _currentRowX: number = 0;\n  private _currentRowHeight: number = 0;\n\n  public hasCanvasChanged = false;\n\n  private _workBoundingBox: IBoundingBox = { top: 0, left: 0, bottom: 0, right: 0 };\n  private _workAttributeData: AttributeData = new AttributeData();\n\n  constructor(\n    document: Document,\n    private _config: ICharAtlasConfig\n  ) {\n    this.cacheCanvas = document.createElement('canvas');\n    this.cacheCanvas.width = TEXTURE_WIDTH;\n    this.cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this.cacheCanvas.getContext('2d', { alpha: true }));\n\n    this._tmpCanvas = document.createElement('canvas');\n    this._tmpCanvas.width = this._config.scaledCellWidth * 4 + TMP_CANVAS_GLYPH_PADDING * 2;\n    this._tmpCanvas.height = this._config.scaledCellHeight + TMP_CANVAS_GLYPH_PADDING * 2;\n    this._tmpCtx = throwIfFalsy(this._tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n  }\n\n  public dispose(): void {\n    if (this.cacheCanvas.parentElement) {\n      this.cacheCanvas.parentElement.removeChild(this.cacheCanvas);\n    }\n  }\n\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  private _doWarmUp(): void {\n    // Pre-fill with ASCII 33-126\n    for (let i = 33; i < 126; i++) {\n      const rasterizedGlyph = this._drawToCache(i, DEFAULT_COLOR, DEFAULT_COLOR);\n      this._cacheMap[i] = {\n        [DEFAULT_COLOR]: {\n          [DEFAULT_COLOR]: rasterizedGlyph\n        }\n      };\n    }\n  }\n\n  public beginFrame(): boolean {\n    if (this._currentRowY > TEXTURE_CAPACITY) {\n      this.clearTexture();\n      this.warmUp();\n      return true;\n    }\n    return false;\n  }\n\n  public clearTexture(): void {\n    if (this._currentRowX === 0 && this._currentRowY === 0) {\n      return;\n    }\n    this._cacheCtx.clearRect(0, 0, TEXTURE_WIDTH, TEXTURE_HEIGHT);\n    this._cacheMap = {};\n    this._cacheMapCombined = {};\n    this._currentRowHeight = 0;\n    this._currentRowX = 0;\n    this._currentRowY = 0;\n    this._didWarmUp = false;\n  }\n\n  public getRasterizedGlyphCombinedChar(chars: string, bg: number, fg: number): IRasterizedGlyph {\n    let rasterizedGlyphSet = this._cacheMapCombined[chars];\n    if (!rasterizedGlyphSet) {\n      rasterizedGlyphSet = {};\n      this._cacheMapCombined[chars] = rasterizedGlyphSet;\n    }\n    let rasterizedGlyph: IRasterizedGlyph | undefined;\n    const rasterizedGlyphSetBg = rasterizedGlyphSet[bg];\n    if (rasterizedGlyphSetBg) {\n      rasterizedGlyph = rasterizedGlyphSetBg[fg];\n    }\n    if (!rasterizedGlyph) {\n      rasterizedGlyph = this._drawToCache(chars, bg, fg);\n      if (!rasterizedGlyphSet[bg]) {\n        rasterizedGlyphSet[bg] = {};\n      }\n      rasterizedGlyphSet[bg]![fg] = rasterizedGlyph;\n    }\n    return rasterizedGlyph;\n  }\n\n  /**\n   * Gets the glyphs texture coords, drawing the texture if it's not already\n   */\n  public getRasterizedGlyph(code: number, bg: number, fg: number): IRasterizedGlyph {\n    let rasterizedGlyphSet = this._cacheMap[code];\n    if (!rasterizedGlyphSet) {\n      rasterizedGlyphSet = {};\n      this._cacheMap[code] = rasterizedGlyphSet;\n    }\n    let rasterizedGlyph: IRasterizedGlyph | undefined;\n    const rasterizedGlyphSetBg = rasterizedGlyphSet[bg];\n    if (rasterizedGlyphSetBg) {\n      rasterizedGlyph = rasterizedGlyphSetBg[fg];\n    }\n    if (!rasterizedGlyph) {\n      rasterizedGlyph = this._drawToCache(code, bg, fg);\n      if (!rasterizedGlyphSet[bg]) {\n        rasterizedGlyphSet[bg] = {};\n      }\n      rasterizedGlyphSet[bg]![fg] = rasterizedGlyph;\n    }\n    return rasterizedGlyph;\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx >= this._config.colors.ansi.length) {\n      throw new Error('No color found for idx ' + idx);\n    }\n    return this._config.colors.ansi[idx];\n  }\n\n  private _getBackgroundColor(bgColorMode: number, bgColor: number, inverse: boolean): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._getColorFromAnsiIndex(bgColor);\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(bgColor);\n        // TODO: This object creation is slow\n        return {\n          rgba: bgColor << 8,\n          css: `#${toPaddedHex(arr[0])}${toPaddedHex(arr[1])}${toPaddedHex(arr[2])}`\n        };\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.foreground;\n        }\n        return this._config.colors.background;\n    }\n  }\n\n  private _getForegroundColor(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean, excludeFromContrastRatioDemands: boolean): IColor {\n    const minimumContrastColor = this._getMinimumContrastColor(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, inverse, bold, excludeFromContrastRatioDemands);\n    if (minimumContrastColor) {\n      return minimumContrastColor;\n    }\n\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._getColorFromAnsiIndex(fgColor);\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(fgColor);\n        return rgba.toColor(arr[0], arr[1], arr[2]);\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          // Inverse should always been opaque, even when transparency is used\n          return color.opaque(this._config.colors.background);\n        }\n        return this._config.colors.foreground;\n    }\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._getColorFromAnsiIndex(bgColor).rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.foreground.rgba;\n        }\n        return this._config.colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._getColorFromAnsiIndex(fgColor).rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.background.rgba;\n        }\n        return this._config.colors.foreground.rgba;\n    }\n  }\n\n  private _getMinimumContrastColor(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean, excludeFromContrastRatioDemands: boolean): IColor | undefined {\n    if (this._config.minimumContrastRatio === 1 || excludeFromContrastRatioDemands) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._config.colors.contrastCache.getColor(bg, fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, inverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, inverse, bold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._config.minimumContrastRatio);\n\n    if (!result) {\n      this._config.colors.contrastCache.setColor(bg, fg, null);\n      return undefined;\n    }\n\n    const color = rgba.toColor(\n      (result >> 24) & 0xFF,\n      (result >> 16) & 0xFF,\n      (result >> 8) & 0xFF\n    );\n    this._config.colors.contrastCache.setColor(bg, fg, color);\n\n    return color;\n  }\n\n  private _drawToCache(code: number, bg: number, fg: number): IRasterizedGlyph;\n  private _drawToCache(chars: string, bg: number, fg: number): IRasterizedGlyph;\n  private _drawToCache(codeOrChars: number | string, bg: number, fg: number): IRasterizedGlyph {\n    const chars = typeof codeOrChars === 'number' ? String.fromCharCode(codeOrChars) : codeOrChars;\n\n    this.hasCanvasChanged = true;\n\n    // Allow 1 cell width per character, with a minimum of 2 (CJK), plus some padding. This is used\n    // to draw the glyph to the canvas as well as to restrict the bounding box search to ensure\n    // giant ligatures (eg. =====>) don't impact overall performance.\n    const allowedWidth = this._config.scaledCellWidth * Math.max(chars.length, 2) + TMP_CANVAS_GLYPH_PADDING * 2;\n    if (this._tmpCanvas.width < allowedWidth) {\n      this._tmpCanvas.width = allowedWidth;\n    }\n    // Include line height when drawing glyphs\n    const allowedHeight = this._config.scaledCellHeight + TMP_CANVAS_GLYPH_PADDING * 2;\n    if (this._tmpCanvas.height < allowedHeight) {\n      this._tmpCanvas.height = allowedHeight;\n    }\n    this._tmpCtx.save();\n\n    this._workAttributeData.fg = fg;\n    this._workAttributeData.bg = bg;\n\n    const invisible = !!this._workAttributeData.isInvisible();\n    if (invisible) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const bold = !!this._workAttributeData.isBold();\n    const inverse = !!this._workAttributeData.isInverse();\n    const dim = !!this._workAttributeData.isDim();\n    const italic = !!this._workAttributeData.isItalic();\n    const underline = !!this._workAttributeData.isUnderline();\n    const strikethrough = !!this._workAttributeData.isStrikethrough();\n    let fgColor = this._workAttributeData.getFgColor();\n    let fgColorMode = this._workAttributeData.getFgColorMode();\n    let bgColor = this._workAttributeData.getBgColor();\n    let bgColorMode = this._workAttributeData.getBgColorMode();\n    if (inverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(bgColorMode, bgColor, inverse);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    const powerLineGlyph = chars.length === 1 && isPowerlineGlyph(chars.charCodeAt(0));\n    const foregroundColor = this._getForegroundColor(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, inverse, bold, excludeFromContrastRatioDemands(chars.charCodeAt(0)));\n    this._tmpCtx.fillStyle = foregroundColor.css;\n\n    // Apply alpha to dim the character\n    if (dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n\n    // For powerline glyphs left/top padding is excluded (https://github.com/microsoft/vscode/issues/120129)\n    const padding = powerLineGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING;\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._config.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._tmpCtx, chars, padding, padding, this._config.scaledCellWidth, this._config.scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._tmpCtx.fillText(chars, padding, padding + this._config.scaledCharHeight);\n    }\n\n    // If this charcater is underscore and beyond the cell bounds, shift it up until it is visible,\n    // try for a maximum of 5 pixels.\n    if (chars === '_' && !this._config.allowTransparency) {\n      let isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.scaledCellWidth, this._config.scaledCellHeight), backgroundColor, foregroundColor, this._config.allowTransparency);\n      if (isBeyondCellBounds) {\n        for (let offset = 1; offset <= 5; offset++) {\n          this._tmpCtx.clearRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n          this._tmpCtx.fillText(chars, padding, padding + this._config.scaledCharHeight - offset);\n          isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.scaledCellWidth, this._config.scaledCellHeight), backgroundColor, foregroundColor, this._config.allowTransparency);\n          if (!isBeyondCellBounds) {\n            break;\n          }\n        }\n      }\n    }\n\n    // Draw underline and strikethrough\n    if (underline || strikethrough) {\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize / 10));\n      const yOffset = this._tmpCtx.lineWidth % 2 === 1 ? 0.5 : 0; // When the width is odd, draw at 0.5 position\n      this._tmpCtx.lineWidth = lineWidth;\n      this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      this._tmpCtx.beginPath();\n      if (underline) {\n        this._tmpCtx.moveTo(padding, padding + this._config.scaledCharHeight - yOffset);\n        this._tmpCtx.lineTo(padding + this._config.scaledCharWidth, padding + this._config.scaledCharHeight - yOffset);\n      }\n      if (strikethrough) {\n        this._tmpCtx.moveTo(padding, padding + Math.floor(this._config.scaledCharHeight / 2) - yOffset);\n        this._tmpCtx.lineTo(padding + this._config.scaledCharWidth, padding + Math.floor(this._config.scaledCharHeight / 2) - yOffset);\n      }\n      this._tmpCtx.stroke();\n      this._tmpCtx.closePath();\n    }\n\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._tmpCanvas.width, this._tmpCanvas.height\n    );\n\n    // Clear out the background color and determine if the glyph is empty.\n    const isEmpty = clearColor(imageData, backgroundColor, foregroundColor, this._config.allowTransparency);\n\n    // Handle empty glyphs\n    if (isEmpty) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const rasterizedGlyph = this._findGlyphBoundingBox(imageData, this._workBoundingBox, allowedWidth, powerLineGlyph, drawSuccess);\n    const clippedImageData = this._clipImageData(imageData, this._workBoundingBox);\n\n    // Check if there is enough room in the current row and go to next if needed\n    if (this._currentRowX + rasterizedGlyph.size.x > TEXTURE_WIDTH) {\n      this._currentRowX = 0;\n      this._currentRowY += this._currentRowHeight;\n      this._currentRowHeight = 0;\n    }\n\n    // Record texture position\n    rasterizedGlyph.texturePosition.x = this._currentRowX;\n    rasterizedGlyph.texturePosition.y = this._currentRowY;\n    rasterizedGlyph.texturePositionClipSpace.x = this._currentRowX / TEXTURE_WIDTH;\n    rasterizedGlyph.texturePositionClipSpace.y = this._currentRowY / TEXTURE_HEIGHT;\n\n    // Update atlas current row\n    this._currentRowHeight = Math.max(this._currentRowHeight, rasterizedGlyph.size.y);\n    this._currentRowX += rasterizedGlyph.size.x;\n\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(clippedImageData, rasterizedGlyph.texturePosition.x, rasterizedGlyph.texturePosition.y);\n\n    return rasterizedGlyph;\n  }\n\n  /**\n   * Given an ImageData object, find the bounding box of the non-transparent\n   * portion of the texture and return an IRasterizedGlyph with these\n   * dimensions.\n   * @param imageData The image data to read.\n   * @param boundingBox An IBoundingBox to put the clipped bounding box values.\n   */\n  private _findGlyphBoundingBox(imageData: ImageData, boundingBox: IBoundingBox, allowedWidth: number, restrictedGlyph: boolean, customGlyph: boolean): IRasterizedGlyph {\n    boundingBox.top = 0;\n    const height = restrictedGlyph ? this._config.scaledCellHeight : this._tmpCanvas.height;\n    const width = restrictedGlyph ? this._config.scaledCharWidth : allowedWidth;\n    let found = false;\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.top = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.left = 0;\n    found = false;\n    for (let x = 0; x < width; x++) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.left = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.right = width;\n    found = false;\n    for (let x = width - 1; x >= 0; x--) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.right = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.bottom = height;\n    found = false;\n    for (let y = height - 1; y >= 0; y--) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.bottom = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    return {\n      texturePosition: { x: 0, y: 0 },\n      texturePositionClipSpace: { x: 0, y: 0 },\n      size: {\n        x: boundingBox.right - boundingBox.left + 1,\n        y: boundingBox.bottom - boundingBox.top + 1\n      },\n      sizeClipSpace: {\n        x: (boundingBox.right - boundingBox.left + 1) / TEXTURE_WIDTH,\n        y: (boundingBox.bottom - boundingBox.top + 1) / TEXTURE_HEIGHT\n      },\n      offset: {\n        x: -boundingBox.left + (restrictedGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING) + (customGlyph ? Math.floor(this._config.letterSpacing / 2) : 0),\n        y: -boundingBox.top + (restrictedGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING) + (customGlyph ? this._config.lineHeight === 1 ? 0 : Math.round((this._config.scaledCellHeight - this._config.scaledCharHeight) / 2) : 0)\n      }\n    };\n  }\n\n  private _clipImageData(imageData: ImageData, boundingBox: IBoundingBox): ImageData {\n    const width = boundingBox.right - boundingBox.left + 1;\n    const height = boundingBox.bottom - boundingBox.top + 1;\n    const clippedData = new Uint8ClampedArray(width * height * 4);\n    for (let y = boundingBox.top; y <= boundingBox.bottom; y++) {\n      for (let x = boundingBox.left; x <= boundingBox.right; x++) {\n        const oldOffset = y * this._tmpCanvas.width * 4 + x * 4;\n        const newOffset = (y - boundingBox.top) * width * 4 + (x - boundingBox.left) * 4;\n        clippedData[newOffset] = imageData.data[oldOffset];\n        clippedData[newOffset + 1] = imageData.data[oldOffset + 1];\n        clippedData[newOffset + 2] = imageData.data[oldOffset + 2];\n        clippedData[newOffset + 3] = imageData.data[oldOffset + 3];\n      }\n    }\n    return new ImageData(clippedData, width, height);\n  }\n}\n\n/**\n * Makes a particular rgb color and colors that are nearly the same in an ImageData completely\n * transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, bg: IColor, fg: IColor, allowTransparency: boolean): boolean {\n  // Get color channels\n  const r = bg.rgba >>> 24;\n  const g = bg.rgba >>> 16 & 0xFF;\n  const b = bg.rgba >>> 8 & 0xFF;\n  const fgR = fg.rgba >>> 24;\n  const fgG = fg.rgba >>> 16 & 0xFF;\n  const fgB = fg.rgba >>> 8 & 0xFF;\n\n  // Calculate a threshold that when below a color will be treated as transpart when the sum of\n  // channel value differs. This helps improve rendering when glyphs overlap with others. This\n  // threshold is calculated relative to the difference between the background and foreground to\n  // ensure important details of the glyph are always shown, even when the contrast ratio is low.\n  // The number 12 is largely arbitrary to ensure the pixels that escape the cell in the test case\n  // were covered (fg=#8ae234, bg=#c4a000).\n  const threshold = Math.floor((Math.abs(r - fgR) + Math.abs(g - fgG) + Math.abs(b - fgB)) / 12);\n\n  // Set alpha channel of relevent pixels to 0\n  let isEmpty = true;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      // Check the threshold only when transparency is not allowed only as overlapping isn't an\n      // issue for transparency glyphs.\n      if (!allowTransparency &&\n          (Math.abs(imageData.data[offset] - r) +\n          Math.abs(imageData.data[offset + 1] - g) +\n          Math.abs(imageData.data[offset + 2] - b)) < threshold) {\n        imageData.data[offset + 3] = 0;\n      } else {\n        isEmpty = false;\n      }\n    }\n  }\n\n  return isEmpty;\n}\n\nfunction toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderLayer } from './Types';\nimport { acquireCharAtlas } from '../atlas/CharAtlasCache';\nimport { Terminal } from 'xterm';\nimport { IColorSet } from 'browser/Types';\nimport { TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { WebglCharAtlas } from 'atlas/WebglCharAtlas';\nimport { throwIfFalsy } from '../WebglUtils';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: WebglCharAtlas | undefined;\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._canvas.remove();\n    if (this._charAtlas) {\n      this._charAtlas.dispose();\n    }\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(terminal: Terminal): void {}\n  public onBlur(terminal: Terminal): void {}\n  public onFocus(terminal: Terminal): void {}\n  public onCursorMove(terminal: Terminal): void {}\n  public onGridChanged(terminal: Terminal, startRow: number, endRow: number): void {}\n  public onSelectionChanged(terminal: Terminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(terminal: Terminal, colorSet: IColorSet): void {\n    this._refreshCharAtlas(terminal, colorSet);\n  }\n\n  protected _setTransparency(terminal: Terminal, alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(terminal, this._colors);\n    this.onGridChanged(terminal, 0, terminal.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param terminal The terminal.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(terminal: Terminal, colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(terminal, colorSet, this._scaledCellWidth, this._scaledCellHeight, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(terminal, this._colors);\n  }\n\n  public abstract reset(terminal: Terminal): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param terminal The terminal.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(terminal: Terminal, cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(terminal, false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(terminal, y);\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param terminal The terminal.\n   * @param y The row to clip.\n   */\n  private _clipRow(terminal: Terminal, y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      terminal.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param terminal The terminal.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(terminal: Terminal, isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? terminal.options.fontWeightBold : terminal.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${terminal.options.fontSize! * window.devicePixelRatio}px ${terminal.options.fontFamily}`;\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal } from 'xterm';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet, ITerminal } from 'browser/Types';\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { IEventEmitter } from 'common/EventEmitter';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (terminal: Terminal, x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    terminal: Terminal,\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    private readonly _terminal: ITerminal,\n    private _onRequestRefreshRowsEvent: IEventEmitter<IRequestRedrawEvent>\n  ) {\n    super(container, 'cursor', zIndex, true, colors);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    this.onOptionsChanged(terminal);\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(terminal: Terminal): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation(terminal);\n    this.onOptionsChanged(terminal);\n  }\n\n  public onBlur(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public onFocus(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.resume(terminal);\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public onOptionsChanged(terminal: Terminal): void {\n    if (terminal.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(terminal, () => {\n          this._render(terminal, true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public onCursorMove(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation(terminal);\n  }\n\n  public onGridChanged(terminal: Terminal, startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(terminal, false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation(terminal);\n    }\n  }\n\n  private _render(terminal: Terminal, triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    // TODO: Need to expose API for this\n    if (!this._terminal.coreService.isCursorInitialized || this._terminal.coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = terminal.buffer.active.baseY + terminal.buffer.active.cursorY;\n    const viewportRelativeCursorY = cursorY - terminal.buffer.active.viewportY;\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(terminal.buffer.active.cursorX, terminal.cols - 1);\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= terminal.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // TODO: Need fast buffer API for loading cell\n    (terminal as any)._core.buffer.lines.get(cursorY).loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!isTerminalFocused(terminal)) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = terminal.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](terminal, cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(terminal, cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle!;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === isTerminalFocused(terminal) &&\n          this._state.style === terminal.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[terminal.options.cursorStyle || 'block'](terminal, cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = terminal.options.cursorStyle!;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (window.devicePixelRatio < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, terminal.options.cursorWidth!);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(terminal, cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    terminal: Terminal,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isTerminalFocused(terminal)) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(terminal: Terminal): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(terminal: Terminal): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation(terminal);\n  }\n}\n\nfunction isTerminalFocused(terminal: Terminal): boolean {\n  return document.activeElement === terminal.textarea && document.hasFocus();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal } from 'xterm';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from '../atlas/CharAtlasUtils';\nimport { ITerminal, IColorSet, ILinkifierEvent } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet, terminal: ITerminal) {\n    super(container, 'link', zIndex, true, colors);\n    terminal.linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    terminal.linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    terminal.linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    terminal.linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(terminal: Terminal): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg !== undefined && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg!].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 9, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 4, y: 0, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * @param xp The percentage of 15% of the x axis.\n * @param yp The percentage of 15% of the x axis on the y axis.\n */\ntype DrawFunctionDefinition = (xp: number, yp: number) => string;\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | DrawFunctionDefinition } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 + (yp / .15 * .5)} C.5,${.5 + (yp / .15 * .5)},.5,.5,1,.5` },\n  '╮': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 + (yp / .15 * .5)} C.5,${.5 + (yp / .15 * .5)},.5,.5,0,.5` },\n  '╯': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - (yp / .15 * .5)} C.5,${.5 - (yp / .15 * .5)},.5,.5,0,.5` },\n  '╰': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - (yp / .15 * .5)} C.5,${.5 - (yp / .15 * .5)},.5,.5,1,.5` }\n};\n\ninterface IVectorShape {\n  d: string;\n  type: VectorType;\n  /** Padding to apply to the vector's x axis in CSS pixels. */\n  horizontalPadding?: number;\n}\n\nconst enum VectorType {\n  FILL,\n  STROKE\n}\n\n/**\n * This contains the definitions of the primarily used box drawing characters as vector shapes. The\n * reason these characters are defined specially is to avoid common problems if a user's font has\n * not been patched with powerline characters and also to get pixel perfect rendering as rendering\n * issues can occur around AA/SPAA.\n *\n * Original symbols defined in https://github.com/powerline/fontpatcher\n */\nexport const powerlineDefinitions: { [index: string]: IVectorShape } = {\n  // Right triangle solid\n  '\\u{E0B0}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.FILL },\n  // Right triangle line\n  '\\u{E0B1}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.STROKE, horizontalPadding: 0.5 },\n  // Left triangle solid\n  '\\u{E0B2}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.FILL },\n  // Left triangle line\n  '\\u{E0B3}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.STROKE, horizontalPadding: 0.5 },\n  // Right semi-circle solid,\n  '\\u{E0B4}': { d: 'M0,0 L0,1 C0.552,1,1,0.776,1,.5 C1,0.224,0.552,0,0,0', type: VectorType.FILL },\n  // Right semi-circle line,\n  '\\u{E0B5}': { d: 'M0,1 C0.552,1,1,0.776,1,.5 C1,0.224,0.552,0,0,0', type: VectorType.STROKE },\n  // Left semi-circle solid,\n  '\\u{E0B6}': { d: 'M1,0 L1,1 C0.448,1,0,0.776,0,.5 C0,0.224,0.448,0,1,0', type: VectorType.FILL },\n  // Left semi-circle line,\n  '\\u{E0B7}': { d: 'M1,1 C0.448,1,0,0.776,0,.5 C0,0.224,0.448,0,1,0', type: VectorType.STROKE }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const powerlineDefinition = powerlineDefinitions[c];\n  if (powerlineDefinition) {\n    drawPowerlineChar(ctx, powerlineDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.slice(1, 3), 16);\n      g = parseInt(fillStyle.slice(3, 5), 16);\n      b = parseInt(fillStyle.slice(5, 7), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.slice(7, 9), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = window.devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction drawPowerlineChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IVectorShape,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.beginPath();\n  ctx.lineWidth = window.devicePixelRatio;\n  for (const instruction of charDefinition.d.split(' ')) {\n    const type = instruction[0];\n    const f = svgToCanvasInstructionMap[type];\n    if (!f) {\n      console.error(`Could not find drawing instructions for \"${type}\"`);\n      continue;\n    }\n    const args: string[] = instruction.substring(1).split(',');\n    if (!args[0] || !args[1]) {\n      continue;\n    }\n    f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset, charDefinition.horizontalPadding));\n  }\n  if (charDefinition.type === VectorType.STROKE) {\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.stroke();\n  } else {\n    ctx.fill();\n  }\n  ctx.closePath();\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number, horizontalPadding: number = 0): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth - (horizontalPadding * 2 * window.devicePixelRatio);\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset + (horizontalPadding * window.devicePixelRatio);\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <=  0xE0D6;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return (0x2500 <= codepoint && codepoint <= 0x259F);\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorRGB } from 'common/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    if (css.match(/#[0-9a-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor(r, g, b);\n        }\n        case 5: { // #rgba\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          const a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor(r, g, b, a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) { // rgb() or rgba()\n      const r = parseInt(rgbaMatch[1]);\n      const g = parseInt(rgbaMatch[2]);\n      const b = parseInt(rgbaMatch[3]);\n      const a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor(r, g, b, a);\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, bgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, bgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon, IEvent } from 'xterm';\nimport { WebglRenderer } from './WebglRenderer';\nimport { ICharacterJoinerService, IRenderService } from 'browser/services/Services';\nimport { IColorSet } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { isSafari } from 'common/Platform';\nimport { IDecorationService } from 'common/services/Services';\n\nexport class WebglAddon implements ITerminalAddon {\n  private _terminal?: Terminal;\n  private _renderer?: WebglRenderer;\n  private _onContextLoss = new EventEmitter<void>();\n  public get onContextLoss(): IEvent<void> { return this._onContextLoss.event; }\n\n  constructor(\n    private _preserveDrawingBuffer?: boolean\n  ) {}\n\n  public activate(terminal: Terminal): void {\n    if (!terminal.element) {\n      throw new Error('Cannot activate WebglAddon before Terminal.open');\n    }\n    if (isSafari) {\n      throw new Error('Webgl is not currently supported on Safari');\n    }\n    this._terminal = terminal;\n    const renderService: IRenderService = (terminal as any)._core._renderService;\n    const characterJoinerService: ICharacterJoinerService = (terminal as any)._core._characterJoinerService;\n    const decorationService: IDecorationService = (terminal as any)._core._decorationService;\n    const colors: IColorSet = (terminal as any)._core._colorManager.colors;\n    this._renderer = new WebglRenderer(terminal, colors, characterJoinerService, decorationService, this._preserveDrawingBuffer);\n    this._renderer.onContextLoss(() => this._onContextLoss.fire());\n    renderService.setRenderer(this._renderer);\n  }\n\n  public dispose(): void {\n    if (!this._terminal) {\n      throw new Error('Cannot dispose WebglAddon because it is activated');\n    }\n    const renderService: IRenderService = (this._terminal as any)._core._renderService;\n    renderService.setRenderer((this._terminal as any)._core._createRenderer());\n    renderService.onResize(this._terminal.cols, this._terminal.rows);\n    this._renderer?.dispose();\n    this._renderer = undefined;\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._renderer?.textureAtlas;\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearCharAtlas();\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","self","INDICES_PER_CELL","BYTES_PER_CELL","Float32Array","BYTES_PER_ELEMENT","_terminal","_colors","_gl","_dimensions","_activeBuffer","_vertices","count","attributes","attributesBuffers","gl","_program","throwIfFalsy","createProgram","register","toDisposable","deleteProgram","_projectionLocation","getUniformLocation","_resolutionLocation","_textureLocation","_vertexArrayObject","createVertexArray","bindVertexArray","unitQuadVertices","unitQuadVerticesBuffer","createBuffer","deleteBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","unitQuadElementIndices","Uint8Array","elementIndicesBuffer","ELEMENT_ARRAY_BUFFER","_attributesBuffer","vertexAttribDivisor","_atlasTexture","createTexture","deleteTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","onResize","beginFrame","this","_atlas","updateCell","x","y","code","bg","fg","chars","lastBg","_updateCell","array","rasterizedGlyph","i","cols","NULL_CELL_CODE","undefined","length","getRasterizedGlyphCombinedChar","getRasterizedGlyph","offset","clippedPixels","scaledCharLeft","scaledCharTop","size","scaledCanvasWidth","scaledCanvasHeight","texturePositionClipSpace","cacheCanvas","width","sizeClipSpace","fill","clear","force","terminal","newCount","rows","viewport","canvas","height","setColors","render","renderModel","useProgram","activeBuffer","bufferLength","lineLengths","si","sub","subarray","set","STREAM_DRAW","hasCanvasChanged","uniform1i","activeTexture","TEXTURE0","generateMipmap","uniformMatrix4fv","PROJECTION_MATRIX","uniform2f","drawElementsInstanced","TRIANGLES","setAtlas","atlas","setDimensions","dimensions","Disposable","GlyphRenderer","BYTES_PER_RECTANGLE","_updateCachedColors","DYNAMIC_DRAW","_updateViewportRectangle","_bgFloat","_colorToFloat32Array","background","_addRectangleFloat","scaledCellWidth","scaledCellHeight","updateBackgrounds","model","vertices","rectangleCount","currentStartX","currentBg","currentFg","currentInverse","modelIndex","RENDER_MODEL_INDICIES_PER_CELL","cells","RENDER_MODEL_BG_OFFSET","RENDER_MODEL_FG_OFFSET","inverse","_updateRectangle","startX","endX","rgba","ansi","foreground","expandFloat32Array","x1","y1","r","g","b","_addRectangle","a","color","RectangleRenderer","COMBINED_CHAR_BIT_MASK","Uint32Array","selection","hasSelection","columnSelectMode","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startCol","endCol","resize","indexCount","clearSelection","RenderModel","_characterJoinerService","_decorationService","preserveDrawingBuffer","_model","_workCell","CellData","_workColors","_onRequestRedraw","EventEmitter","_onContextLoss","_core","_renderLayers","LinkRenderLayer","screenElement","CursorRenderLayer","scaledCharWidth","scaledCharHeight","canvasWidth","canvasHeight","actualCellWidth","actualCellHeight","_devicePixelRatio","window","devicePixelRatio","_updateDimensions","_canvas","document","createElement","contextAttributes","antialias","depth","getContext","Error","addDisposableDomListener","e","fire","appendChild","_rectangleRenderer","_glyphRenderer","onCharSizeChanged","_isAttached","body","contains","event","dispose","parentElement","removeChild","removeTerminalFromCache","_charAtlas","colors","l","reset","_refreshCharAtlas","onDevicePixelRatioChange","style","onBlur","onFocus","onSelectionChanged","start","end","_updateSelectionModel","_requestRedrawViewport","onCursorMove","onOptionsChanged","acquireCharAtlas","warmUp","clearCharAtlas","clearTexture","_updateModel","registerCharacterJoiner","handler","deregisterCharacterJoiner","joinerId","renderRows","_charSizeService","onGridChanged","cell","row","buffer","ydisp","line","lines","get","joinedRanges","getJoinedCharacters","loadCell","isJoined","lastCharX","range","shift","JoinedCellData","translateToString","getChars","getCode","_loadColorsForCell","j","NULL_CELL_CHAR","bgOverride","fgOverride","getDecorationsAtCell","d","backgroundColorRGB","foregroundColorRGB","_isCellSelected","selectionOpaque","selectionForeground","active","viewportY","Math","max","min","floor","ceil","options","lineHeight","round","letterSpacing","WebglRenderer","firstCell","content","combinedData","_width","isCombined","getWidth","setFromCharData","value","getAsCharData","AttributeData","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","deleteShader","vertexSource","fragmentSource","program","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","newLength","newArray","charAtlasCache","newConfig","generateConfig","ownedByIndex","entry","ownedBy","indexOf","configEquals","config","splice","push","newEntry","WebglCharAtlas","index","NULL_COLOR","css","clonedColors","cursor","cursorAccent","selectionTransparent","slice","contrastCache","customGlyphs","fontFamily","fontSize","fontWeight","fontWeightBold","allowTransparency","drawBoldTextInBrightColors","minimumContrastRatio","colorCode","TEXTURE_WIDTH","TEXTURE_HEIGHT","TEXTURE_CAPACITY","TRANSPARENT_COLOR","NULL_RASTERIZED_GLYPH","texturePosition","_config","_didWarmUp","_cacheMap","_cacheMapCombined","_currentRowY","_currentRowX","_currentRowHeight","_workBoundingBox","top","left","bottom","right","_workAttributeData","_cacheCtx","alpha","_tmpCanvas","TMP_CANVAS_GLYPH_PADDING","_tmpCtx","_doWarmUp","_drawToCache","DEFAULT_COLOR","clearRect","rasterizedGlyphSet","rasterizedGlyphSetBg","_getColorFromAnsiIndex","idx","_getBackgroundColor","bgColorMode","bgColor","arr","toColorRGB","toPaddedHex","_getForegroundColor","fgColorMode","fgColor","bold","excludeFromContrastRatioDemands","minimumContrastColor","_getMinimumContrastColor","toColor","opaque","_resolveBackgroundRgba","_resolveForegroundRgba","adjustedColor","getColor","bgRgba","fgRgba","result","ensureContrastRatio","setColor","codeOrChars","String","fromCharCode","allowedWidth","allowedHeight","save","isInvisible","isBold","isInverse","dim","isDim","italic","isItalic","underline","isUnderline","strikethrough","isStrikethrough","getFgColor","getFgColorMode","getBgColor","getBgColorMode","temp","temp2","backgroundColor","globalCompositeOperation","fillStyle","fillRect","fontStyle","font","textBaseline","TEXT_BASELINE","powerLineGlyph","isPowerlineGlyph","charCodeAt","foregroundColor","globalAlpha","DIM_OPACITY","padding","drawSuccess","tryDrawCustomChar","fillText","isBeyondCellBounds","clearColor","getImageData","lineWidth","yOffset","strokeStyle","beginPath","moveTo","lineTo","stroke","closePath","restore","imageData","_findGlyphBoundingBox","clippedImageData","_clipImageData","putImageData","boundingBox","restrictedGlyph","customGlyph","found","alphaOffset","data","clippedData","Uint8ClampedArray","oldOffset","newOffset","ImageData","fgR","fgG","fgB","threshold","abs","isEmpty","c","s","toString","_container","id","zIndex","_alpha","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","classList","add","_initCanvas","remove","_ctx","_clearAll","startRow","endRow","colorSet","_setTransparency","oldCanvas","cloneNode","replaceChild","_fillCells","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","strokeRect","_clearCells","_fillCharTrueColor","_getFont","_clipRow","rect","clip","BaseRenderLayer","BLINK_INTERVAL","container","_onRequestRefreshRowsEvent","_cell","_state","isFocused","_cursorRenderers","_renderBarCursor","bind","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","restartBlinkAnimation","pause","cursorY","resume","cursorBlink","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","coreService","isCursorInitialized","isCursorHidden","baseY","viewportRelativeCursorY","cursorX","isTerminalFocused","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","_renderCallback","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","clearTimeout","_animationFrame","cancelAnimationFrame","_animationTimeRestarted","Date","now","requestAnimationFrame","timeToStart","setTimeout","time","setInterval","activeElement","textarea","hasFocus","linkifier","onShowLinkUnderline","_onShowLinkUnderline","onHideLinkUnderline","_onHideLinkUnderline","linkifier2","_clearCurrentLink","middleRowCount","y2","x2","INVERTED_DEFAULT_COLOR","is256Color","node","addEventListener","disposed","removeEventListener","blockElementDefinitions","w","h","patternCharacterDefinitions","boxDrawingDefinitions","xp","yp","powerlineDefinitions","horizontalPadding","ctx","xOffset","blockElementDefinition","charDefinition","box","xEighth","yEighth","drawBlockElementChar","patternDefinition","patternSet","cachedPatterns","Map","pattern","tmpCanvas","tmpCtx","startsWith","parseInt","substring","split","map","parseFloat","createPattern","drawPatternChar","boxDrawingDefinition","Object","entries","instructions","Number","actualInstructions","instruction","f","svgToCanvasInstructionMap","args","translateArgs","drawBoxDrawingChar","powerlineDefinition","drawPowerlineChar","clamp","bezierCurveTo","cellWidth","cellHeight","codepoint","isBoxOrBlockGlyph","isFirefox","isLegacyEdge","CHAR_ATLAS_CELL_SPACING","channels","rgb","contrastRatio","l1","l2","toCss","toRgba","blend","bgR","bgG","bgB","isOpaque","ratio","rgbaColor","toChannels","opacity","match","repeat","rgbaMatch","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","cr","increaseLuminance","bgL","fgL","resultB","resultA","resultARatio","_listeners","_disposed","_event","listener","arg1","arg2","queue","call","from","to","_disposables","_isDisposed","unregister","disposeArray","disposables","isNode","navigator","userAgent","platform","includes","isSafari","test","isMac","isIpad","isIphone","isWindows","isLinux","fillFallback","constructor","extended","ExtendedAttrs","fromColorRGB","clone","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","hasExtendedAttrs","updateExtended","getUnderlineColor","underlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","underlineStyle","fromCharData","obj","stringFromCodePoint","CHAR_DATA_ATTR_INDEX","combined","CHAR_DATA_CHAR_INDEX","second","CHAR_DATA_WIDTH_INDEX","DEFAULT_ATTR","CHAR_DATA_CODE_INDEX","NULL_CELL_WIDTH","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","codePoint","_interim","decode","input","target","startPos","StringToUtf32","interim","byte1","byte2","byte3","byte4","discardInterim","cp","pos","tmp","missing","fourStop","Utf8ToUtf32","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","_preserveDrawingBuffer","activate","element","renderService","_renderService","characterJoinerService","decorationService","_colorManager","_renderer","onContextLoss","setRenderer","_createRenderer","textureAtlas","clearTextureAtlas","WebglAddon"],"sourceRoot":""}