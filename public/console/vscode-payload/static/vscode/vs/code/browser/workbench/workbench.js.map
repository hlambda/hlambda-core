{"version":3,"sources":["out-vscode-web/vs/code/browser/workbench/fake","out-vscode-web/vs/code/browser/workbench/file:/Users/fezhang/workspace/github/github1s/vscode-web/lib/vscode/src/vs/code/browser/workbench/workbench.ts"],"sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { create, IWorkbenchConstructionOptions, IWorkspaceProvider, UriComponents } from 'vs/workbench/workbench.web.main';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { env } from 'vs/workbench/browser/web.factory';\nimport { URI } from 'vs/base/common/uri';\n\n// same as vscode-web/src/vs/workbench/services/extensionManagement/browser/builtinExtensionsScannerService.ts\ninterface IBundledExtension {\n\textensionPath: string;\n\tpackageJSON: IExtensionManifest;\n\tpackageNLS?: any;\n\treadmePath?: string;\n\tchangelogPath?: string;\n}\n\ndeclare global {\n\tinterface Window {\n\t\tvscodeWeb?: Partial<IWorkbenchConstructionOptions> & {\n\t\t\tfolderUri?: UriComponents; // easy way to build single folder workspace\n\t\t\tworkspaceId?: string; // the identifier to distinguish workspace\n\t\t\tworkspaceLabel?: string; // the label shown on explorer\n\t\t\thideTextFileReadonlyIcon?: boolean; // if hide the readonly icon for readonly files\n\t\t\t// custom builtin extensions\n\t\t\tbuiltinExtensions?: IBundledExtension[] | ((builtinExtensions: IBundledExtension[]) => IBundledExtension[]);\n\t\t\tlogo?: { // custom editor logo, hide logo if this is undefined\n\t\t\t\ticon?: string; // logo icon image url\n\t\t\t\ttitle?: string; // logo title\n\t\t\t\tonClick?: () => void; // logo click callback\n\t\t\t};\n\t\t\t// descripbe how to open other workspace,\n\t\t\t// only worked when folderUri is defined\n\t\t\topenWorkspace?: IWorkspaceProvider['open'];\n\t\t\tonWorkbenchReady?: (scheme: string) => void; // workbench ready callback\n\t\t};\n\t}\n}\n\n(function () {\n\tconst workspaceProvider: IWorkspaceProvider | undefined = window?.vscodeWeb?.folderUri ? {\n\t\ttrusted: true,\n\t\tworkspace: { folderUri: URI.from(window.vscodeWeb.folderUri) },\n\t\topen: window.vscodeWeb?.openWorkspace || (() => Promise.resolve(false)),\n\t} : undefined;\n\n\t// Create workbench\n\tcreate(document.body, { workspaceProvider, ...window.vscodeWeb });\n\tenv.getUriScheme().then(scheme => window.vscodeWeb?.onWorkbenchReady?.(scheme));\n})();\n"],"mappings":"AAAA;;4DAAA,AAAA,WAAA,CACA,GAAA,GAAA,CAAA,sCAAA,UAAA,UAAA,kCAAA,mCAAA,sBACA,EAAA,SAAA,EAAA,CAEA,OADA,GAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,EAAA,GAAA,EAAA,EAAA,IAEA,MAAA,iHCkCC,UAAA,CACA,KAAM,GAAoD,QAAQ,WAAW,UAAY,CACxF,QAAS,GACT,UAAW,CAAE,UAAW,EAAA,IAAI,KAAK,OAAO,UAAU,YAClD,KAAM,OAAO,WAAW,eAAkB,KAAM,QAAQ,QAAQ,MAC7D,OAGJ,AAAA,ADjDD,GCiDC,EAAA,QAAO,SAAS,KAAM,CAAE,uBAAsB,OAAO,YACrD,EAAA,IAAI,eAAe,KAAK,GAAU,OAAO,WAAW,mBAAmB,WDlDxE,KAAA","names":[],"file":"workbench.js"}