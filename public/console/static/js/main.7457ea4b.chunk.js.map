{"version":3,"sources":["hooks/useLocalStorage.js","context/basicAuthContext.js","components/login/Login.js","components/logout/Logout.js","components/not-found/NotFound.js","utils/getSessionStorageOrDefault.js","components/banner/Banner.js","components/top-bar/index.js","components/copy-to-clipboard/CopyToClipboard.js","views/Home.js","components/my-terminal/index.js","views/Commands.js","components/editor/FileSystemNavigator.js","components/editor/Editor.js","views/Configuration.js","views/Routes.js","views/Logs.js","views/Constants.js","views/Errors.js","views/Events.js","views/Metadata.js","views/Settings.js","views/Docs.js","views/News.js","views/VsCodeWebPage.js","App.js","reportWebVitals.js","theme/index.js","index.js"],"names":["PREFIX","process","useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","error","console","log","toLowerCase","value","setValue","useEffect","setItem","stringify","AuthContext","React","createContext","AuthProvider","children","memoryType","setMemoryType","tokenInMem","setTokenInMem","tokenInLocalStorage","setTokenInLocalStorage","signin","newToken","rememberInThisBrowser","signout","setToken","verifySession","insertedToken","axios","get","headers","then","response","catch","data","message","toast","results","getToken","Provider","useAuth","useContext","Login","loading","setLoading","setRememberInThisBrowser","navigate","useNavigate","auth","showPassword","setShowPassword","_handleSubmit","event","preventDefault","FormData","currentTarget","_handleRememberInThisBrowserChange","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","Typography","variant","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","name","label","type","id","autoComplete","defaultValue","InputProps","endAdornment","InputAdornment","position","IconButton","onMouseDown","FormControlLabel","control","Checkbox","checked","color","onChange","Button","mb","disabled","CircularProgress","size","Grid","container","item","xs","Link","href","target","rel","Divider","padding","align","fontWeight","Logout","setTimeout","NotFound","onClick","getSessionStorageOrDefault","stored","sessionStorage","Banner","props","checkVersionResult","setCheckVersionResult","checkBannerResult","setCheckBannerResult","hidden","setHidden","newVersionLastCheckTimestamp","setNewVersionLastCheckTimestamp","useFetch","post","checkBanner","ok","checkVersion","Date","now","foundNewerVersion","style","right","bottom","width","zIndex","textAlign","backgroundColor","boxSizing","noWrap","latestVersion","enabled","pages","url","ResponsiveAppBar","anchorElNav","setAnchorElNav","serverVersion","setServerVersion","handleCloseNavMenu","getServerVersion","AppBar","Toolbar","disableGutters","mr","md","flexGrow","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","MenuItem","my","marginRight","success","CopyToClipboard","copyText","isCopied","setIsCopied","copyTextToClipboard","text","navigator","clipboard","writeText","document","execCommand","Alert","icon","fontSize","severity","textToCopy","err","StyledPreCodeTag","styled","theme","Home","logs","setLogs","autoScroll","setAutoScroll","showSecretInCommand","setShowSecretInCommand","timestampOnRender","codeRef","useRef","getLogs","ansi_up","AnsiUp","html","ansi_to_html","current","scrollTop","scrollHeight","executeScroll","generateCloneCommand","showSecret","window","location","protocol","hostname","port","paddingTop","src","className","border","height","paddingBottom","ref","dangerouslySetInnerHTML","__html","FormGroup","Switch","Fab","LineType","ColorMode","Terminal","prompt","colorMode","lineData","onInput","startingInputValue","inputHistory","setInputHistory","positionInHistory","setPositionInHistory","carrotPosition","setCarrotPosition","currentLineInput","setCurrentLineInput","lastLineRef","trim","performScrolldown","scrollIntoView","behavior","block","length","elListeners","getElementsByClassName","terminalEl","listener","querySelector","focus","addEventListener","push","forEach","elListener","removeEventListener","renderedLineData","ld","i","classes","join","substring","placeholder","autoFocus","selectionStart","onKeyDown","keyCode","onKeyUp","Commands","terminalName","setTerminalName","terminalLineData","setTerminalLineData","fetchCurrentWorkingDir","terminalInput","outputString","_executeCommand","includes","reduce","acc","index","startsWith","t","match","path","command","FileSystemNavigator","valuesParrent","setValuesParrent","root","files","values","setValues","handleSelect","nodeIds","splitPaths","split","newDirStructure","firstPath","_","findIndex","o","set","TreeView","defaultCollapseIcon","defaultExpandIcon","overflowY","onNodeSelect","TreeRender","parrent","hasFiles","TreeItem","nodeId","node","idx","newPath","ConsoleEditor","prop","language","defaultFile","editorCodeData","encodingWrite","encodingRead","_handleSaveFileContent","bytes","utf8","encode","encoded","base64","setEditorCodeValue","_handleReload","responseType","substr","FormControl","InputLabel","htmlFor","Input","startAdornment","languages","Routes","Logs","Constants","constants","setConstants","getConstantsDefinitions","readOnly","onMount","editor","updateOptions","Errors","errors","setErrors","getErrorsDefinitions","Events","Metadata","rowSpacing","columnSpacing","sm","blob","URL","createObjectURL","Blob","link","createElement","setAttribute","body","appendChild","click","parentNode","removeChild","fileInput","formData","append","Settings","List","ListItem","ListItemText","primary","DocumentationPage","content","marginBottom","NewsPage","VsCodeWebPage","RequireAuth","adminSecret","useLocation","to","state","from","replace","Page","title","App","options","persist","cachePolicy","Accept","interceptors","request","route","basename","element","Configuration","News","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","palette","mode","main","lightBlue","secondary","red","ReactDOM","createRoot","getElementById","render","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.7457ea4b.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\n// Get the prefix, fallback to empty string if env is not set.\nconst PREFIX = process.env.REACT_APP_STORAGE_PREFIX ?? '';\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = `${PREFIX}:${key}`;\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n    if (jsonValue != null) {\n      try {\n        return JSON.parse(jsonValue);\n      } catch (error) {\n        console.log(\n          '[useLocalStorage] Warning while parsing JSON from local storage'\n        );\n        if (\n          `${process.env.REACT_APP_VERBOSE_OUTPUT}`.toLowerCase() === 'true'\n        ) {\n          console.error(error);\n        }\n        return initialValue;\n      }\n    }\n    if (typeof initialValue === 'function') {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n    return () => {};\n  }, [prefixedKey, value]);\n\n  return [value, setValue];\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport useLocalStorage from './../hooks/useLocalStorage';\n\n// ---\n\nexport const AuthContext = React.createContext();\n\nexport function AuthProvider({ children }) {\n  const [memoryType, setMemoryType] = React.useState('local-storage'); // options: 'local-storage', 'memory-storage'\n  const [tokenInMem, setTokenInMem] = React.useState('');\n  const [tokenInLocalStorage, setTokenInLocalStorage] = useLocalStorage(\n    process.env.REACT_APP_TOKEN_NAME,\n    ''\n  );\n\n  const getToken = () => {\n    if (memoryType === 'local-storage') {\n      return tokenInLocalStorage;\n    } else {\n      return tokenInMem;\n    }\n  };\n\n  const signin = async (newToken, rememberInThisBrowser) => {\n    if (rememberInThisBrowser) {\n      setMemoryType('local-storage');\n      await setTokenInLocalStorage(newToken);\n    } else {\n      setMemoryType('memory-storage');\n      await setTokenInMem(newToken);\n    }\n    // console.log('Token changed...', token, newToken);\n    console.log('signin');\n  };\n\n  const signout = async () => {\n    if (memoryType === 'local-storage') {\n      setTokenInLocalStorage('');\n    } else {\n      setToken('');\n    }\n    console.log('signout');\n  };\n\n  const verifySession = async (insertedToken) => {\n    const results = await axios\n      .get('/console/api/v1/check-connection', {\n        headers: {\n          'x-hlambda-admin-secret': insertedToken,\n        },\n      })\n      .then((response) => {\n        console.log(response);\n        return true;\n      })\n      .catch((error) => {\n        console.log('[fetch-error]', error);\n        const response = error?.response?.data;\n        console.log(response);\n        if (response?.message) {\n          toast.error(`${response?.message}`);\n        } else if (error) {\n          toast.error(`${error}`);\n        }\n        return false;\n      });\n\n    return results;\n  };\n\n  const value = { getToken, signin, signout, verifySession };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth() {\n  return React.useContext(AuthContext);\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport Container from '@mui/material/Container';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from './../../context/basicAuthContext';\n\nexport default function Login() {\n  const [loading, setLoading] = React.useState(false);\n  const [rememberInThisBrowser, setRememberInThisBrowser] =\n    React.useState(true);\n\n  const navigate = useNavigate();\n  const auth = useAuth();\n  const [showPassword, setShowPassword] = React.useState(false);\n  // const [showInvalidTokenError, setShowInvalidTokenError] = React.useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\n\n  const _handleSubmit = async (event) => {\n    setLoading(true);\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    const isGood = await auth.verifySession(data.get('token'));\n    if (isGood) {\n      await auth.signin(data.get('token'), rememberInThisBrowser);\n      navigate(`/`);\n    } else {\n      setLoading(false);\n    }\n  };\n\n  const _handleRememberInThisBrowserChange = async (event) => {\n    setRememberInThisBrowser(!rememberInThisBrowser);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1 }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={_handleSubmit}\n          noValidate\n          sx={{ mt: 1 }}\n        >\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"token\"\n            label=\"Enter admin-secret\"\n            type={showPassword ? 'text' : 'password'}\n            id=\"token\"\n            autoComplete=\"current-token\"\n            defaultValue={auth.getToken()}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    //onClick={handleClickShowPassword}\n                    //onMouseUp={handleMouseDownPassword}\n                    onMouseDown={handleMouseDownPassword}\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={rememberInThisBrowser}\n                value=\"remember\"\n                color=\"primary\"\n                onChange={_handleRememberInThisBrowserChange}\n              />\n            }\n            label=\"Remember in this browser\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n            disabled={loading}\n          >\n            {loading ? <CircularProgress size={25} color=\"inherit\" /> : 'ENTER'}\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link\n                href={process.env.REACT_APP_CONSOLE_DOCS_URL}\n                variant=\"body2\"\n                target=\"_blank\"\n                // rel=\"noopener\" // Security (Choose 1)\n                rel=\"noreferrer\" // Security (Choose 1)\n              >\n                How to set admin secret?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link\n                href={process.env.REACT_APP_CONSOLE_HELP_URL}\n                variant=\"body2\"\n                target=\"_blank\"\n                // rel=\"noopener\" // Security (Choose 1)\n                rel=\"noreferrer\" // Security (Choose 1)\n              >\n                {'What is this? Help'}\n              </Link>\n            </Grid>\n          </Grid>\n          <Divider sx={{ marginTop: '2rem' }} />\n          <Grid container>\n            <Grid item xs sx={{ padding: '1rem' }}>\n              <Typography\n                align=\"center\"\n                component=\"h6\"\n                variant=\"inherit\"\n                color=\"text.disabled\"\n                sx={{ fontWeight: '200' }}\n              >\n                {process.env.REACT_APP_VERSION}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\n\nimport useLocalStorage from './../../hooks/useLocalStorage';\n\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from './../../context/basicAuthContext';\n\nexport default function Logout() {\n  const navigate = useNavigate();\n  const auth = useAuth();\n\n  React.useEffect(() => {\n    setTimeout(async () => {\n      await auth.signout(); // Wipe data from local storage\n      navigate(`/login`);\n    }, 1337);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [navigate]);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1 }}>\n          <LogoutOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Logging you out...\n        </Typography>\n        <Box sx={{ marginTop: '1rem', display: 'flex' }}>\n          <CircularProgress color=\"inherit\" />\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport ErrorOutlinedIcon from '@mui/icons-material/ErrorOutline';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\n\nimport { useNavigate } from 'react-router-dom';\n\nexport default function NotFound() {\n  const navigate = useNavigate();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1 }}>\n          <ErrorOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          404 page not found...\n        </Typography>\n        <Box sx={{ marginTop: '1rem', display: 'flex' }}>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n            onClick={() => {\n              navigate('/');\n            }}\n          >\n            GO BACK\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","export function getSessionStorageOrDefault(key, defaultValue) {\n  const stored = sessionStorage.getItem(key);\n  if (!stored) {\n    return defaultValue;\n  }\n  return JSON.parse(stored);\n}\n\nexport default getSessionStorageOrDefault;\n","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport Container from '@mui/material/Container';\nimport Link from '@mui/material/Link';\nimport IconButton from '@mui/material/IconButton';\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\n\nimport useLocalStorage from './../../hooks/useLocalStorage';\nimport getSessionStorageOrDefault from './../../utils/getSessionStorageOrDefault';\n\nfunction Banner(props) {\n  const navigate = useNavigate();\n\n  const [checkVersionResult, setCheckVersionResult] = React.useState({});\n  const [checkBannerResult, setCheckBannerResult] = React.useState({});\n  const [hidden, setHidden] = React.useState(\n    getSessionStorageOrDefault(`${props.type}-banner-hidden`, false)\n  );\n  const [newVersionLastCheckTimestamp, setNewVersionLastCheckTimestamp] =\n    useLocalStorage('new-version-last-check-timestamp', null);\n\n  const { get, post, response, loading, error } = useFetch();\n\n  React.useEffect(() => {\n    sessionStorage.setItem(\n      `${props.type}-banner-hidden`,\n      JSON.stringify(hidden)\n    );\n  }, [hidden]);\n\n  const checkBanner = async () => {\n    // Do things...\n    const results = await get('/console/api/v1/banner-info');\n    if (response.ok) {\n      // toast.success('yeey');\n      // console.log('checkBanner', results);\n      setCheckBannerResult(results);\n    }\n  };\n\n  const checkVersion = async () => {\n    // Do things...\n    const results = await get('/console/api/v1/check-version');\n    if (response.ok) {\n      // toast.success('yeey');\n      // console.log('checkVersion', results);\n      setNewVersionLastCheckTimestamp(Date.now());\n      setCheckVersionResult(results);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.type === 'version-banner') {\n      if (\n        newVersionLastCheckTimestamp === null ||\n        Date.now() > newVersionLastCheckTimestamp + 3600 * 1000\n      ) {\n        // console.log('Checking version', newVersionLastCheckTimestamp);\n        checkVersion();\n      } else {\n        // console.log('Too early...', newVersionLastCheckTimestamp);\n      }\n    } else {\n      checkBanner();\n    }\n  }, []);\n\n  //   React.useEffect(() => {\n  //     _handleReload();\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\n  //   }, []);\n\n  //   React.useEffect(() => {\n  //     if (error) {\n  //       toast.error('Request errored out...');\n  //       console.log(JSON.stringify(response.data));\n  //     }\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\n  //   }, [error]);\n\n  if (hidden) {\n    return <></>;\n  }\n\n  if (props.type === 'version-banner') {\n    if (!checkVersionResult?.foundNewerVersion) return <></>;\n    return (\n      <>\n        <div\n          style={{\n            position: 'fixed',\n            right: '0',\n            bottom: '0',\n            width: '100%',\n            zIndex: '999999',\n\n            textAlign: 'center',\n            backgroundColor: '#f4ee44', // #ffc627\n            color: '#43495a',\n            boxSizing: 'border-box',\n          }}\n        >\n          <Container maxWidth=\"xl\">\n            <Typography\n              variant=\"body1\"\n              noWrap\n              component=\"span\"\n              onClick={() => {\n                navigate('/');\n              }}\n            >\n              {`Hey there! A new server version`}{' '}\n              <span style={{ fontWeight: 'bold' }}>\n                {checkVersionResult?.latestVersion}\n              </span>{' '}\n              {`is available`}\n              {' · '}\n              <Link\n                href={`https://github.com/hlambda/hlambda-core/releases/tag/${checkVersionResult?.latestVersion}`}\n                variant=\"body2\"\n                target=\"_blank\"\n                // rel=\"noopener\" // Security (Choose 1)\n                rel=\"noreferrer\" // Security (Choose 1)\n                color={'#43495a'}\n                fontWeight={'bold'}\n              >\n                View Changelog\n              </Link>\n              {' · '}\n              <Link\n                href={\n                  process.env.REACT_APP_CONSOLE_DOCS_URL +\n                  'deployment/updating.html'\n                }\n                variant=\"body2\"\n                target=\"_blank\"\n                // rel=\"noopener\" // Security (Choose 1)\n                rel=\"noreferrer\" // Security (Choose 1)\n                color={'#43495a'}\n                fontWeight={'bold'}\n              >\n                Update Now\n              </Link>\n            </Typography>\n            <IconButton\n              size=\"large\"\n              aria-label=\"Close bar\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={() => {\n                console.log('Close!');\n                setHidden(true);\n              }}\n              color=\"inherit\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Container>\n        </div>\n      </>\n    );\n  }\n\n  if (!checkBannerResult?.enabled) return <></>;\n  return (\n    <>\n      <div\n        style={{\n          position: 'relative',\n          width: '100%',\n          zIndex: '100',\n          textAlign: 'center',\n          backgroundColor: checkBannerResult?.color ?? '#fea300', // #ffc627\n          color: '#333',\n          boxSizing: 'border-box',\n          padding: '7px 10px',\n        }}\n      >\n        <Container maxWidth=\"xl\">\n          <Typography\n            variant=\"body1\"\n            noWrap\n            component=\"span\"\n            onClick={() => {\n              navigate('/');\n            }}\n          >\n            {(!checkBannerResult?.name || checkBannerResult?.name === '') &&\n              (!checkBannerResult?.message ||\n                checkBannerResult?.message === '') && (\n                <>\n                  <span style={{ fontWeight: 'bold' }}>\n                    {'Hlambda - Environment'}\n                  </span>\n                </>\n              )}\n\n            {checkBannerResult?.name && checkBannerResult?.name !== '' && (\n              <>\n                {'Environment name:'}{' '}\n                <span style={{ fontWeight: 'bold' }}>\n                  {checkBannerResult?.name}\n                </span>\n              </>\n            )}\n            {checkBannerResult?.message && checkBannerResult?.message !== '' && (\n              <>\n                {checkBannerResult?.name &&\n                  checkBannerResult?.name !== '' &&\n                  ' · '}\n                <span style={{ fontWeight: 'bold' }}>\n                  {checkBannerResult?.message}\n                </span>\n              </>\n            )}\n            {/* {' · '}\n            {'Metadata updated at:'}{' '}\n            <span style={{ fontWeight: 'bold' }}>\n              {checkBannerResult?.metadataUpdatedAt}\n            </span>\n            {' · '}\n            {'Metadata hash:'}{' '}\n            <span style={{ fontWeight: 'bold' }}>\n              {checkBannerResult?.metadataHash}\n            </span> */}\n          </Typography>\n          <IconButton\n            size=\"large\"\n            aria-label=\"Close bar\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={() => {\n              console.log('Close!');\n              setHidden(true);\n            }}\n            color=\"inherit\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nexport default Banner;\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport Link from '@mui/material/Link';\n\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport NewsIcon from '@mui/icons-material/NewReleases';\nimport DocumentationIcon from '@mui/icons-material/Description';\n\nimport { useNavigate } from 'react-router-dom';\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nimport Banner from './../banner/Banner';\n\nimport getSessionStorageOrDefault from './../../utils/getSessionStorageOrDefault';\n\nconst pages = [\n  {\n    name: 'API',\n    url: '/',\n  },\n  // {\n  //   name: 'Code',\n  //   url: '/code',\n  // },\n  {\n    name: 'Routes',\n    url: '/routes',\n  },\n  {\n    name: 'Shell',\n    url: '/shell',\n  },\n  {\n    name: 'Env',\n    url: '/env',\n  },\n  {\n    name: 'Constants',\n    url: '/constants',\n  },\n  {\n    name: 'Errors',\n    url: '/errors',\n  },\n  // {\n  //   name: 'Events',\n  //   url: '/events',\n  // },\n  {\n    name: 'Logs',\n    url: '/logs',\n  },\n  {\n    name: 'Metadata',\n    url: '/metadata',\n  },\n  // {\n  //   name: 'Settings',\n  //   url: '/settings',\n  // },\n  {\n    name: 'Logout',\n    url: '/logout',\n  },\n];\n\nconst ResponsiveAppBar = () => {\n  const navigate = useNavigate();\n\n  const { get, post, response, loading, error } = useFetch();\n\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n  // const [serverVersion, setServerVersion] = React.useState(null);\n  const [serverVersion, setServerVersion] = React.useState(\n    getSessionStorageOrDefault(`server-version`, null)\n  );\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  const getServerVersion = async () => {\n    // Do things...\n    const results = await get('/console/api/v1/version');\n    if (response.ok) {\n      setServerVersion(results);\n    }\n  };\n\n  React.useEffect(() => {\n    if (serverVersion === null) {\n      getServerVersion();\n    }\n  }, []);\n\n  React.useEffect(() => {\n    sessionStorage.setItem(`server-version`, JSON.stringify(serverVersion));\n  }, [serverVersion]);\n\n  return (\n    <AppBar position=\"static\">\n      <Banner type=\"environment-banner\" />\n      <Banner type=\"version-banner\" />\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n            onClick={() => {\n              navigate('/');\n            }}\n          >\n            Hλ\n            {serverVersion && (\n              <>\n                {' · '} {serverVersion}\n              </>\n            )}\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem\n                  key={page.name}\n                  onClick={() => {\n                    navigate(page.url);\n                    handleCloseNavMenu();\n                  }}\n                >\n                  <Typography textAlign=\"center\">{page.name}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n          >\n            Hλ\n            {serverVersion && (\n              <>\n                {' · '} {serverVersion}\n              </>\n            )}\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => (\n              <Button\n                key={page.name}\n                onClick={() => {\n                  navigate(page.url);\n                }}\n                sx={{ my: 2, color: 'white', display: 'block' }}\n              >\n                {page.name}\n              </Button>\n            ))}\n          </Box>\n\n          <IconButton\n            size=\"large\"\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={() => {\n              navigate('/documentation');\n            }}\n            color=\"inherit\"\n            style={{ marginRight: '5px' }}\n          >\n            <DocumentationIcon />\n          </IconButton>\n          <IconButton\n            size=\"large\"\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={() => {\n              navigate('/news');\n            }}\n            color=\"inherit\"\n            style={{ marginRight: '5px' }}\n          >\n            <NewsIcon />\n          </IconButton>\n          <IconButton\n            size=\"large\"\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={() => {\n              navigate('/settings');\n            }}\n            color=\"inherit\"\n            style={{ marginRight: '20px' }}\n          >\n            <SettingsIcon />\n          </IconButton>\n          <Button\n            variant=\"contained\"\n            onClick={async () => {\n              // Do things...\n              const results = await get('/console/api/v1/trigger-restart');\n              if (response.ok) {\n                toast.success('Server reloading...');\n              } else {\n                toast.error('Request error!');\n              }\n            }}\n            color=\"secondary\"\n          >\n            Reload server\n          </Button>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default ResponsiveAppBar;\n\n// export default function TopBar() {\n//   return (\n//     <React.Fragment>\n//       <AppBar position=\"absolute\" color=\"primary\" sx={{ top: 0 }}>\n//         <Toolbar>\n//           <IconButton color=\"inherit\" aria-label=\"open drawer\">\n//             <MenuIcon />\n//           </IconButton>\n//           <Box sx={{ flexGrow: 1 }} />\n//           <IconButton color=\"inherit\">\n//             <SearchIcon />\n//           </IconButton>\n//           <IconButton color=\"inherit\">\n//             <MoreIcon />\n//           </IconButton>\n//         </Toolbar>\n//       </AppBar>\n//     </React.Fragment>\n//   );\n// }\n","import React from 'react';\n\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\n\nimport CopyAll from '@mui/icons-material/FileCopy';\nimport CheckIcon from '@mui/icons-material/Check';\n\nimport { toast } from 'react-toastify';\n\nconst CopyToClipboard = (props) => {\n  const [isCopied, setIsCopied] = React.useState(false);\n\n  // This is the function we wrote earlier\n  const copyTextToClipboard = async (text) => {\n    if ('clipboard' in navigator) {\n      return await navigator.clipboard.writeText(text);\n    } else {\n      return document.execCommand('copy', true, text);\n    }\n  };\n\n  // Returns onClick handler function for the copy button\n  const handleCopyClickFunc = (copyText) => () => {\n    // Asynchronously call copyTextToClipboard\n    copyTextToClipboard(copyText)\n      .then(() => {\n        // If successful, update the isCopied state value\n        // toast.success('Copied!');\n        setIsCopied(true);\n        setTimeout(() => {\n          setIsCopied(false);\n        }, 1500);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <>\n      {isCopied && (\n        <Alert icon={<CheckIcon fontSize=\"inherit\" />} severity=\"success\">\n          {isCopied ? 'Copied!' : ''}\n        </Alert>\n      )}\n      <IconButton\n        aria-label={props['aria-label']}\n        onMouseDown={handleCopyClickFunc(props.textToCopy)}\n      >\n        {<CopyAll />}\n      </IconButton>\n    </>\n  );\n};\n\nexport default CopyToClipboard;\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\nimport ControlPointIcon from '@mui/icons-material/ControlPoint';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nimport Switch from '@mui/material/Switch';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Fab from '@mui/material/Fab';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nimport TopBar from './../components/top-bar';\nimport CopyToClipboard from './../components/copy-to-clipboard/CopyToClipboard';\n\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nimport useLocalStorage from './../hooks/useLocalStorage';\n\nimport AnsiUp from 'ansi_up';\n\nimport { useAuth } from './../context/basicAuthContext';\n\nconst StyledPreCodeTag = styled('pre')(\n  ({ theme }) => `\n  background-color: #000;\n  color: #FFF;\n  overflow-y: auto;\n  padding: 0;\n  height: 30vh;\n  display: block;\n  margin: 0;\n  font-size: 15px;\n`\n);\n\nfunction Home() {\n  const { get, post, response, loading, error } = useFetch();\n  const [logs, setLogs] = React.useState('');\n  const [autoScroll, setAutoScroll] = React.useState(true);\n  const [showPassword, setShowPassword] = React.useState(false);\n  const [showSecretInCommand, setShowSecretInCommand] = React.useState(false);\n  const [timestampOnRender, setTimestampOnRender] = React.useState(Date.now());\n\n  const codeRef = React.useRef(null);\n\n  const auth = useAuth();\n\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\n\n  const executeScroll = () => {\n    if (codeRef?.current) {\n      codeRef.current.scrollTop = codeRef?.current?.scrollHeight;\n    }\n  };\n\n  const getLogs = async () => {\n    // Do things...\n    const results = await get('/console/api/v1/logs?type=text');\n    if (response.ok) {\n      // toast.success('yeey');\n      const ansi_up = new AnsiUp();\n      const html = ansi_up.ansi_to_html(results);\n      setLogs(html);\n    }\n  };\n\n  React.useEffect(() => {\n    getLogs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    if (error) {\n      toast.error('Request errored out...');\n      setLogs(JSON.stringify(response.data));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error]);\n\n  React.useEffect(() => {\n    autoScroll && executeScroll();\n  });\n\n  const _handleSwitchChange = (event) => {\n    setAutoScroll(!autoScroll);\n  };\n\n  const generateCloneCommand = (showSecret) => {\n    const url = `${window.location.protocol}//${window.location.hostname}${\n      window.location.port === '80' ? '' : `:${window.location.port}`\n    }`;\n    return showSecret\n      ? `hl clone ${`hlapp${timestampOnRender}`} --admin-secret=\"${auth.getToken()}\" ${url}`\n      : `hl clone ${`hlapp${timestampOnRender}`} --admin-secret=\"*********\" ${url}`;\n  };\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <TextField\n          margin=\"normal\"\n          required\n          disabled\n          fullWidth\n          name=\"token\"\n          label=\"Admin-secret\"\n          type={showPassword ? 'text' : 'password'}\n          id=\"token\"\n          autoComplete=\"current-token\"\n          defaultValue={auth.getToken()}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <CopyToClipboard\n                  aria-label=\"copy admin secret\"\n                  textToCopy={auth.getToken()}\n                />\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  //onClick={handleClickShowPassword}\n                  //onMouseUp={handleMouseDownPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          margin=\"normal\"\n          required\n          disabled\n          fullWidth\n          name=\"clone-command\"\n          label=\"Clone server metadata\"\n          type={'text'}\n          id=\"clone-command\"\n          autoComplete=\"clone-command\"\n          value={\n            showSecretInCommand\n              ? generateCloneCommand(true)\n              : generateCloneCommand(false)\n          }\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <CopyToClipboard\n                  aria-label=\"copy clone command\"\n                  textToCopy={generateCloneCommand(true)}\n                />\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onMouseDown={() =>\n                    setShowSecretInCommand(!showSecretInCommand)\n                  }\n                >\n                  {showSecretInCommand ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <iframe\n          src={`${process.env.REACT_APP_API_PREFIX}/console/docs`}\n          id=\"myPortalToSwagger\"\n          className=\"myClassname\"\n          display=\"initial\"\n          position=\"relative\"\n          style={{\n            border: 'none',\n            width: 'inherit',\n            height: '700px',\n            paddingTop: '2rem',\n            paddingBottom: '2rem',\n          }}\n        />\n\n        <StyledPreCodeTag\n          ref={codeRef}\n          dangerouslySetInnerHTML={{ __html: loading ? 'Loading...' : logs }}\n        ></StyledPreCodeTag>\n\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Switch\n                color=\"warning\"\n                checked={autoScroll}\n                onChange={_handleSwitchChange}\n              />\n            }\n            label=\"Auto scroll to bottom.\"\n          />\n        </FormGroup>\n      </Container>\n      <Fab\n        style={{\n          position: 'fixed',\n          right: '20px',\n          bottom: '20px',\n        }}\n        color=\"secondary\"\n        aria-label=\"Refresh\"\n        onClick={() => {\n          getLogs();\n        }}\n      >\n        <RefreshIcon />\n      </Fab>\n    </>\n  );\n}\n\nexport default Home;\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  KeyboardEvent,\n  ChangeEvent,\n} from 'react';\nimport './style.css';\n\nexport const LineType = {\n  Input: 'Input',\n  Output: 'Output',\n};\n\nexport const ColorMode = {\n  Light: 'Light',\n  Dark: 'Dark',\n};\n\n// export interface Props {\n//   name?: string\n//   prompt?: string\n//   colorMode?: ColorMode\n//   lineData: Array<{type: LineType, value: string}>\n//   onInput?: ((input: string) => void) | null | undefined,\n//   startingInputValue?: string\n// }\n\nconst Terminal = ({\n  name,\n  prompt,\n  colorMode,\n  lineData,\n  onInput,\n  startingInputValue = '',\n  inputHistory,\n  setInputHistory,\n}) => {\n  // const [inputHistory, setInputHistory] = useState(['']);\n  const [positionInHistory, setPositionInHistory] = useState(0);\n  const [carrotPosition, setCarrotPosition] = useState(0);\n  const [currentLineInput, setCurrentLineInput] = useState('');\n\n  const lastLineRef = useRef();\n\n  const updateCarrotPosition = (event) => {\n    setCarrotPosition(event.target.selectionStart);\n  };\n\n  const updateCurrentLineInput = (event) => {\n    setCurrentLineInput(event.target.value);\n    setCarrotPosition(event.target.selectionStart);\n  };\n\n  React.useEffect(() => {\n    setCurrentLineInput(inputHistory[positionInHistory]);\n  }, [inputHistory, positionInHistory]);\n\n  const handleKeyDown = (event) => {\n    if (event.keyCode == 38 || event.keyCode == 40) {\n      event.preventDefault();\n      // setCarrotPosition();\n      event.keyCode == 38 &&\n        setPositionInHistory(() => {\n          return (\n            (inputHistory.length + (positionInHistory + 1)) %\n            inputHistory.length\n          );\n        });\n      event.keyCode == 40 &&\n        setPositionInHistory(() => {\n          return (\n            (inputHistory.length + (positionInHistory - 1)) %\n            inputHistory.length\n          );\n        });\n      console.log(inputHistory);\n      return;\n    }\n\n    if (onInput != null && event.key === 'Enter') {\n      onInput(currentLineInput);\n      setInputHistory([...inputHistory, currentLineInput]);\n      setPositionInHistory(0);\n      setCurrentLineInput('');\n    }\n  };\n\n  useEffect(() => {\n    setCurrentLineInput(startingInputValue.trim());\n  }, [startingInputValue]);\n\n  // An effect that handles scrolling into view the last line of terminal input or output\n  const performScrolldown = useRef(false);\n  useEffect(() => {\n    if (performScrolldown.current) {\n      // skip scrolldown when the component first loads\n      setTimeout(\n        () =>\n          lastLineRef?.current?.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n          }),\n        500\n      );\n    }\n    performScrolldown.current = true;\n  }, [lineData.length]);\n\n  // We use a hidden input to capture terminal input; make sure the hidden input is focused when clicking anywhere on the terminal\n  useEffect(() => {\n    if (onInput == null) {\n      return;\n    }\n    // keep reference to listeners so we can perform cleanup\n    const elListeners = [];\n    for (const terminalEl of document.getElementsByClassName(\n      'react-terminal-wrapper'\n    )) {\n      const listener = () =>\n        terminalEl?.querySelector('.terminal-hidden-input')?.focus();\n      terminalEl?.addEventListener('click', listener);\n      elListeners.push({ terminalEl, listener });\n    }\n    return function cleanup() {\n      elListeners.forEach((elListener) => {\n        elListener.terminalEl.removeEventListener('click', elListener.listener);\n      });\n    };\n  }, [onInput]);\n\n  const renderedLineData = lineData.map((ld, i) => {\n    const classes = ['react-terminal-line'];\n    if (ld.type === LineType.Input) {\n      classes.push('react-terminal-input');\n    }\n    // `lastLineRef` is used to ensure the terminal scrolls into view to the last line; make sure to add the ref to the last\n    // redendered line if input prompt is not shown, i.e. `onInput` is not declared; see 'render prompt' below\n    if (lineData.length === i + 1 && onInput == null) {\n      return (\n        <span className={classes.join(' ')} key={i} ref={lastLineRef}>\n          {ld.value}\n        </span>\n      );\n    } else {\n      return (\n        <pre className={classes.join(' ')} key={i}>\n          {ld.value}\n        </pre>\n      );\n    }\n  });\n\n  // render prompt\n  if (onInput != null) {\n    renderedLineData.push(\n      <span\n        className=\"react-terminal-line react-terminal-input\"\n        data-terminal-prompt={prompt || '$'}\n        key={lineData.length}\n        ref={lastLineRef}\n      >\n        {currentLineInput.substring(0, carrotPosition)}\n        <span className=\"react-terminal-active-input\"></span>\n        {currentLineInput.substring(carrotPosition)}\n      </span>\n    );\n  }\n\n  const classes = ['react-terminal-wrapper'];\n  if (colorMode === ColorMode.Light) {\n    classes.push('react-terminal-light');\n  }\n  return (\n    <div className={classes.join(' ')} data-terminal-name={name}>\n      <div className=\"react-terminal\">{renderedLineData}</div>\n      <input\n        className=\"terminal-hidden-input\"\n        placeholder=\"Terminal Hidden Input\"\n        value={currentLineInput}\n        autoFocus={onInput != null}\n        onChange={updateCurrentLineInput}\n        onKeyDown={handleKeyDown}\n        onKeyUp={updateCarrotPosition}\n      />\n    </div>\n  );\n};\n\nexport default Terminal;\n","import React from 'react';\nimport useFetch from 'use-http';\n\nimport Container from '@mui/material/Container';\nimport TopBar from './../components/top-bar';\n\nimport Terminal, {\n  ColorMode,\n  LineType,\n} from './../components/my-terminal/index.js';\n\nfunction Commands() {\n  const { get, post, response, loading, error } = useFetch();\n\n  const [terminalName, setTerminalName] = React.useState('...');\n  const [terminalLineData, setTerminalLineData] = React.useState([]);\n  const [inputHistory, setInputHistory] = React.useState(['']);\n\n  // const [terminalState, setTerminalState] = React.useState({\n  //   inputStr: '',\n  // });\n\n  // const _triggerMe = (inputStr) => {\n  //   console.log(inputStr);\n  //   setTerminalState({...terminalState, inputStr})\n  //   this.setState({inputStr});\n  // }\n\n  const fetchCurrentWorkingDir = async (terminalInput) => {\n    const results = await get('/console/api/v1/command-cwd');\n    const outputString = results?.data ? results?.data : 'Error...';\n    return { terminalInput, outputString };\n  };\n\n  React.useEffect(() => {\n    fetchCurrentWorkingDir().then(({ terminalInput, outputString }) => {\n      setTerminalLineData([\n        ...terminalLineData,\n        { type: LineType.Output, value: outputString },\n      ]);\n      setTerminalName(outputString);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const _executeCommand = async (terminalInput) => {\n    if (terminalInput === '') {\n      setTerminalLineData([\n        ...terminalLineData,\n        { type: LineType.Input, value: terminalInput },\n        { type: LineType.Output, value: 'empty command ?' },\n      ]);\n      return;\n    }\n\n    if (\n      ['clear', 'cls', 'exit', 'quit'].includes(terminalInput.toLowerCase())\n    ) {\n      setTerminalLineData([]);\n      return;\n    }\n\n    if (['history'].includes(terminalInput.toLowerCase())) {\n      // Todo: maybe in future pull history from the server side... dnno...\n      // const results = await post('/console/api/v1/command-history');\n      // const outputString = results?.data ? results?.data : 'Error...';\n      // setTerminalLineData([\n      //   ...terminalLineData,\n      //   { type: LineType.Input, value: terminalInput },\n      //   { type: LineType.Output, value: outputString },\n      // ]);\n      setTerminalLineData([\n        ...terminalLineData,\n        { type: LineType.Input, value: terminalInput },\n        {\n          type: LineType.Output,\n          value: inputHistory.reduce((acc, item, index) => {\n            if (index === 0) {\n              return acc;\n            }\n            return acc + `${index}  ${item}\\n`;\n          }, ''),\n        },\n      ]);\n      return;\n    }\n\n    if (terminalInput.toLowerCase().startsWith('cd')) {\n      const t = terminalInput.match(/cd\\s(.+)/);\n      const results = await post('/console/api/v1/command-change-dir', {\n        path: t[1],\n      });\n      const outputString = results?.data ? results?.data : 'Error...';\n      setTerminalLineData([\n        ...terminalLineData,\n        { type: LineType.Input, value: terminalInput },\n        { type: LineType.Output, value: outputString },\n      ]);\n      setTerminalName(outputString);\n      return;\n    }\n\n    if (['pwd', '?', '??', 'help'].includes(terminalInput.toLowerCase())) {\n      fetchCurrentWorkingDir(terminalInput).then(\n        ({ terminalInput, outputString }) => {\n          setTerminalLineData([\n            ...terminalLineData,\n            { type: LineType.Input, value: terminalInput },\n            { type: LineType.Output, value: outputString },\n          ]);\n          setTerminalName(outputString);\n        }\n      );\n      return;\n    }\n\n    // Do things...\n    const results = await post('/console/api/v1/command-request', {\n      command: terminalInput,\n    });\n\n    console.log(results);\n\n    const outputString = results?.data ? results?.data : 'Error...';\n\n    setTerminalLineData([\n      ...terminalLineData,\n      { type: LineType.Input, value: terminalInput },\n      { type: LineType.Output, value: outputString },\n    ]);\n\n    console.log(`New terminal input received: '${terminalInput}'`);\n  };\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <div className=\"container\">\n          <Terminal\n            name={terminalName}\n            colorMode={ColorMode.Dark}\n            lineData={terminalLineData}\n            onInput={_executeCommand}\n            inputHistory={inputHistory}\n            setInputHistory={setInputHistory}\n          />\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default Commands;\n","import * as React from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport TreeItem from '@mui/lab/TreeItem';\n\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nimport _ from 'lodash';\n\nexport default function FileSystemNavigator({\n  valuesParrent,\n  setValuesParrent,\n}) {\n  const { get, post, response, loading, error } = useFetch();\n\n  // const [selectedFilePath, setSelectedFilePath] = React.useState('');\n\n  const [values, setValues] = React.useState({\n    root: {\n      name: 'root',\n      path: '.',\n      files: [\n        {\n          name: 'metadata',\n          type: 'directory',\n          files: [\n            {\n              name: 'apps',\n              type: 'directory',\n              files: [\n                {\n                  name: 'wut',\n                  type: 'directory',\n                  files: [],\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  });\n\n  const handleSelect = async (event, nodeIds) => {\n    console.log('selected:', nodeIds);\n    console.log(event);\n\n    const results = await post('/console/api/v1/read-dir', {\n      path: nodeIds,\n    });\n    if (response.ok) {\n      // toast.success('yeey');\n      const splitPaths = nodeIds.split('/');\n      const newDirStructure = {\n        ...values,\n      };\n\n      let firstPath = 'root.files';\n      for (let i = 1; i < splitPaths.length; i++) {\n        const files = _.get(values, firstPath);\n        const index = _.findIndex(files, function (o) {\n          return o.name == splitPaths[i];\n        });\n        firstPath = firstPath + `[${index}].files`;\n        console.log(firstPath);\n      }\n\n      console.log(firstPath);\n\n      _.set(\n        newDirStructure,\n        firstPath,\n        results.map((item) => {\n          return {\n            ...item,\n            files: [],\n          };\n        })\n      );\n\n      setValues(newDirStructure);\n    } else {\n      toast.error('Request errored out...');\n      //setValues({ ...values, editorCodeData: '' });\n    }\n  };\n\n  const TreeRender = (data, parrent = { path: '.', name: 'root' }) => {\n    const hasFiles = data.files.length !== 0;\n    if (hasFiles) {\n      return (\n        <TreeItem key={data.path} nodeId={data.path} label={data.name}>\n          {data.files.map((node, idx) => {\n            const newPath = parrent.path + '/' + node.name;\n            console.log(newPath);\n            return TreeRender(\n              { ...node, path: newPath },\n              { ...node, path: newPath }\n            );\n          })}\n        </TreeItem>\n      );\n    }\n    if (data.type === 'directory') {\n      return (\n        <TreeItem key={data.path} nodeId={data.path} label={data.name}>\n          <TreeItem\n            key={data.path + '-empty'}\n            nodeId={data.path + '-empty'}\n            label={''}\n          />\n        </TreeItem>\n      );\n    }\n    return (\n      <TreeItem\n        key={data.path}\n        nodeId={data.path}\n        onClick={() => {\n          setValuesParrent({\n            ...valuesParrent,\n            path: data.path,\n          });\n        }}\n        label={data.name}\n      ></TreeItem>\n    );\n  };\n\n  return (\n    <>\n      <TreeView\n        aria-label=\"file system navigator\"\n        defaultCollapseIcon={<ExpandMoreIcon />}\n        defaultExpandIcon={<ChevronRightIcon />}\n        sx={{ flexGrow: 1, maxWidth: 400, overflowY: 'auto' }}\n        onNodeSelect={handleSelect}\n      >\n        {loading && <CircularProgress size={10} />}\n        {TreeRender(values.root)}\n      </TreeView>\n    </>\n  );\n}\n","import React from 'react';\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\n\nimport Editor from '@monaco-editor/react';\nimport FileSystemNavigator from './FileSystemNavigator';\n\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nimport utf8 from 'utf8';\nimport base64 from 'base-64';\n\nfunction ConsoleEditor({ language, defaultFile }) {\n  const { get, post, response, loading, error } = useFetch();\n\n  const [values, setValues] = React.useState({\n    path: defaultFile ?? 'metadata/apps/auth/routes/router.auth.js',\n    editorCodeData: '',\n    encodingWrite: 'base64',\n    encodingRead: 'utf-8',\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  function _handleEditorChange(value, event) {\n    //console.log(\"here is the current model value:\", value);\n    //console.log(btoa(`${value}`));\n    // setCodePayloadValue(btoa(`${value}`))\n    setValues({ ...values, editorCodeData: value });\n  }\n\n  const _handleSaveFileContent = async (value, event) => {\n    const bytes = utf8.encode(`${values.editorCodeData}`);\n    const encoded = base64.encode(bytes);\n\n    const results = await post('/console/api/v1/file-edit', {\n      path: values.path,\n      data: encoded,\n      encodingWrite: values.encodingWrite,\n      encodingRead: values.encodingRead,\n    });\n    if (response.ok) {\n      toast.success('Saved!');\n      console.log(results);\n    } else {\n      // toast.error('Request errored out...');\n      setEditorCodeValue('');\n    }\n  };\n\n  // Reload the contents of the file\n  const _handleReload = async (value, event) => {\n    await post(\n      '/console/api/v1/file-view',\n      {\n        path: values.path,\n      },\n      { responseType: 'text' }\n    );\n    if (response.ok) {\n      // toast.success('yeey');\n      const text = await response.text();\n      setValues({ ...values, editorCodeData: text });\n      console.log(text);\n    } else {\n      // toast.error('Request errored out...');\n      setValues({ ...values, editorCodeData: '' });\n    }\n  };\n\n  // React.useEffect(() => {\n  //   _handleReload();\n  // }, []);\n\n  React.useEffect(() => {\n    _handleReload();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.path]);\n\n  React.useEffect(() => {\n    if (error) {\n      toast.error('Request errored out...');\n      console.log(JSON.stringify(response.data));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error]);\n\n  const checkLanguage = () => {\n    if (['.yml', '.yaml'].includes(values.path.substr(-5))) {\n      return 'yaml';\n    }\n    if (['.json'].includes(values.path.substr(-5))) {\n      return 'json';\n    }\n    if (['.js'].includes(values.path.substr(-3))) {\n      return 'javascript';\n    }\n    if (['.ts'].includes(values.path.substr(-3))) {\n      return 'typescript';\n    }\n    if (['.md'].includes(values.path.substr(-3))) {\n      return 'markdown';\n    }\n    return language;\n  };\n\n  return (\n    <>\n      <div style={{ paddingTop: '20px' }}>\n        <Editor\n          height=\"60vh\"\n          language={checkLanguage()}\n          defaultValue={values.editorCodeData}\n          value={values.editorCodeData}\n          onChange={_handleEditorChange}\n          theme=\"vs-dark\"\n        />\n      </div>\n\n      <Divider />\n      <div style={{ paddingTop: '20px' }}>\n        <FormControl fullWidth sx={{ m: 1 }} variant=\"standard\">\n          <InputLabel htmlFor=\"standard-adornment-amount\">Path</InputLabel>\n          <Input\n            id=\"standard-adornment-amount\"\n            value={values.path}\n            onChange={handleChange('path')}\n            variant=\"filled\"\n            startAdornment={<InputAdornment position=\"start\">/</InputAdornment>}\n          />\n        </FormControl>\n      </div>\n      {/* <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={values.encodingWrite}\n        label=\"encodingWrite\"\n        onChange={handleChange('encodingWrite')}\n      >\n        <MenuItem value={'base64'}>Base 64</MenuItem>\n        <MenuItem value={'hex'}>Hex</MenuItem>\n        <MenuItem value={'utf-8'}>utf-8</MenuItem>\n      </Select>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={values.encodingRead}\n        label=\"encodingRead\"\n        onChange={handleChange('encodingRead')}\n      >\n        <MenuItem value={'base64'}>Base 64</MenuItem>\n        <MenuItem value={'hex'}>Hex</MenuItem>\n        <MenuItem value={'utf-8'}>utf-8</MenuItem>\n      </Select> */}\n\n      <Divider />\n      <Grid container>\n        <Grid>\n          <Button variant=\"contained\" onClick={_handleSaveFileContent}>\n            Sve File\n          </Button>\n        </Grid>\n        <Grid>\n          <Button variant=\"contained\" onClick={_handleReload}>\n            Reload File\n          </Button>\n        </Grid>\n        {/* <Grid>\n          <Button variant=\"contained\" onClick={_handleReadDear}>\n            Read Dir\n          </Button>\n        </Grid> */}\n      </Grid>\n      <Divider />\n      <div style={{ paddingTop: '20px' }}>\n        <FileSystemNavigator\n          defaultFile={defaultFile}\n          languages={['.js', '.yml', '.yaml']}\n          setValuesParrent={setValues}\n          valuesParrent={values}\n        ></FileSystemNavigator>\n      </div>\n    </>\n  );\n}\n\nexport default ConsoleEditor;\n","import React from 'react';\nimport Container from '@mui/material/Container';\n\nimport TopBar from './../components/top-bar';\nimport ConsoleEditor from './../components/editor/Editor';\n\nimport useFetch from 'use-http';\n\nfunction Home() {\n  const { get, post, response, loading, error } = useFetch();\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <ConsoleEditor\n          language=\"yaml\"\n          defaultFile=\"metadata/apps/example_demo_app/hlambda-config.yaml\"\n        />\n      </Container>\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport Container from '@mui/material/Container';\n\nimport TopBar from './../components/top-bar';\nimport ConsoleEditor from './../components/editor/Editor';\n\nimport useFetch from 'use-http';\n\nfunction Routes() {\n  const { get, post, response, loading, error } = useFetch();\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <ConsoleEditor language=\"javascript\" />\n      </Container>\n    </>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport { styled } from '@mui/material/styles';\n\nimport TopBar from './../components/top-bar';\n\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nimport AnsiUp from 'ansi_up';\n\nimport Fab from '@mui/material/Fab';\nimport Switch from '@mui/material/Switch';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nconst StyledPreCodeTag = styled('pre')(\n  ({ theme }) => `\n  background-color: #000;\n  color: #FFF;\n  overflow-y: auto;\n  padding: 0;\n  height: 85vh;\n  display: block;\n  margin: 0;\n  font-size: 15px;\n`\n);\n\nfunction Logs() {\n  const { get, post, response, loading, error } = useFetch();\n  const [logs, setLogs] = React.useState('');\n  const [autoScroll, setAutoScroll] = React.useState(true);\n\n  const codeRef = React.useRef(null);\n\n  const executeScroll = () => {\n    if (codeRef?.current) {\n      codeRef.current.scrollTop = codeRef?.current?.scrollHeight;\n    }\n  };\n\n  const getLogs = async () => {\n    // Do things...\n    const results = await get('/console/api/v1/logs?type=text');\n    if (response.ok) {\n      const ansi_up = new AnsiUp();\n      const html = ansi_up.ansi_to_html(results);\n      setLogs(html);\n    }\n  };\n\n  React.useEffect(() => {\n    getLogs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    if (error) {\n      toast.error('Request errored out...');\n      setLogs(JSON.stringify(response.data));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error]);\n\n  React.useEffect(() => {\n    autoScroll && executeScroll();\n  });\n\n  const _handleSwitchChange = (event) => {\n    setAutoScroll(!autoScroll);\n  };\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <div style={{ paddingTop: '20px' }}>\n          <StyledPreCodeTag\n            ref={codeRef}\n            dangerouslySetInnerHTML={{ __html: loading ? 'Loading...' : logs }}\n          />\n        </div>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Switch\n                color=\"warning\"\n                checked={autoScroll}\n                onChange={_handleSwitchChange}\n              />\n            }\n            label=\"Auto scroll to bottom.\"\n          />\n        </FormGroup>\n      </Container>\n      <Fab\n        style={{\n          position: 'fixed',\n          right: '20px',\n          bottom: '20px',\n        }}\n        color=\"secondary\"\n        aria-label=\"Refresh\"\n        onClick={() => {\n          getLogs();\n        }}\n      >\n        <RefreshIcon />\n      </Fab>\n    </>\n  );\n}\n\nexport default Logs;\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport { styled } from '@mui/material/styles';\n\nimport TopBar from './../components/top-bar';\n\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nimport Fab from '@mui/material/Fab';\nimport Switch from '@mui/material/Switch';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nimport Editor from '@monaco-editor/react';\n\nconst StyledPreCodeTag = styled('pre')(\n  ({ theme }) => `\n  background-color: #000;\n  color: #FFF;\n  overflow-y: auto;\n  padding: 0;\n  height: 85vh;\n  display: block;\n  margin: 0;\n  font-size: 15px;\n`\n);\n\nfunction Constants() {\n  const { get, post, response, loading, error } = useFetch();\n  const [constants, setConstants] = React.useState('');\n\n  const constantsBoxRef = React.useRef(null);\n\n  const getConstantsDefinitions = async () => {\n    // Do things...\n    const results = await get('/console/api/v1/constants');\n    if (response.ok) {\n      setConstants(JSON.stringify(results, null, 2));\n    }\n    // else {\n    //   toast.error('Request errored out...');\n    //   setConstants(JSON.stringify(results));\n    // }\n  };\n\n  React.useEffect(() => {\n    getConstantsDefinitions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    if (error) {\n      toast.error('Request errored out...');\n      console.log(JSON.stringify(response.data));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error]);\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <div style={{ paddingTop: '20px' }}>\n          This is the list of all possible constants defined by the\n          `constants.*.js` files:\n        </div>\n        <div\n          style={{\n            width: '100%',\n            paddingTop: '20px',\n          }}\n        >\n          <Editor\n            height=\"calc(100vh - 12rem)\"\n            language={'json'}\n            defaultValue={constants}\n            value={constants}\n            theme=\"vs-dark\"\n            readOnly={true}\n            onMount={(editor) => {\n              editor.updateOptions({ readOnly: true });\n            }}\n          />\n        </div>\n        {/* <div style={{ paddingTop: '20px' }}>\n          <StyledPreCodeTag\n            ref={constantsBoxRef}\n            dangerouslySetInnerHTML={{\n              __html: loading ? 'Loading...' : constants,\n            }}\n          />\n        </div> */}\n      </Container>\n    </>\n  );\n}\n\nexport default Constants;\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport { styled } from '@mui/material/styles';\n\nimport TopBar from './../components/top-bar';\n\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nimport Fab from '@mui/material/Fab';\nimport Switch from '@mui/material/Switch';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nimport Editor from '@monaco-editor/react';\n\nconst StyledPreCodeTag = styled('pre')(\n  ({ theme }) => `\n  background-color: #000;\n  color: #FFF;\n  overflow-y: auto;\n  padding: 0;\n  height: 85vh;\n  display: block;\n  margin: 0;\n  font-size: 15px;\n`\n);\n\nfunction Errors() {\n  const { get, post, response, loading, error } = useFetch();\n  const [errors, setErrors] = React.useState('');\n\n  const errorBoxRef = React.useRef(null);\n\n  const getErrorsDefinitions = async () => {\n    // Do things...\n    const results = await get('/console/api/v1/errors');\n    if (response.ok) {\n      setErrors(JSON.stringify(results, null, 2));\n    }\n    // else {\n    //   toast.error('Request errored out...');\n    //   setErrors(JSON.stringify(results));\n    // }\n  };\n\n  React.useEffect(() => {\n    getErrorsDefinitions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    if (error) {\n      toast.error('Request errored out...');\n      console.log(JSON.stringify(response.data));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error]);\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <div style={{ paddingTop: '20px' }}>\n          This is the list of all possible errors defined by the `errors.*.js`\n          files:\n        </div>\n        <div\n          style={{\n            width: '100%',\n            paddingTop: '20px',\n          }}\n        >\n          <Editor\n            height=\"calc(100vh - 12rem)\"\n            language={'json'}\n            defaultValue={errors}\n            value={errors}\n            theme=\"vs-dark\"\n            readOnly={true}\n            onMount={(editor) => {\n              editor.updateOptions({ readOnly: true });\n            }}\n          />\n        </div>\n        {/* <div style={{ paddingTop: '20px' }}>\n          <StyledPreCodeTag\n            ref={errorBoxRef}\n            dangerouslySetInnerHTML={{\n              __html: loading ? 'Loading...' : errors,\n            }}\n          />\n        </div> */}\n      </Container>\n    </>\n  );\n}\n\nexport default Errors;\n","import React from 'react';\nimport Container from '@mui/material/Container';\n\nimport TopBar from './../components/top-bar';\nimport ConsoleEditor from './../components/editor/Editor';\n\nimport useFetch from 'use-http';\n\nfunction Events() {\n  const { get, post, response, loading, error } = useFetch();\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <ConsoleEditor language=\"javascript\" />\n      </Container>\n    </>\n  );\n}\n\nexport default Events;\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\n\nimport TopBar from './../components/top-bar';\n\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nfunction Metadata() {\n  const { get, post, response, loading, error } = useFetch();\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n          <Grid item xs={12}>\n            Here you can import / export metadata...\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={async () => {\n                // Do things...\n                const results = await post('/console/api/v1/metadata/export');\n                if (response.ok) {\n                  toast.success('Metadata exported');\n                  const blob = await response.blob();\n                  // 2. Create blob link to download\n                  const url = window.URL.createObjectURL(new Blob([blob]));\n                  const link = document.createElement('a');\n                  link.href = url;\n                  link.setAttribute('download', `sample.zip`);\n                  // 3. Append to html page\n                  document.body.appendChild(link);\n                  // 4. Force download\n                  link.click();\n                  // 5. Clean up and remove the link\n                  link.parentNode.removeChild(link);\n                } else {\n                  toast.error('Error while exporting metadata!');\n                }\n              }}\n            >\n              Export metadata\n            </Button>\n          </Grid>\n          <Divider />\n          <Grid item xs={12}>\n            <input id=\"your-file-input\" type=\"file\" name=\"metadata\"></input>\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={async () => {\n                const fileInput = document.querySelector('#your-file-input');\n                const formData = new FormData();\n\n                formData.append('metadata', fileInput.files[0]);\n                // Do things...\n                const results = await post(\n                  '/console/api/v1/metadata/import',\n                  formData\n                );\n                if (response.ok) {\n                  toast.success('Metadata imported');\n                } else {\n                  toast.error('Error while importing metadata!');\n                }\n              }}\n            >\n              Import metadata\n            </Button>\n          </Grid>\n          <Divider />\n          <Grid item xs={12}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={async () => {\n                // Do things...\n                const results = await get('/console/api/v1/metadata/clear');\n                if (response.ok) {\n                  toast.success('Metadata cleared');\n                } else {\n                  toast.error('Error while clearing metadata!');\n                }\n              }}\n            >\n              Clear metadata\n            </Button>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default Metadata;\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport TopBar from './../components/top-bar';\n\nimport useFetch from 'use-http';\n\nfunction Settings() {\n  const { get, post, response, loading, error } = useFetch();\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        Settings...\n        <Typography component=\"h3\" variant=\"h6\">\n          Hyper Lambda or Hlambda for short, is meta API meaning there is no\n          settings as such, any settings are passed via environment variables.\n          Here you can find the definitions and steps how to change it. Either\n          by deploying the Meta API and setting env or upadting\n          hlambda-config.yaml in one of your hlambda apps.\n        </Typography>\n        <Typography component=\"h3\" variant=\"h6\">\n          One of the examples could be the setup for serving static files. You\n          will need to disable initial route redirect to console.\n        </Typography>\n        <List>\n          {['- HLAMBDA_DISABLE_INITIAL_ROUTE_REDIRECT: true'].map((item) => (\n            <ListItem key={item}>\n              <ListItemText primary={item} />\n            </ListItem>\n          ))}\n        </List>\n      </Container>\n    </>\n  );\n}\n\nexport default Settings;\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Editor from '@monaco-editor/react';\n\nimport TopBar from './../components/top-bar';\n\nimport useFetch from 'use-http';\n\nfunction DocumentationPage() {\n  const { get, post, response, loading, error } = useFetch();\n\n  const content = `# This is the basic documentation provided by the API.\n  \n# Constant reference in code: ENV_HLAMBDA_ADMIN_SECRET | Default value: \n# Master password for API management.\nHLAMBDA_ADMIN_SECRET=\"\"\n\n# Constant reference in code: ENV_DISABLE_COLORS_IN_STDOUT | Default value: false\n# Set to true if you want to disable colorful output to stdout, it helps if you use AWS CloudWatch\nDISABLE_COLORS_IN_STDOUT=\"false\"\n\n# Constant reference in code: ENV_LOG_LEVELS | Default value: critical,normal,verbose\n# Sets up logging level: critical, normal, verbose\nLOG_LEVELS=\"critical,normal,verbose\"\n\n# Constant reference in code: ENV_SERVER_PORT | Default value: 4005\n# Server port on which express app will be hosted\nSERVER_PORT=\"4005\"\n\n# Constant reference in code: ENV_SERVER_SOURCE_IP | Default value: 0.0.0.0\n# Server source ip on which express app will be listening\nSERVER_SOURCE_IP=\"0.0.0.0\"\n\n# Constant reference in code: ENV_MICROSERVICE_NAME | Default value: hlambda\n# Used in fetching microservice specific configuration and inside error messages.\nMICROSERVICE_NAME=\"hlambda\"\n\n# Constant reference in code: ENV_SERVER_BODY_SIZE | Default value: 2mb\n# Server max allowed body size from client that express app will support. (Main usecase is Apple Subscription Notifications)\nSERVER_BODY_SIZE=\"2mb\"\n\n# Constant reference in code: ENV_HLAMBDA_CORS_DOMAIN | Default value: *\n# By default, all CORS requests to the Hlambda server are allowed. To run with more restrictive CORS settings, use this env variable. Example: \\`https://*.foo.bar.com:8080, http://*.localhost, http://localhost:3000, http://example.com\\`\nHLAMBDA_CORS_DOMAIN=\"*\"\n\n# Constant reference in code: ENV_SERVER_HEALTH | Default value: Healthy\n# Server health that can change based on different events \"Healthy\", \"Degraded\", \"Unhealthy\", \"Advisory\"\nSERVER_HEALTH=\"Healthy\"\n\n# Constant reference in code: ENV_HLAMBDA_DISABLE_ADMIN_SECRET | Default value: false\n# Disables or enables master password for API management.\nHLAMBDA_DISABLE_ADMIN_SECRET=\"false\"\n\n# Constant reference in code: ENV_HLAMBDA_DISABLE_CONSOLE | Default value: false\n# Completely disables Console and Console API thus any metadata update.\nHLAMBDA_DISABLE_CONSOLE=\"false\"\n\n# Constant reference in code: ENV_HLAMBDA_DISABLE_INITIAL_ROUTE_REDIRECT | Default value: false\n# Disable 301 redirect from the root path to the \\`/console\\`.\nHLAMBDA_DISABLE_INITIAL_ROUTE_REDIRECT=\"false\"\n\n# Constant reference in code: ENV_HLAMBDA_DISABLE_CONSOLE_FRONTEND | Default value: false\n# Disable static serving of the frontend artefacts from hlambda's public folder.\nHLAMBDA_DISABLE_CONSOLE_FRONTEND=\"false\"\n\n# Constant reference in code: ENV_HLAMBDA_CONSOLE_ASSETS_DIR | Default value: public\n# If set it will serve console assets from that directory instead of CDN. Using CDN enables system to have lates UI and receive Console hotfixes without the need for updating image.\nHLAMBDA_CONSOLE_ASSETS_DIR=\"public\"\n\n# Constant reference in code: ENV_HLAMBDA_METADATA_RELOAD_DEBOUNCE_MS | Default value: 1331\n# Debounce ms time to wait before closing the server and reloading metadata.\nHLAMBDA_METADATA_RELOAD_DEBOUNCE_MS=\"1331\"\n\n# Constant reference in code: ENV_HLAMBDA_LOADED_APPS_PREFIX | Default value: /api/v1/\n# Prefix used for all the loaded router apps.\nHLAMBDA_LOADED_APPS_PREFIX=\"/api/v1/\"\n\n# Constant reference in code: ENV_HLAMBDA_ENABLE_PUBLIC_SWAGGER | Default value: false\n# Flag to enable public swagger on /docs.\nHLAMBDA_ENABLE_PUBLIC_SWAGGER=\"false\"\n\n# Constant reference in code: ENV_HLAMBDA_PUBLIC_SWAGGER_ROUTE | Default value: /docs\n# Flag to map swagger route, default \\`/docs\\`.\nHLAMBDA_PUBLIC_SWAGGER_ROUTE=\"/docs\"\n\n# Constant reference in code: ENV_HLAMBDA_CONFIGURATION_LOADER_PREFIX | Default value: hlambda-config.yaml\n# Sets the value for the name of the configuration file that will be loaded.\nHLAMBDA_CONFIGURATION_LOADER_PREFIX=\"hlambda-config.yaml\"\n\n# Constant reference in code: ENV_HLAMBDA_EXPRESS_LOADER_PREFIX | Default value: router.\n# Sets the value for the prefix of the router files that will be loaded.\nHLAMBDA_EXPRESS_LOADER_PREFIX=\"router.\"\n\n# Constant reference in code: ENV_HLAMBDA_ENTRYPOINT_LOADER_PREFIX | Default value: entrypoint.\n# Sets the value for the prefix of the entrypoint files that will be loaded.\nHLAMBDA_ENTRYPOINT_LOADER_PREFIX=\"entrypoint.\"\n\n# Constant reference in code: ENV_HLAMBDA_ENABLE_ENVIRONMENT_BANNER | Default value: false\n# Enables environment banner.\nHLAMBDA_ENABLE_ENVIRONMENT_BANNER=\"false\"\n\n# Constant reference in code: ENV_HLAMBDA_ENVIRONMENT_BANNER_NAME | Default value: \n# Sets name to the environment banner.\nHLAMBDA_ENVIRONMENT_BANNER_NAME=\"\"\n\n# Constant reference in code: ENV_HLAMBDA_ENVIRONMENT_BANNER_MESSAGE | Default value: \n# Sets message to the environment banner.\nHLAMBDA_ENVIRONMENT_BANNER_MESSAGE=\"\"\n\n# Constant reference in code: ENV_HLAMBDA_ENABLE_ENVIRONMENT_BANNER_COLOR | Default value: #fea300\n# Selects color of the environment banner.\nHLAMBDA_ENABLE_ENVIRONMENT_BANNER_COLOR=\"#fea300\"\n\n# Constant reference in code: ENV_HLAMBDA_LIST_OF_PROTECTED_ENV_VARIABLES | Default value: ENV_HLAMBDA_LIST_OF_PROTECTED_ENV_VARIABLES,HLAMBDA_DISABLE_CONSOLE,HLAMBDA_ADMIN_SECRET\n# List of the env variable names that are protected from hlambda config override.\nHLAMBDA_LIST_OF_PROTECTED_ENV_VARIABLES=\"ENV_HLAMBDA_LIST_OF_PROTECTED_ENV_VARIABLES,HLAMBDA_DISABLE_CONSOLE,HLAMBDA_ADMIN_SECRET\"\n\n`;\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <Box\n          sx={{\n            marginTop: 2,\n            marginBottom: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h3\" variant=\"h6\">\n            {`It wouldn't be meta if we didn't also have documentation? :)`}\n          </Typography>\n\n          <div style={{ width: '100%', paddingTop: '20px' }}>\n            <Editor\n              height=\"calc(100vh - 12rem)\"\n              language={'markdown'}\n              defaultValue={content}\n              value={content}\n              theme=\"vs-dark\"\n              readOnly={true}\n              onMount={(editor) => {\n                editor.updateOptions({ readOnly: true });\n              }}\n            />\n          </div>\n        </Box>\n      </Container>\n    </>\n  );\n}\n\nexport default DocumentationPage;\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport TopBar from './../components/top-bar';\n\nimport useFetch from 'use-http';\n\nfunction NewsPage() {\n  const { get, post, response, loading, error } = useFetch();\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <Box\n          sx={{\n            marginTop: 2,\n            marginBottom: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h3\" variant=\"h6\">\n            Roadmap for next release:\n          </Typography>\n          <List>\n            {[\n              '- Add visual studio code for web as the editor for the files.',\n              '- Implement PM2 to handle reloading for zero downtime.',\n              '- Home screen should support console and file viewer at the same time.',\n              '- Force users to handle API errors, and edge cases by providing a solution for managing errors.',\n              '- Tab complete in the shell',\n            ].map((item) => (\n              <ListItem key={item}>\n                <ListItemText primary={item} />\n              </ListItem>\n            ))}\n          </List>\n        </Box>\n        <Divider\n          style={{ paddingTop: '1rem', paddingBottom: '1rem' }}\n        ></Divider>\n      </Container>\n    </>\n  );\n}\n\nexport default NewsPage;\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\nimport ControlPointIcon from '@mui/icons-material/ControlPoint';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nimport Switch from '@mui/material/Switch';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Fab from '@mui/material/Fab';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nimport TopBar from './../components/top-bar';\nimport ConsoleEditor from './../components/editor/Editor';\n\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nimport useLocalStorage from './../hooks/useLocalStorage';\n\nimport AnsiUp from 'ansi_up';\n\nimport { useAuth } from './../context/basicAuthContext';\n\nconst StyledPreCodeTag = styled('pre')(\n  ({ theme }) => `\n  background-color: #000;\n  color: #FFF;\n  overflow-y: auto;\n  padding: 0;\n  height: 30vh;\n  display: block;\n  margin: 0;\n  font-size: 15px;\n`\n);\n\nfunction VsCodeWebPage() {\n  const { get, post, response, loading, error } = useFetch();\n  const [logs, setLogs] = React.useState('');\n  const [autoScroll, setAutoScroll] = React.useState(true);\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const codeRef = React.useRef(null);\n\n  const auth = useAuth();\n\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\n\n  const executeScroll = () => {\n    if (codeRef?.current) {\n      codeRef.current.scrollTop = codeRef?.current?.scrollHeight;\n    }\n  };\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <iframe\n          src={`${process.env.REACT_APP_API_PREFIX}/console/vscode`}\n          id=\"myPortalToSwagger\"\n          className=\"myClassname\"\n          display=\"initial\"\n          position=\"relative\"\n          style={{\n            border: 'none',\n            width: 'inherit',\n            height: '900px',\n            paddingTop: '2rem',\n            paddingBottom: '2rem',\n          }}\n        />\n      </Container>\n      <Fab\n        style={{\n          position: 'fixed',\n          right: '20px',\n          bottom: '20px',\n        }}\n        color=\"secondary\"\n        aria-label=\"Refresh\"\n        onClick={() => {\n          getLogs();\n        }}\n      >\n        <RefreshIcon />\n      </Fab>\n    </>\n  );\n}\n\nexport default VsCodeWebPage;\n","import React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nimport { ToastContainer } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Login from './components/login/Login';\nimport Logout from './components/logout/Logout';\nimport NotFound from './components/not-found/NotFound';\n\nimport HomePage from './views/Home';\nimport CommandsPage from './views/Commands';\nimport ConfigurationPage from './views/Configuration';\nimport RoutesPage from './views/Routes';\nimport LogsPage from './views/Logs';\nimport ConstantsPage from './views/Constants';\nimport ErrorsPage from './views/Errors';\nimport EventsPage from './views/Events';\nimport MetadataPage from './views/Metadata';\nimport SettingsPage from './views/Settings';\nimport DocumentationPage from './views/Docs';\nimport NewsPage from './views/News';\nimport VsCodeWebPage from './views/VsCodeWebPage';\n\n// import DashboardPage from './components/dashboard/Dashboard';\n\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  useLocation,\n  Navigate,\n} from 'react-router-dom';\n\nimport { Provider } from 'use-http';\n\nimport { useAuth } from './context/basicAuthContext';\n\nconst RequireAuth = ({ children }) => {\n  const auth = useAuth();\n  const adminSecret = auth.getToken();\n\n  const location = useLocation();\n  if (\n    adminSecret === '' ||\n    adminSecret === null ||\n    typeof adminSecret === 'undefined'\n  ) {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // Todo: Maybe verify token\n\n  return children;\n};\n\nconst Page = (props) => {\n  React.useEffect(() => {\n    document.title = props.title || '';\n  }, [props.title]);\n  return props.children;\n};\n\nfunction App() {\n  const auth = useAuth();\n\n  const options = {\n    persist: false, // Cache should not persist!!!\n    cachePolicy: 'no-cache',\n    headers: {\n      Accept: 'application/json',\n      'x-hlambda-admin-secret': auth.getToken(),\n    },\n    interceptors: {\n      // every time we make an http request, this will run 1st before the request is made\n      // url, path and route are supplied to the interceptor\n      // request options can be modified and must be returned\n      request: async ({ options, url, path, route }) => {\n        // console.log(auth?.getToken());\n        options.headers['x-hlambda-admin-secret'] = auth.getToken();\n        return options;\n      },\n      // // every time we make an http request, before getting the response back, this will run\n      // response: async ({ response }) => {\n      //   const res = response\n      //   if (res.data) res.data = toCamel(res.data)\n      //   return res\n      // }\n    },\n  };\n\n  return (\n    <Provider url={process.env.REACT_APP_API_URL} options={options}>\n      <BrowserRouter basename={'/console'}>\n        <CssBaseline />\n        <Routes>\n          <Route\n            path=\"/login\"\n            element={\n              <Page title=\"Login | Hlambda\">\n                <Login />\n              </Page>\n            }\n          />\n          <Route\n            path=\"/logout\"\n            element={\n              <Page title=\"Logout | Hlambda\">\n                <Logout />\n              </Page>\n            }\n          />\n\n          <Route\n            index\n            path=\"/\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <HomePage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/code\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <VsCodeWebPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/shell\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <CommandsPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/env\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <ConfigurationPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/routes\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <RoutesPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/logs\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <LogsPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/constants\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <ConstantsPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/errors\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <ErrorsPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/events\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <EventsPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/metadata\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <MetadataPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/documentation\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <DocumentationPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/news\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <NewsPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/settings\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <SettingsPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n\n          {/* <Route\n            path=\"/demo/dashboard\"\n            element={\n              <RequireAuth>\n                <DashboardPage />\n              </RequireAuth>\n            }\n          /> */}\n\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n        <ToastContainer theme=\"dark\" />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\nimport { red, lightBlue } from '@mui/material/colors';\n\nexport const theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: lightBlue[500],\n    },\n    secondary: {\n      main: red[500],\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { ThemeProvider } from '@mui/material/styles';\nimport { theme } from './theme';\nimport { AuthProvider } from './context/basicAuthContext';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </ThemeProvider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}