{"version":3,"sources":["context/basicAuthContext.js","hooks/useLocalStorage.js","components/login/Login.js","components/logout/Logout.js","components/not-found/NotFound.js","components/top-bar/index.js","components/editor/FileSystemNavigator.js","components/editor/Editor.js","views/Home.js","components/my-terminal/index.js","views/Commands.js","views/Configuration.js","views/Routes.js","views/Logs.js","views/Constants.js","views/Errors.js","views/Events.js","views/Metadata.js","views/Settings.js","views/VsCodeWebPage.js","App.js","reportWebVitals.js","theme/index.js","index.js"],"names":["AuthContext","React","createContext","AuthProvider","children","useState","memoryType","setMemoryType","tokenInMem","setTokenInMem","key","initialValue","prefixedKey","process","jsonValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","useLocalStorage","tokenInLocalStorage","setTokenInLocalStorage","signin","newToken","rememberInThisBrowser","a","console","log","signout","setToken","verifySession","insertedToken","axios","get","headers","then","response","catch","error","data","message","toast","results","getToken","Provider","useAuth","useContext","Login","loading","setLoading","setRememberInThisBrowser","navigate","useNavigate","auth","showPassword","setShowPassword","_handleSubmit","event","preventDefault","FormData","currentTarget","_handleRememberInThisBrowserChange","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","Typography","variant","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","name","label","type","id","autoComplete","defaultValue","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","FormControlLabel","control","Checkbox","checked","color","onChange","Button","mb","disabled","CircularProgress","size","Grid","container","item","xs","Link","href","Divider","padding","align","fontWeight","Logout","setTimeout","NotFound","pages","url","ResponsiveAppBar","useFetch","post","anchorElNav","setAnchorElNav","handleCloseNavMenu","AppBar","Toolbar","disableGutters","noWrap","mr","md","flexGrow","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","MenuItem","textAlign","my","ok","success","FileSystemNavigator","valuesParrent","setValuesParrent","root","path","files","values","setValues","handleSelect","nodeIds","splitPaths","split","newDirStructure","firstPath","i","_","index","findIndex","o","length","set","TreeView","defaultCollapseIcon","defaultExpandIcon","overflowY","onNodeSelect","TreeRender","parrent","hasFiles","TreeItem","nodeId","node","idx","newPath","ConsoleEditor","prop","language","defaultFile","editorCodeData","encodingWrite","encodingRead","_handleSaveFileContent","bytes","utf8","encode","encoded","base64","setEditorCodeValue","_handleReload","responseType","text","style","paddingTop","height","includes","substr","theme","FormControl","InputLabel","htmlFor","Input","target","startAdornment","languages","StyledPreCodeTag","styled","Home","logs","setLogs","autoScroll","setAutoScroll","codeRef","useRef","executeScroll","current","scrollTop","scrollHeight","getLogs","ansi_up","AnsiUp","html","ansi_to_html","src","className","border","width","paddingBottom","ref","dangerouslySetInnerHTML","__html","FormGroup","Switch","marginBottom","List","ListItem","ListItemText","primary","Fab","right","bottom","LineType","ColorMode","Terminal","prompt","colorMode","lineData","onInput","startingInputValue","inputHistory","setInputHistory","positionInHistory","setPositionInHistory","carrotPosition","setCarrotPosition","currentLineInput","setCurrentLineInput","lastLineRef","trim","performScrolldown","scrollIntoView","behavior","block","elListeners","document","getElementsByClassName","terminalEl","listener","querySelector","focus","addEventListener","push","forEach","elListener","removeEventListener","renderedLineData","ld","classes","join","substring","placeholder","autoFocus","selectionStart","onKeyDown","keyCode","onKeyUp","Commands","terminalName","setTerminalName","terminalLineData","setTerminalLineData","fetchCurrentWorkingDir","terminalInput","outputString","_executeCommand","toLowerCase","reduce","acc","startsWith","t","match","command","Routes","Logs","Constants","constants","setConstants","constantsBoxRef","getConstantsDefinitions","Errors","errors","setErrors","errorBoxRef","getErrorsDefinitions","Events","Metadata","rowSpacing","columnSpacing","sm","blob","window","URL","createObjectURL","Blob","link","createElement","setAttribute","body","appendChild","click","parentNode","removeChild","fileInput","formData","append","Settings","VsCodeWebPage","RequireAuth","adminSecret","location","useLocation","to","state","from","replace","Page","props","title","App","options","persist","cachePolicy","Accept","interceptors","request","route","basename","element","Configuration","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","palette","mode","main","lightBlue","secondary","red","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.4216c957.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport useLocalStorage from './../hooks/useLocalStorage';\n\n// ---\n\nexport const AuthContext = React.createContext();\n\nexport function AuthProvider({ children }) {\n  const [memoryType, setMemoryType] = React.useState('local-storage'); // options: 'local-storage', 'memory-storage'\n  const [tokenInMem, setTokenInMem] = React.useState('');\n  const [tokenInLocalStorage, setTokenInLocalStorage] = useLocalStorage(\n    process.env.REACT_APP_TOKEN_NAME,\n    ''\n  );\n\n  const getToken = () => {\n    if (memoryType === 'local-storage') {\n      return tokenInLocalStorage;\n    } else {\n      return tokenInMem;\n    }\n  };\n\n  const signin = async (newToken, rememberInThisBrowser) => {\n    if (rememberInThisBrowser) {\n      setMemoryType('local-storage');\n      await setTokenInLocalStorage(newToken);\n    } else {\n      setMemoryType('memory-storage');\n      await setTokenInMem(newToken);\n    }\n    // console.log('Token changed...', token, newToken);\n    console.log('signin');\n  };\n\n  const signout = async () => {\n    if (memoryType === 'local-storage') {\n      setTokenInLocalStorage('');\n    } else {\n      setToken('');\n    }\n    console.log('signout');\n  };\n\n  const verifySession = async (insertedToken) => {\n    const results = await axios\n      .get('/console/api/v1/check-connection', {\n        headers: {\n          'x-hlambda-admin-secret': insertedToken,\n        },\n      })\n      .then((response) => {\n        console.log(response);\n        return true;\n      })\n      .catch((error) => {\n        console.log('[fetch-error]', error);\n        const response = error?.response?.data;\n        console.log(response);\n        if (response?.message) {\n          toast.error(`${response?.message}`);\n        } else if (error) {\n          toast.error(`${error}`);\n        }\n        return false;\n      });\n\n    return results;\n  };\n\n  const value = { getToken, signin, signout, verifySession };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth() {\n  return React.useContext(AuthContext);\n}\n","import { useEffect, useState } from 'react';\n\nconst PREFIX = process.env.REACT_APP_STORAGE_PREFIX;\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = `${PREFIX}:${key}`;\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n    if (jsonValue != null) return JSON.parse(jsonValue);\n    if (typeof initialValue === 'function') {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n    return () => {};\n  }, [prefixedKey, value]);\n\n  return [value, setValue];\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport Container from '@mui/material/Container';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from './../../context/basicAuthContext';\n\nexport default function Login() {\n  const [loading, setLoading] = React.useState(false);\n  const [rememberInThisBrowser, setRememberInThisBrowser] =\n    React.useState(true);\n\n  const navigate = useNavigate();\n  const auth = useAuth();\n  const [showPassword, setShowPassword] = React.useState(false);\n  // const [showInvalidTokenError, setShowInvalidTokenError] = React.useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\n\n  const _handleSubmit = async (event) => {\n    setLoading(true);\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    const isGood = await auth.verifySession(data.get('token'));\n    if (isGood) {\n      await auth.signin(data.get('token'), rememberInThisBrowser);\n      navigate(`/`);\n    } else {\n      setLoading(false);\n    }\n  };\n\n  const _handleRememberInThisBrowserChange = async (event) => {\n    setRememberInThisBrowser(!rememberInThisBrowser);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1 }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={_handleSubmit}\n          noValidate\n          sx={{ mt: 1 }}\n        >\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"token\"\n            label=\"Enter admin-secret\"\n            type={showPassword ? 'text' : 'password'}\n            id=\"token\"\n            autoComplete=\"current-token\"\n            defaultValue={auth.getToken()}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={rememberInThisBrowser}\n                value=\"remember\"\n                color=\"primary\"\n                onChange={_handleRememberInThisBrowserChange}\n              />\n            }\n            label=\"Remember in this browser\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n            disabled={loading}\n          >\n            {loading ? <CircularProgress size={25} color=\"inherit\" /> : 'ENTER'}\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link\n                href={process.env.REACT_APP_CONSOLE_DOCS_URL}\n                variant=\"body2\"\n              >\n                How to set admin secret?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link\n                href={process.env.REACT_APP_CONSOLE_HELP_URL}\n                variant=\"body2\"\n              >\n                {'What is this? Help'}\n              </Link>\n            </Grid>\n          </Grid>\n          <Divider sx={{ marginTop: '2rem' }} />\n          <Grid container>\n            <Grid item xs sx={{ padding: '1rem' }}>\n              <Typography\n                align=\"center\"\n                component=\"h6\"\n                variant=\"inherit\"\n                color=\"text.disabled\"\n                sx={{ fontWeight: '200' }}\n              >\n                {process.env.REACT_APP_VERSION}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\n\nimport useLocalStorage from './../../hooks/useLocalStorage';\n\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from './../../context/basicAuthContext';\n\nexport default function Logout() {\n  const navigate = useNavigate();\n  const auth = useAuth();\n\n  React.useEffect(() => {\n    setTimeout(async () => {\n      await auth.signout(); // Wipe data from local storage\n      navigate(`/login`);\n    }, 1337);\n  }, [navigate]);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1 }}>\n          <LogoutOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Logging you out...\n        </Typography>\n        <Box sx={{ marginTop: '1rem', display: 'flex' }}>\n          <CircularProgress color=\"inherit\" />\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport ErrorOutlinedIcon from '@mui/icons-material/ErrorOutline';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\n\nimport { useNavigate } from 'react-router-dom';\n\nexport default function NotFound() {\n  const navigate = useNavigate();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1 }}>\n          <ErrorOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          404 page not found...\n        </Typography>\n        <Box sx={{ marginTop: '1rem', display: 'flex' }}>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n            onClick={() => {\n              navigate('/');\n            }}\n          >\n            GO BACK\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\n\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SettingsIcon from '@mui/icons-material/Settings';\n\nimport { useNavigate } from 'react-router-dom';\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nconst pages = [\n  {\n    name: 'API',\n    url: '/',\n  },\n  // {\n  //   name: 'Code',\n  //   url: '/code',\n  // },\n  {\n    name: 'Routes',\n    url: '/routes',\n  },\n  {\n    name: 'Shell',\n    url: '/shell',\n  },\n  {\n    name: 'Env',\n    url: '/env',\n  },\n  {\n    name: 'Constants',\n    url: '/constants',\n  },\n  {\n    name: 'Errors',\n    url: '/errors',\n  },\n  // {\n  //   name: 'Events',\n  //   url: '/events',\n  // },\n  {\n    name: 'Logs',\n    url: '/logs',\n  },\n  {\n    name: 'Metadata',\n    url: '/metadata',\n  },\n  // {\n  //   name: 'Settings',\n  //   url: '/settings',\n  // },\n  {\n    name: 'Logout',\n    url: '/logout',\n  },\n];\n\nconst ResponsiveAppBar = () => {\n  const navigate = useNavigate();\n\n  const { get, post, response, loading, error } = useFetch();\n\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n            onClick={() => {\n              navigate('/');\n            }}\n          >\n            Console\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem key={page.name} onClick={handleCloseNavMenu}>\n                  <Typography\n                    onClick={() => {\n                      navigate(page.url);\n                    }}\n                    textAlign=\"center\"\n                  >\n                    {page.name}\n                  </Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n          >\n            Console\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => (\n              <Button\n                key={page.name}\n                onClick={() => {\n                  navigate(page.url);\n                }}\n                sx={{ my: 2, color: 'white', display: 'block' }}\n              >\n                {page.name}\n              </Button>\n            ))}\n          </Box>\n\n          <IconButton\n            size=\"large\"\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={() => {\n              navigate('/settings');\n            }}\n            color=\"inherit\"\n          >\n            <SettingsIcon />\n          </IconButton>\n          <Button\n            variant=\"contained\"\n            onClick={async () => {\n              // Do things...\n              const results = await get('/console/api/v1/trigger-restart');\n              if (response.ok) {\n                toast.success('Server reloading...');\n              } else {\n                toast.error('Request error!');\n              }\n            }}\n            color=\"secondary\"\n          >\n            Reload server\n          </Button>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default ResponsiveAppBar;\n\n// export default function TopBar() {\n//   return (\n//     <React.Fragment>\n//       <AppBar position=\"absolute\" color=\"primary\" sx={{ top: 0 }}>\n//         <Toolbar>\n//           <IconButton color=\"inherit\" aria-label=\"open drawer\">\n//             <MenuIcon />\n//           </IconButton>\n//           <Box sx={{ flexGrow: 1 }} />\n//           <IconButton color=\"inherit\">\n//             <SearchIcon />\n//           </IconButton>\n//           <IconButton color=\"inherit\">\n//             <MoreIcon />\n//           </IconButton>\n//         </Toolbar>\n//       </AppBar>\n//     </React.Fragment>\n//   );\n// }\n","import * as React from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport TreeItem from '@mui/lab/TreeItem';\n\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nimport _ from 'lodash';\n\nexport default function FileSystemNavigator({\n  valuesParrent,\n  setValuesParrent,\n}) {\n  const { get, post, response, loading, error } = useFetch();\n\n  // const [selectedFilePath, setSelectedFilePath] = React.useState('');\n\n  const [values, setValues] = React.useState({\n    root: {\n      name: 'root',\n      path: '.',\n      files: [\n        {\n          name: 'metadata',\n          type: 'directory',\n          files: [\n            {\n              name: 'apps',\n              type: 'directory',\n              files: [\n                {\n                  name: 'wut',\n                  type: 'directory',\n                  files: [],\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  });\n\n  const handleSelect = async (event, nodeIds) => {\n    console.log('selected:', nodeIds);\n    console.log(event);\n\n    const results = await post('/console/api/v1/read-dir', {\n      path: nodeIds,\n    });\n    if (response.ok) {\n      // toast.success('yeey');\n      const splitPaths = nodeIds.split('/');\n      const newDirStructure = {\n        ...values,\n      };\n\n      let firstPath = 'root.files';\n      for (let i = 1; i < splitPaths.length; i++) {\n        const files = _.get(values, firstPath);\n        const index = _.findIndex(files, function (o) {\n          return o.name == splitPaths[i];\n        });\n        firstPath = firstPath + `[${index}].files`;\n        console.log(firstPath);\n      }\n\n      console.log(firstPath);\n\n      _.set(\n        newDirStructure,\n        firstPath,\n        results.map((item) => {\n          return {\n            ...item,\n            files: [],\n          };\n        })\n      );\n\n      setValues(newDirStructure);\n    } else {\n      toast.error('Request errored out...');\n      //setValues({ ...values, editorCodeData: '' });\n    }\n  };\n\n  const TreeRender = (data, parrent = { path: '.', name: 'root' }) => {\n    const hasFiles = data.files.length !== 0;\n    if (hasFiles) {\n      return (\n        <TreeItem key={data.path} nodeId={data.path} label={data.name}>\n          {data.files.map((node, idx) => {\n            const newPath = parrent.path + '/' + node.name;\n            console.log(newPath);\n            return TreeRender(\n              { ...node, path: newPath },\n              { ...node, path: newPath }\n            );\n          })}\n        </TreeItem>\n      );\n    }\n    if (data.type === 'directory') {\n      return (\n        <TreeItem key={data.path} nodeId={data.path} label={data.name}>\n          <TreeItem\n            key={data.path + '-empty'}\n            nodeId={data.path + '-empty'}\n            label={''}\n          />\n        </TreeItem>\n      );\n    }\n    return (\n      <TreeItem\n        key={data.path}\n        nodeId={data.path}\n        onClick={() => {\n          setValuesParrent({\n            ...valuesParrent,\n            path: data.path,\n          });\n        }}\n        label={data.name}\n      ></TreeItem>\n    );\n  };\n\n  return (\n    <>\n      <TreeView\n        aria-label=\"file system navigator\"\n        defaultCollapseIcon={<ExpandMoreIcon />}\n        defaultExpandIcon={<ChevronRightIcon />}\n        sx={{ flexGrow: 1, maxWidth: 400, overflowY: 'auto' }}\n        onNodeSelect={handleSelect}\n      >\n        {loading && <CircularProgress size={10} />}\n        {TreeRender(values.root)}\n      </TreeView>\n    </>\n  );\n}\n","import React from 'react';\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\n\nimport Editor from '@monaco-editor/react';\nimport FileSystemNavigator from './FileSystemNavigator';\n\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nimport utf8 from 'utf8';\nimport base64 from 'base-64';\n\nfunction ConsoleEditor({ language, defaultFile }) {\n  const { get, post, response, loading, error } = useFetch();\n\n  const [values, setValues] = React.useState({\n    path: defaultFile ?? 'metadata/apps/auth/routes/router.auth.js',\n    editorCodeData: '',\n    encodingWrite: 'base64',\n    encodingRead: 'utf-8',\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  function _handleEditorChange(value, event) {\n    //console.log(\"here is the current model value:\", value);\n    //console.log(btoa(`${value}`));\n    // setCodePayloadValue(btoa(`${value}`))\n    setValues({ ...values, editorCodeData: value });\n  }\n\n  const _handleSaveFileContent = async (value, event) => {\n    const bytes = utf8.encode(`${values.editorCodeData}`);\n    const encoded = base64.encode(bytes);\n\n    const results = await post('/console/api/v1/file-edit', {\n      path: values.path,\n      data: encoded,\n      encodingWrite: values.encodingWrite,\n      encodingRead: values.encodingRead,\n    });\n    if (response.ok) {\n      toast.success('Saved!');\n      console.log(results);\n    } else {\n      toast.error('Request errored out...');\n      setEditorCodeValue('');\n    }\n  };\n\n  // Reload the contents of the file\n  const _handleReload = async (value, event) => {\n    await post(\n      '/console/api/v1/file-view',\n      {\n        path: values.path,\n      },\n      { responseType: 'text' }\n    );\n    if (response.ok) {\n      // toast.success('yeey');\n      const text = await response.text();\n      setValues({ ...values, editorCodeData: text });\n      console.log(text);\n    } else {\n      toast.error('Request errored out...');\n      setValues({ ...values, editorCodeData: '' });\n    }\n  };\n\n  // React.useEffect(() => {\n  //   _handleReload();\n  // }, []);\n\n  React.useEffect(() => {\n    _handleReload();\n  }, [values.path]);\n\n  const checkLanguage = () => {\n    if (['.yml', '.yaml'].includes(values.path.substr(-5))) {\n      return 'yaml';\n    }\n    if (['.json'].includes(values.path.substr(-5))) {\n      return 'json';\n    }\n    if (['.js'].includes(values.path.substr(-3))) {\n      return 'javascript';\n    }\n    if (['.ts'].includes(values.path.substr(-3))) {\n      return 'typescript';\n    }\n    if (['.md'].includes(values.path.substr(-3))) {\n      return 'markdown';\n    }\n    return language;\n  };\n\n  return (\n    <>\n      <div style={{ paddingTop: '20px' }}>\n        <Editor\n          height=\"60vh\"\n          language={checkLanguage()}\n          defaultValue={values.editorCodeData}\n          value={values.editorCodeData}\n          onChange={_handleEditorChange}\n          theme=\"vs-dark\"\n        />\n      </div>\n\n      <Divider />\n      <div style={{ paddingTop: '20px' }}>\n        <FormControl fullWidth sx={{ m: 1 }} variant=\"standard\">\n          <InputLabel htmlFor=\"standard-adornment-amount\">Path</InputLabel>\n          <Input\n            id=\"standard-adornment-amount\"\n            value={values.path}\n            onChange={handleChange('path')}\n            variant=\"filled\"\n            startAdornment={<InputAdornment position=\"start\">/</InputAdornment>}\n          />\n        </FormControl>\n      </div>\n      {/* <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={values.encodingWrite}\n        label=\"encodingWrite\"\n        onChange={handleChange('encodingWrite')}\n      >\n        <MenuItem value={'base64'}>Base 64</MenuItem>\n        <MenuItem value={'hex'}>Hex</MenuItem>\n        <MenuItem value={'utf-8'}>utf-8</MenuItem>\n      </Select>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={values.encodingRead}\n        label=\"encodingRead\"\n        onChange={handleChange('encodingRead')}\n      >\n        <MenuItem value={'base64'}>Base 64</MenuItem>\n        <MenuItem value={'hex'}>Hex</MenuItem>\n        <MenuItem value={'utf-8'}>utf-8</MenuItem>\n      </Select> */}\n\n      <Divider />\n      <Grid container>\n        <Grid>\n          <Button variant=\"contained\" onClick={_handleSaveFileContent}>\n            Sve File\n          </Button>\n        </Grid>\n        <Grid>\n          <Button variant=\"contained\" onClick={_handleReload}>\n            Reload File\n          </Button>\n        </Grid>\n        {/* <Grid>\n          <Button variant=\"contained\" onClick={_handleReadDear}>\n            Read Dir\n          </Button>\n        </Grid> */}\n      </Grid>\n      <Divider />\n      <div style={{ paddingTop: '20px' }}>\n        <FileSystemNavigator\n          defaultFile={defaultFile}\n          languages={['.js', '.yml', '.yaml']}\n          setValuesParrent={setValues}\n          valuesParrent={values}\n        ></FileSystemNavigator>\n      </div>\n    </>\n  );\n}\n\nexport default ConsoleEditor;\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\nimport ControlPointIcon from '@mui/icons-material/ControlPoint';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nimport Switch from '@mui/material/Switch';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Fab from '@mui/material/Fab';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nimport TopBar from './../components/top-bar';\nimport ConsoleEditor from './../components/editor/Editor';\n\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nimport useLocalStorage from './../hooks/useLocalStorage';\n\nimport AnsiUp from 'ansi_up';\n\nimport { useAuth } from './../context/basicAuthContext';\n\nconst StyledPreCodeTag = styled('pre')(\n  ({ theme }) => `\n  background-color: #000;\n  color: #FFF;\n  overflow-y: auto;\n  padding: 0;\n  height: 30vh;\n  display: block;\n  margin: 0;\n  font-size: 15px;\n`\n);\n\nfunction Home() {\n  const { get, post, response, loading, error } = useFetch();\n  const [logs, setLogs] = React.useState('');\n  const [autoScroll, setAutoScroll] = React.useState(true);\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const codeRef = React.useRef(null);\n\n  const auth = useAuth();\n\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\n\n  const executeScroll = () => {\n    if (codeRef?.current) {\n      codeRef.current.scrollTop = codeRef?.current?.scrollHeight;\n    }\n  };\n\n  const getLogs = async () => {\n    // Do things...\n    const results = await get('/console/api/v1/logs?type=text');\n    if (response.ok) {\n      // toast.success('yeey');\n      const ansi_up = new AnsiUp();\n      const html = ansi_up.ansi_to_html(results);\n      setLogs(html);\n    } else {\n      toast.error('Request errored out...');\n      setLogs(JSON.stringify(results));\n    }\n    autoScroll && executeScroll();\n  };\n\n  React.useEffect(() => {\n    getLogs();\n  }, []);\n\n  const _handleSwitchChange = (event) => {\n    setAutoScroll(!autoScroll);\n  };\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <TextField\n          margin=\"normal\"\n          required\n          disabled\n          fullWidth\n          name=\"token\"\n          label=\"Admin-secret\"\n          type={showPassword ? 'text' : 'password'}\n          id=\"token\"\n          autoComplete=\"current-token\"\n          defaultValue={auth.getToken()}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <iframe\n          src={`${process.env.REACT_APP_API_PREFIX}/console/docs`}\n          id=\"myPortalToSwagger\"\n          className=\"myClassname\"\n          display=\"initial\"\n          position=\"relative\"\n          style={{\n            border: 'none',\n            width: 'inherit',\n            height: '700px',\n            paddingTop: '2rem',\n            paddingBottom: '2rem',\n          }}\n        />\n\n        <StyledPreCodeTag\n          ref={codeRef}\n          dangerouslySetInnerHTML={{ __html: loading ? 'Loading...' : logs }}\n        ></StyledPreCodeTag>\n\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Switch\n                color=\"warning\"\n                checked={autoScroll}\n                onChange={_handleSwitchChange}\n              />\n            }\n            label=\"Auto scroll to bottom.\"\n          />\n        </FormGroup>\n        <Divider\n          style={{ paddingTop: '1rem', paddingBottom: '1rem' }}\n        ></Divider>\n        <Box\n          sx={{\n            marginTop: 2,\n            marginBottom: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h3\" variant=\"h6\">\n            Roadmap for next release:\n          </Typography>\n          <List>\n            {[\n              '- Add visual studio code for web as the editor for the files.',\n              '- Implement PM2 to handle reloading for zero downtime.',\n              '- Home screen should support console and file viewer at the same time.',\n              '- Force users to handle API errors, and edge cases by providing a solution for managing errors.',\n              '- Tab complete in the shell',\n            ].map((item) => (\n              <ListItem key={item}>\n                <ListItemText primary={item} />\n              </ListItem>\n            ))}\n          </List>\n        </Box>\n      </Container>\n      <Fab\n        style={{\n          position: 'fixed',\n          right: '20px',\n          bottom: '20px',\n        }}\n        color=\"secondary\"\n        aria-label=\"Refresh\"\n        onClick={() => {\n          getLogs();\n        }}\n      >\n        <RefreshIcon />\n      </Fab>\n    </>\n  );\n}\n\nexport default Home;\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  KeyboardEvent,\n  ChangeEvent,\n} from 'react';\nimport './style.css';\n\nexport const LineType = {\n  Input: 'Input',\n  Output: 'Output',\n};\n\nexport const ColorMode = {\n  Light: 'Light',\n  Dark: 'Dark',\n};\n\n// export interface Props {\n//   name?: string\n//   prompt?: string\n//   colorMode?: ColorMode\n//   lineData: Array<{type: LineType, value: string}>\n//   onInput?: ((input: string) => void) | null | undefined,\n//   startingInputValue?: string\n// }\n\nconst Terminal = ({\n  name,\n  prompt,\n  colorMode,\n  lineData,\n  onInput,\n  startingInputValue = '',\n  inputHistory,\n  setInputHistory,\n}) => {\n  // const [inputHistory, setInputHistory] = useState(['']);\n  const [positionInHistory, setPositionInHistory] = useState(0);\n  const [carrotPosition, setCarrotPosition] = useState(0);\n  const [currentLineInput, setCurrentLineInput] = useState('');\n\n  const lastLineRef = useRef();\n\n  const updateCarrotPosition = (event) => {\n    setCarrotPosition(event.target.selectionStart);\n  };\n\n  const updateCurrentLineInput = (event) => {\n    setCurrentLineInput(event.target.value);\n    setCarrotPosition(event.target.selectionStart);\n  };\n\n  React.useEffect(() => {\n    setCurrentLineInput(inputHistory[positionInHistory]);\n  }, [inputHistory, positionInHistory]);\n\n  const handleKeyDown = (event) => {\n    if (event.keyCode == 38 || event.keyCode == 40) {\n      event.preventDefault();\n      // setCarrotPosition();\n      event.keyCode == 38 &&\n        setPositionInHistory(() => {\n          return (\n            (inputHistory.length + (positionInHistory + 1)) %\n            inputHistory.length\n          );\n        });\n      event.keyCode == 40 &&\n        setPositionInHistory(() => {\n          return (\n            (inputHistory.length + (positionInHistory - 1)) %\n            inputHistory.length\n          );\n        });\n      console.log(inputHistory);\n      return;\n    }\n\n    if (onInput != null && event.key === 'Enter') {\n      onInput(currentLineInput);\n      setInputHistory([...inputHistory, currentLineInput]);\n      setPositionInHistory(0);\n      setCurrentLineInput('');\n    }\n  };\n\n  useEffect(() => {\n    setCurrentLineInput(startingInputValue.trim());\n  }, [startingInputValue]);\n\n  // An effect that handles scrolling into view the last line of terminal input or output\n  const performScrolldown = useRef(false);\n  useEffect(() => {\n    if (performScrolldown.current) {\n      // skip scrolldown when the component first loads\n      setTimeout(\n        () =>\n          lastLineRef?.current?.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n          }),\n        500\n      );\n    }\n    performScrolldown.current = true;\n  }, [lineData.length]);\n\n  // We use a hidden input to capture terminal input; make sure the hidden input is focused when clicking anywhere on the terminal\n  useEffect(() => {\n    if (onInput == null) {\n      return;\n    }\n    // keep reference to listeners so we can perform cleanup\n    const elListeners = [];\n    for (const terminalEl of document.getElementsByClassName(\n      'react-terminal-wrapper'\n    )) {\n      const listener = () =>\n        terminalEl?.querySelector('.terminal-hidden-input')?.focus();\n      terminalEl?.addEventListener('click', listener);\n      elListeners.push({ terminalEl, listener });\n    }\n    return function cleanup() {\n      elListeners.forEach((elListener) => {\n        elListener.terminalEl.removeEventListener('click', elListener.listener);\n      });\n    };\n  }, [onInput]);\n\n  const renderedLineData = lineData.map((ld, i) => {\n    const classes = ['react-terminal-line'];\n    if (ld.type === LineType.Input) {\n      classes.push('react-terminal-input');\n    }\n    // `lastLineRef` is used to ensure the terminal scrolls into view to the last line; make sure to add the ref to the last\n    // redendered line if input prompt is not shown, i.e. `onInput` is not declared; see 'render prompt' below\n    if (lineData.length === i + 1 && onInput == null) {\n      return (\n        <span className={classes.join(' ')} key={i} ref={lastLineRef}>\n          {ld.value}\n        </span>\n      );\n    } else {\n      return (\n        <pre className={classes.join(' ')} key={i}>\n          {ld.value}\n        </pre>\n      );\n    }\n  });\n\n  // render prompt\n  if (onInput != null) {\n    renderedLineData.push(\n      <span\n        className=\"react-terminal-line react-terminal-input\"\n        data-terminal-prompt={prompt || '$'}\n        key={lineData.length}\n        ref={lastLineRef}\n      >\n        {currentLineInput.substring(0, carrotPosition)}\n        <span className=\"react-terminal-active-input\"></span>\n        {currentLineInput.substring(carrotPosition)}\n      </span>\n    );\n  }\n\n  const classes = ['react-terminal-wrapper'];\n  if (colorMode === ColorMode.Light) {\n    classes.push('react-terminal-light');\n  }\n  return (\n    <div className={classes.join(' ')} data-terminal-name={name}>\n      <div className=\"react-terminal\">{renderedLineData}</div>\n      <input\n        className=\"terminal-hidden-input\"\n        placeholder=\"Terminal Hidden Input\"\n        value={currentLineInput}\n        autoFocus={onInput != null}\n        onChange={updateCurrentLineInput}\n        onKeyDown={handleKeyDown}\n        onKeyUp={updateCarrotPosition}\n      />\n    </div>\n  );\n};\n\nexport default Terminal;\n","import React from 'react';\nimport useFetch from 'use-http';\n\nimport Container from '@mui/material/Container';\nimport TopBar from './../components/top-bar';\n\nimport Terminal, {\n  ColorMode,\n  LineType,\n} from './../components/my-terminal/index.js';\n\nfunction Commands() {\n  const { get, post, response, loading, error } = useFetch();\n\n  const [terminalName, setTerminalName] = React.useState('...');\n  const [terminalLineData, setTerminalLineData] = React.useState([]);\n  const [inputHistory, setInputHistory] = React.useState(['']);\n\n  // const [terminalState, setTerminalState] = React.useState({\n  //   inputStr: '',\n  // });\n\n  // const _triggerMe = (inputStr) => {\n  //   console.log(inputStr);\n  //   setTerminalState({...terminalState, inputStr})\n  //   this.setState({inputStr});\n  // }\n\n  const fetchCurrentWorkingDir = async (terminalInput) => {\n    const results = await get('/console/api/v1/command-cwd');\n    const outputString = results?.data ? results?.data : 'Error...';\n    return { terminalInput, outputString };\n  };\n\n  React.useEffect(() => {\n    fetchCurrentWorkingDir().then(({ terminalInput, outputString }) => {\n      setTerminalLineData([\n        ...terminalLineData,\n        { type: LineType.Output, value: outputString },\n      ]);\n      setTerminalName(outputString);\n    });\n  }, []);\n\n  const _executeCommand = async (terminalInput) => {\n    if (terminalInput === '') {\n      setTerminalLineData([\n        ...terminalLineData,\n        { type: LineType.Input, value: terminalInput },\n        { type: LineType.Output, value: 'empty command ?' },\n      ]);\n      return;\n    }\n\n    if (\n      ['clear', 'cls', 'exit', 'quit'].includes(terminalInput.toLowerCase())\n    ) {\n      setTerminalLineData([]);\n      return;\n    }\n\n    if (['history'].includes(terminalInput.toLowerCase())) {\n      // Todo: maybe in future pull history from the server side... dnno...\n      // const results = await post('/console/api/v1/command-history');\n      // const outputString = results?.data ? results?.data : 'Error...';\n      // setTerminalLineData([\n      //   ...terminalLineData,\n      //   { type: LineType.Input, value: terminalInput },\n      //   { type: LineType.Output, value: outputString },\n      // ]);\n      setTerminalLineData([\n        ...terminalLineData,\n        { type: LineType.Input, value: terminalInput },\n        {\n          type: LineType.Output,\n          value: inputHistory.reduce((acc, item, index) => {\n            if (index === 0) {\n              return acc;\n            }\n            return acc + `${index}  ${item}\\n`;\n          }, ''),\n        },\n      ]);\n      return;\n    }\n\n    if (terminalInput.toLowerCase().startsWith('cd')) {\n      const t = terminalInput.match(/cd\\s(.+)/);\n      const results = await post('/console/api/v1/command-change-dir', {\n        path: t[1],\n      });\n      const outputString = results?.data ? results?.data : 'Error...';\n      setTerminalLineData([\n        ...terminalLineData,\n        { type: LineType.Input, value: terminalInput },\n        { type: LineType.Output, value: outputString },\n      ]);\n      setTerminalName(outputString);\n      return;\n    }\n\n    if (['pwd', '?', '??', 'help'].includes(terminalInput.toLowerCase())) {\n      fetchCurrentWorkingDir(terminalInput).then(\n        ({ terminalInput, outputString }) => {\n          setTerminalLineData([\n            ...terminalLineData,\n            { type: LineType.Input, value: terminalInput },\n            { type: LineType.Output, value: outputString },\n          ]);\n          setTerminalName(outputString);\n        }\n      );\n      return;\n    }\n\n    // Do things...\n    const results = await post('/console/api/v1/command-request', {\n      command: terminalInput,\n    });\n\n    console.log(results);\n\n    const outputString = results?.data ? results?.data : 'Error...';\n\n    setTerminalLineData([\n      ...terminalLineData,\n      { type: LineType.Input, value: terminalInput },\n      { type: LineType.Output, value: outputString },\n    ]);\n\n    console.log(`New terminal input received: '${terminalInput}'`);\n  };\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <div className=\"container\">\n          <Terminal\n            name={terminalName}\n            colorMode={ColorMode.Dark}\n            lineData={terminalLineData}\n            onInput={_executeCommand}\n            inputHistory={inputHistory}\n            setInputHistory={setInputHistory}\n          />\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default Commands;\n","import React from 'react';\nimport Container from '@mui/material/Container';\n\nimport TopBar from './../components/top-bar';\nimport ConsoleEditor from './../components/editor/Editor';\n\nimport useFetch from 'use-http';\n\nfunction Home() {\n  const { get, post, response, loading, error } = useFetch();\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <ConsoleEditor\n          language=\"yaml\"\n          defaultFile=\"metadata/apps/example_demo_app/hlambda-config.yaml\"\n        />\n      </Container>\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport Container from '@mui/material/Container';\n\nimport TopBar from './../components/top-bar';\nimport ConsoleEditor from './../components/editor/Editor';\n\nimport useFetch from 'use-http';\n\nfunction Routes() {\n  const { get, post, response, loading, error } = useFetch();\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <ConsoleEditor language=\"javascript\" />\n      </Container>\n    </>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport { styled } from '@mui/material/styles';\n\nimport TopBar from './../components/top-bar';\n\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nimport AnsiUp from 'ansi_up';\n\nimport Fab from '@mui/material/Fab';\nimport Switch from '@mui/material/Switch';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nconst StyledPreCodeTag = styled('pre')(\n  ({ theme }) => `\n  background-color: #000;\n  color: #FFF;\n  overflow-y: auto;\n  padding: 0;\n  height: 85vh;\n  display: block;\n  margin: 0;\n  font-size: 15px;\n`\n);\n\nfunction Logs() {\n  const { get, post, response, loading, error } = useFetch();\n  const [logs, setLogs] = React.useState('');\n  const [autoScroll, setAutoScroll] = React.useState(true);\n\n  const codeRef = React.useRef(null);\n\n  const executeScroll = () => {\n    if (codeRef?.current) {\n      codeRef.current.scrollTop = codeRef?.current?.scrollHeight;\n    }\n  };\n\n  const getLogs = async () => {\n    // Do things...\n    const results = await get('/console/api/v1/logs?type=text');\n    if (response.ok) {\n      // toast.success('yeey');\n      const ansi_up = new AnsiUp();\n      const html = ansi_up.ansi_to_html(results);\n      setLogs(html);\n    } else {\n      toast.error('Request errored out...');\n      setLogs(JSON.stringify(results));\n    }\n    autoScroll && executeScroll();\n  };\n\n  React.useEffect(() => {\n    getLogs();\n  }, []);\n\n  const _handleSwitchChange = (event) => {\n    setAutoScroll(!autoScroll);\n  };\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <div style={{ paddingTop: '20px' }}>\n          <StyledPreCodeTag\n            ref={codeRef}\n            dangerouslySetInnerHTML={{ __html: loading ? 'Loading...' : logs }}\n          />\n        </div>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Switch\n                color=\"warning\"\n                checked={autoScroll}\n                onChange={_handleSwitchChange}\n              />\n            }\n            label=\"Auto scroll to bottom.\"\n          />\n        </FormGroup>\n      </Container>\n      <Fab\n        style={{\n          position: 'fixed',\n          right: '20px',\n          bottom: '20px',\n        }}\n        color=\"secondary\"\n        aria-label=\"Refresh\"\n        onClick={() => {\n          getLogs();\n        }}\n      >\n        <RefreshIcon />\n      </Fab>\n    </>\n  );\n}\n\nexport default Logs;\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport { styled } from '@mui/material/styles';\n\nimport TopBar from './../components/top-bar';\n\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nimport Fab from '@mui/material/Fab';\nimport Switch from '@mui/material/Switch';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nconst StyledPreCodeTag = styled('pre')(\n  ({ theme }) => `\n  background-color: #000;\n  color: #FFF;\n  overflow-y: auto;\n  padding: 0;\n  height: 85vh;\n  display: block;\n  margin: 0;\n  font-size: 15px;\n`\n);\n\nfunction Constants() {\n  const { get, post, response, loading, error } = useFetch();\n  const [constants, setConstants] = React.useState('');\n\n  const constantsBoxRef = React.useRef(null);\n\n  const getConstantsDefinitions = async () => {\n    // Do things...\n    const results = await get('/console/api/v1/constants');\n    if (response.ok) {\n      setConstants(JSON.stringify(results, null, 2));\n    } else {\n      toast.error('Request errored out...');\n      setConstants(JSON.stringify(results));\n    }\n  };\n\n  React.useEffect(() => {\n    getConstantsDefinitions();\n  }, []);\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <div style={{ paddingTop: '20px' }}>\n          This is the list of all possible constants defined by the\n          `constants.*.js` files:\n        </div>\n        <div style={{ paddingTop: '20px' }}>\n          <StyledPreCodeTag\n            ref={constantsBoxRef}\n            dangerouslySetInnerHTML={{\n              __html: loading ? 'Loading...' : constants,\n            }}\n          />\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default Constants;\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport { styled } from '@mui/material/styles';\n\nimport TopBar from './../components/top-bar';\n\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nimport Fab from '@mui/material/Fab';\nimport Switch from '@mui/material/Switch';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nconst StyledPreCodeTag = styled('pre')(\n  ({ theme }) => `\n  background-color: #000;\n  color: #FFF;\n  overflow-y: auto;\n  padding: 0;\n  height: 85vh;\n  display: block;\n  margin: 0;\n  font-size: 15px;\n`\n);\n\nfunction Errors() {\n  const { get, post, response, loading, error } = useFetch();\n  const [errors, setErrors] = React.useState('');\n\n  const errorBoxRef = React.useRef(null);\n\n  const getErrorsDefinitions = async () => {\n    // Do things...\n    const results = await get('/console/api/v1/errors');\n    if (response.ok) {\n      setErrors(JSON.stringify(results, null, 2));\n    } else {\n      toast.error('Request errored out...');\n      setErrors(JSON.stringify(results));\n    }\n  };\n\n  React.useEffect(() => {\n    getErrorsDefinitions();\n  }, []);\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <div style={{ paddingTop: '20px' }}>\n          This is the list of all possible errors defined by the `errors.*.js`\n          files:\n        </div>\n        <div style={{ paddingTop: '20px' }}>\n          <StyledPreCodeTag\n            ref={errorBoxRef}\n            dangerouslySetInnerHTML={{\n              __html: loading ? 'Loading...' : errors,\n            }}\n          />\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default Errors;\n","import React from 'react';\nimport Container from '@mui/material/Container';\n\nimport TopBar from './../components/top-bar';\nimport ConsoleEditor from './../components/editor/Editor';\n\nimport useFetch from 'use-http';\n\nfunction Events() {\n  const { get, post, response, loading, error } = useFetch();\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <ConsoleEditor language=\"javascript\" />\n      </Container>\n    </>\n  );\n}\n\nexport default Events;\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\n\nimport TopBar from './../components/top-bar';\n\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nfunction Metadata() {\n  const { get, post, response, loading, error } = useFetch();\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n          <Grid item xs={12}>\n            Here you can import / export metadata...\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={async () => {\n                // Do things...\n                const results = await post('/console/api/v1/metadata/export');\n                if (response.ok) {\n                  toast.success('Metadata exported');\n                  const blob = await response.blob();\n                  // 2. Create blob link to download\n                  const url = window.URL.createObjectURL(new Blob([blob]));\n                  const link = document.createElement('a');\n                  link.href = url;\n                  link.setAttribute('download', `sample.zip`);\n                  // 3. Append to html page\n                  document.body.appendChild(link);\n                  // 4. Force download\n                  link.click();\n                  // 5. Clean up and remove the link\n                  link.parentNode.removeChild(link);\n                } else {\n                  toast.error('Error while exporting metadata!');\n                }\n              }}\n            >\n              Export metadata\n            </Button>\n          </Grid>\n          <Divider />\n          <Grid item xs={12}>\n            <input id=\"your-file-input\" type=\"file\" name=\"metadata\"></input>\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={async () => {\n                const fileInput = document.querySelector('#your-file-input');\n                const formData = new FormData();\n\n                formData.append('metadata', fileInput.files[0]);\n                // Do things...\n                const results = await post(\n                  '/console/api/v1/metadata/import',\n                  formData\n                );\n                if (response.ok) {\n                  toast.success('Metadata imported');\n                } else {\n                  toast.error('Error while importing metadata!');\n                }\n              }}\n            >\n              Import metadata\n            </Button>\n          </Grid>\n          <Divider />\n          <Grid item xs={12}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={async () => {\n                // Do things...\n                const results = await get('/console/api/v1/metadata/clear');\n                if (response.ok) {\n                  toast.success('Metadata cleared');\n                } else {\n                  toast.error('Error while clearing metadata!');\n                }\n              }}\n            >\n              Clear metadata\n            </Button>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default Metadata;\n","import React from 'react';\nimport Container from '@mui/material/Container';\n\nimport TopBar from './../components/top-bar';\n\nimport useFetch from 'use-http';\n\nfunction Settings() {\n  const { get, post, response, loading, error } = useFetch();\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        Settings...\n      </Container>\n    </>\n  );\n}\n\nexport default Settings;\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\nimport ControlPointIcon from '@mui/icons-material/ControlPoint';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nimport Switch from '@mui/material/Switch';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Fab from '@mui/material/Fab';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nimport TopBar from './../components/top-bar';\nimport ConsoleEditor from './../components/editor/Editor';\n\nimport useFetch from 'use-http';\nimport { toast } from 'react-toastify';\n\nimport useLocalStorage from './../hooks/useLocalStorage';\n\nimport AnsiUp from 'ansi_up';\n\nimport { useAuth } from './../context/basicAuthContext';\n\nconst StyledPreCodeTag = styled('pre')(\n  ({ theme }) => `\n  background-color: #000;\n  color: #FFF;\n  overflow-y: auto;\n  padding: 0;\n  height: 30vh;\n  display: block;\n  margin: 0;\n  font-size: 15px;\n`\n);\n\nfunction VsCodeWebPage() {\n  const { get, post, response, loading, error } = useFetch();\n  const [logs, setLogs] = React.useState('');\n  const [autoScroll, setAutoScroll] = React.useState(true);\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const codeRef = React.useRef(null);\n\n  const auth = useAuth();\n\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\n\n  const executeScroll = () => {\n    if (codeRef?.current) {\n      codeRef.current.scrollTop = codeRef?.current?.scrollHeight;\n    }\n  };\n\n  return (\n    <>\n      <TopBar />\n      <Container maxWidth=\"xl\" style={{ paddingTop: '20px' }}>\n        <iframe\n          src={`${process.env.REACT_APP_API_PREFIX}/console/vscode`}\n          id=\"myPortalToSwagger\"\n          className=\"myClassname\"\n          display=\"initial\"\n          position=\"relative\"\n          style={{\n            border: 'none',\n            width: 'inherit',\n            height: '900px',\n            paddingTop: '2rem',\n            paddingBottom: '2rem',\n          }}\n        />\n      </Container>\n      <Fab\n        style={{\n          position: 'fixed',\n          right: '20px',\n          bottom: '20px',\n        }}\n        color=\"secondary\"\n        aria-label=\"Refresh\"\n        onClick={() => {\n          getLogs();\n        }}\n      >\n        <RefreshIcon />\n      </Fab>\n    </>\n  );\n}\n\nexport default VsCodeWebPage;\n","import React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nimport { ToastContainer } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\n//import './app.css';\n\nimport Login from './components/login/Login';\nimport Logout from './components/logout/Logout';\nimport NotFound from './components/not-found/NotFound';\n\nimport HomePage from './views/Home';\nimport CommandsPage from './views/Commands';\nimport ConfigurationPage from './views/Configuration';\nimport RoutesPage from './views/Routes';\nimport LogsPage from './views/Logs';\nimport ConstantsPage from './views/Constants';\nimport ErrorsPage from './views/Errors';\nimport EventsPage from './views/Events';\nimport MetadataPage from './views/Metadata';\nimport SettingsPage from './views/Settings';\nimport VsCodeWebPage from './views/VsCodeWebPage';\n\n//import DashboardPage from './components/dashboard/Dashboard';\n\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  useLocation,\n  Navigate,\n} from 'react-router-dom';\n\nimport { Provider } from 'use-http';\n\nimport { useAuth } from './context/basicAuthContext';\n\nconst RequireAuth = ({ children }) => {\n  const auth = useAuth();\n  const adminSecret = auth.getToken();\n\n  const location = useLocation();\n  if (\n    adminSecret === '' ||\n    adminSecret === null ||\n    typeof adminSecret === 'undefined'\n  ) {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // Todo: Maybe verify token\n\n  return children;\n};\n\nconst Page = (props) => {\n  React.useEffect(() => {\n    document.title = props.title || '';\n  }, [props.title]);\n  return props.children;\n};\n\nfunction App() {\n  const auth = useAuth();\n\n  const options = {\n    persist: false, // Cache should not persist!!!\n    cachePolicy: 'no-cache',\n    headers: {\n      Accept: 'application/json',\n      'x-hlambda-admin-secret': auth.getToken(),\n    },\n    interceptors: {\n      // every time we make an http request, this will run 1st before the request is made\n      // url, path and route are supplied to the interceptor\n      // request options can be modified and must be returned\n      request: async ({ options, url, path, route }) => {\n        // console.log(auth?.getToken());\n        options.headers['x-hlambda-admin-secret'] = auth.getToken();\n        return options;\n      },\n      // // every time we make an http request, before getting the response back, this will run\n      // response: async ({ response }) => {\n      //   const res = response\n      //   if (res.data) res.data = toCamel(res.data)\n      //   return res\n      // }\n    },\n  };\n\n  return (\n    <Provider url={process.env.REACT_APP_API_URL} options={options}>\n      <BrowserRouter basename={'/console'}>\n        <CssBaseline />\n        <Routes>\n          <Route\n            path=\"/login\"\n            element={\n              <Page title=\"Login | Hlambda\">\n                <Login />\n              </Page>\n            }\n          />\n          <Route\n            path=\"/logout\"\n            element={\n              <Page title=\"Logout | Hlambda\">\n                <Logout />\n              </Page>\n            }\n          />\n\n          <Route\n            index\n            path=\"/\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <HomePage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/code\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <VsCodeWebPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/shell\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <CommandsPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/env\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <ConfigurationPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/routes\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <RoutesPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/logs\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <LogsPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/constants\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <ConstantsPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/errors\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <ErrorsPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/events\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <EventsPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/metadata\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <MetadataPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n          <Route\n            path=\"/settings\"\n            element={\n              <RequireAuth>\n                <Page title=\"Console | Hlambda\">\n                  <SettingsPage />\n                </Page>\n              </RequireAuth>\n            }\n          />\n\n          {/* <Route\n            path=\"/demo/dashboard\"\n            element={\n              <RequireAuth>\n                <DashboardPage />\n              </RequireAuth>\n            }\n          /> */}\n\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n        <ToastContainer theme=\"dark\" />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\nimport { red, lightBlue } from '@mui/material/colors';\n\nexport const theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: lightBlue[500],\n    },\n    secondary: {\n      main: red[500],\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { ThemeProvider } from '@mui/material/styles';\nimport { theme } from './theme';\n\nimport { AuthProvider } from './context/basicAuthContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}